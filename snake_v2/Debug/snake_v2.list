
snake_v2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000230c  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080023c4  080023c4  000123c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002404  08002404  00020074  2**0
                  CONTENTS
  4 .ARM          00000000  08002404  08002404  00020074  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002404  08002404  00020074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002404  08002404  00012404  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002408  08002408  00012408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  0800240c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000084  20000074  08002480  00020074  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000f8  08002480  000200f8  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020074  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000bac7  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001cd1  00000000  00000000  0002bb63  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000a90  00000000  00000000  0002d838  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000998  00000000  00000000  0002e2c8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000032e8  00000000  00000000  0002ec60  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000091b0  00000000  00000000  00031f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0007ef71  00000000  00000000  0003b0f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000ba069  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002634  00000000  00000000  000ba0e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000074 	.word	0x20000074
 80000d8:	00000000 	.word	0x00000000
 80000dc:	080023ac 	.word	0x080023ac

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	20000078 	.word	0x20000078
 80000fc:	080023ac 	.word	0x080023ac

08000100 <__udivsi3>:
 8000100:	2200      	movs	r2, #0
 8000102:	0843      	lsrs	r3, r0, #1
 8000104:	428b      	cmp	r3, r1
 8000106:	d374      	bcc.n	80001f2 <__udivsi3+0xf2>
 8000108:	0903      	lsrs	r3, r0, #4
 800010a:	428b      	cmp	r3, r1
 800010c:	d35f      	bcc.n	80001ce <__udivsi3+0xce>
 800010e:	0a03      	lsrs	r3, r0, #8
 8000110:	428b      	cmp	r3, r1
 8000112:	d344      	bcc.n	800019e <__udivsi3+0x9e>
 8000114:	0b03      	lsrs	r3, r0, #12
 8000116:	428b      	cmp	r3, r1
 8000118:	d328      	bcc.n	800016c <__udivsi3+0x6c>
 800011a:	0c03      	lsrs	r3, r0, #16
 800011c:	428b      	cmp	r3, r1
 800011e:	d30d      	bcc.n	800013c <__udivsi3+0x3c>
 8000120:	22ff      	movs	r2, #255	; 0xff
 8000122:	0209      	lsls	r1, r1, #8
 8000124:	ba12      	rev	r2, r2
 8000126:	0c03      	lsrs	r3, r0, #16
 8000128:	428b      	cmp	r3, r1
 800012a:	d302      	bcc.n	8000132 <__udivsi3+0x32>
 800012c:	1212      	asrs	r2, r2, #8
 800012e:	0209      	lsls	r1, r1, #8
 8000130:	d065      	beq.n	80001fe <__udivsi3+0xfe>
 8000132:	0b03      	lsrs	r3, r0, #12
 8000134:	428b      	cmp	r3, r1
 8000136:	d319      	bcc.n	800016c <__udivsi3+0x6c>
 8000138:	e000      	b.n	800013c <__udivsi3+0x3c>
 800013a:	0a09      	lsrs	r1, r1, #8
 800013c:	0bc3      	lsrs	r3, r0, #15
 800013e:	428b      	cmp	r3, r1
 8000140:	d301      	bcc.n	8000146 <__udivsi3+0x46>
 8000142:	03cb      	lsls	r3, r1, #15
 8000144:	1ac0      	subs	r0, r0, r3
 8000146:	4152      	adcs	r2, r2
 8000148:	0b83      	lsrs	r3, r0, #14
 800014a:	428b      	cmp	r3, r1
 800014c:	d301      	bcc.n	8000152 <__udivsi3+0x52>
 800014e:	038b      	lsls	r3, r1, #14
 8000150:	1ac0      	subs	r0, r0, r3
 8000152:	4152      	adcs	r2, r2
 8000154:	0b43      	lsrs	r3, r0, #13
 8000156:	428b      	cmp	r3, r1
 8000158:	d301      	bcc.n	800015e <__udivsi3+0x5e>
 800015a:	034b      	lsls	r3, r1, #13
 800015c:	1ac0      	subs	r0, r0, r3
 800015e:	4152      	adcs	r2, r2
 8000160:	0b03      	lsrs	r3, r0, #12
 8000162:	428b      	cmp	r3, r1
 8000164:	d301      	bcc.n	800016a <__udivsi3+0x6a>
 8000166:	030b      	lsls	r3, r1, #12
 8000168:	1ac0      	subs	r0, r0, r3
 800016a:	4152      	adcs	r2, r2
 800016c:	0ac3      	lsrs	r3, r0, #11
 800016e:	428b      	cmp	r3, r1
 8000170:	d301      	bcc.n	8000176 <__udivsi3+0x76>
 8000172:	02cb      	lsls	r3, r1, #11
 8000174:	1ac0      	subs	r0, r0, r3
 8000176:	4152      	adcs	r2, r2
 8000178:	0a83      	lsrs	r3, r0, #10
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x82>
 800017e:	028b      	lsls	r3, r1, #10
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0a43      	lsrs	r3, r0, #9
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x8e>
 800018a:	024b      	lsls	r3, r1, #9
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0a03      	lsrs	r3, r0, #8
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x9a>
 8000196:	020b      	lsls	r3, r1, #8
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	d2cd      	bcs.n	800013a <__udivsi3+0x3a>
 800019e:	09c3      	lsrs	r3, r0, #7
 80001a0:	428b      	cmp	r3, r1
 80001a2:	d301      	bcc.n	80001a8 <__udivsi3+0xa8>
 80001a4:	01cb      	lsls	r3, r1, #7
 80001a6:	1ac0      	subs	r0, r0, r3
 80001a8:	4152      	adcs	r2, r2
 80001aa:	0983      	lsrs	r3, r0, #6
 80001ac:	428b      	cmp	r3, r1
 80001ae:	d301      	bcc.n	80001b4 <__udivsi3+0xb4>
 80001b0:	018b      	lsls	r3, r1, #6
 80001b2:	1ac0      	subs	r0, r0, r3
 80001b4:	4152      	adcs	r2, r2
 80001b6:	0943      	lsrs	r3, r0, #5
 80001b8:	428b      	cmp	r3, r1
 80001ba:	d301      	bcc.n	80001c0 <__udivsi3+0xc0>
 80001bc:	014b      	lsls	r3, r1, #5
 80001be:	1ac0      	subs	r0, r0, r3
 80001c0:	4152      	adcs	r2, r2
 80001c2:	0903      	lsrs	r3, r0, #4
 80001c4:	428b      	cmp	r3, r1
 80001c6:	d301      	bcc.n	80001cc <__udivsi3+0xcc>
 80001c8:	010b      	lsls	r3, r1, #4
 80001ca:	1ac0      	subs	r0, r0, r3
 80001cc:	4152      	adcs	r2, r2
 80001ce:	08c3      	lsrs	r3, r0, #3
 80001d0:	428b      	cmp	r3, r1
 80001d2:	d301      	bcc.n	80001d8 <__udivsi3+0xd8>
 80001d4:	00cb      	lsls	r3, r1, #3
 80001d6:	1ac0      	subs	r0, r0, r3
 80001d8:	4152      	adcs	r2, r2
 80001da:	0883      	lsrs	r3, r0, #2
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xe4>
 80001e0:	008b      	lsls	r3, r1, #2
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	0843      	lsrs	r3, r0, #1
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xf0>
 80001ec:	004b      	lsls	r3, r1, #1
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	1a41      	subs	r1, r0, r1
 80001f4:	d200      	bcs.n	80001f8 <__udivsi3+0xf8>
 80001f6:	4601      	mov	r1, r0
 80001f8:	4152      	adcs	r2, r2
 80001fa:	4610      	mov	r0, r2
 80001fc:	4770      	bx	lr
 80001fe:	e7ff      	b.n	8000200 <__udivsi3+0x100>
 8000200:	b501      	push	{r0, lr}
 8000202:	2000      	movs	r0, #0
 8000204:	f000 f806 	bl	8000214 <__aeabi_idiv0>
 8000208:	bd02      	pop	{r1, pc}
 800020a:	46c0      	nop			; (mov r8, r8)

0800020c <__aeabi_uidivmod>:
 800020c:	2900      	cmp	r1, #0
 800020e:	d0f7      	beq.n	8000200 <__udivsi3+0x100>
 8000210:	e776      	b.n	8000100 <__udivsi3>
 8000212:	4770      	bx	lr

08000214 <__aeabi_idiv0>:
 8000214:	4770      	bx	lr
 8000216:	46c0      	nop			; (mov r8, r8)

08000218 <__aeabi_lmul>:
 8000218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800021a:	46ce      	mov	lr, r9
 800021c:	4647      	mov	r7, r8
 800021e:	0415      	lsls	r5, r2, #16
 8000220:	0c2d      	lsrs	r5, r5, #16
 8000222:	002e      	movs	r6, r5
 8000224:	b580      	push	{r7, lr}
 8000226:	0407      	lsls	r7, r0, #16
 8000228:	0c14      	lsrs	r4, r2, #16
 800022a:	0c3f      	lsrs	r7, r7, #16
 800022c:	4699      	mov	r9, r3
 800022e:	0c03      	lsrs	r3, r0, #16
 8000230:	437e      	muls	r6, r7
 8000232:	435d      	muls	r5, r3
 8000234:	4367      	muls	r7, r4
 8000236:	4363      	muls	r3, r4
 8000238:	197f      	adds	r7, r7, r5
 800023a:	0c34      	lsrs	r4, r6, #16
 800023c:	19e4      	adds	r4, r4, r7
 800023e:	469c      	mov	ip, r3
 8000240:	42a5      	cmp	r5, r4
 8000242:	d903      	bls.n	800024c <__aeabi_lmul+0x34>
 8000244:	2380      	movs	r3, #128	; 0x80
 8000246:	025b      	lsls	r3, r3, #9
 8000248:	4698      	mov	r8, r3
 800024a:	44c4      	add	ip, r8
 800024c:	464b      	mov	r3, r9
 800024e:	4343      	muls	r3, r0
 8000250:	4351      	muls	r1, r2
 8000252:	0c25      	lsrs	r5, r4, #16
 8000254:	0436      	lsls	r6, r6, #16
 8000256:	4465      	add	r5, ip
 8000258:	0c36      	lsrs	r6, r6, #16
 800025a:	0424      	lsls	r4, r4, #16
 800025c:	19a4      	adds	r4, r4, r6
 800025e:	195b      	adds	r3, r3, r5
 8000260:	1859      	adds	r1, r3, r1
 8000262:	0020      	movs	r0, r4
 8000264:	bc0c      	pop	{r2, r3}
 8000266:	4690      	mov	r8, r2
 8000268:	4699      	mov	r9, r3
 800026a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800026c <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 800026c:	b590      	push	{r4, r7, lr}
 800026e:	b089      	sub	sp, #36	; 0x24
 8000270:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000272:	240c      	movs	r4, #12
 8000274:	193b      	adds	r3, r7, r4
 8000276:	0018      	movs	r0, r3
 8000278:	2314      	movs	r3, #20
 800027a:	001a      	movs	r2, r3
 800027c:	2100      	movs	r1, #0
 800027e:	f001 ffdf 	bl	8002240 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000282:	4b3f      	ldr	r3, [pc, #252]	; (8000380 <MX_GPIO_Init+0x114>)
 8000284:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000286:	4b3e      	ldr	r3, [pc, #248]	; (8000380 <MX_GPIO_Init+0x114>)
 8000288:	2102      	movs	r1, #2
 800028a:	430a      	orrs	r2, r1
 800028c:	635a      	str	r2, [r3, #52]	; 0x34
 800028e:	4b3c      	ldr	r3, [pc, #240]	; (8000380 <MX_GPIO_Init+0x114>)
 8000290:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000292:	2202      	movs	r2, #2
 8000294:	4013      	ands	r3, r2
 8000296:	60bb      	str	r3, [r7, #8]
 8000298:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800029a:	4b39      	ldr	r3, [pc, #228]	; (8000380 <MX_GPIO_Init+0x114>)
 800029c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800029e:	4b38      	ldr	r3, [pc, #224]	; (8000380 <MX_GPIO_Init+0x114>)
 80002a0:	2104      	movs	r1, #4
 80002a2:	430a      	orrs	r2, r1
 80002a4:	635a      	str	r2, [r3, #52]	; 0x34
 80002a6:	4b36      	ldr	r3, [pc, #216]	; (8000380 <MX_GPIO_Init+0x114>)
 80002a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002aa:	2204      	movs	r2, #4
 80002ac:	4013      	ands	r3, r2
 80002ae:	607b      	str	r3, [r7, #4]
 80002b0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80002b2:	4b33      	ldr	r3, [pc, #204]	; (8000380 <MX_GPIO_Init+0x114>)
 80002b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002b6:	4b32      	ldr	r3, [pc, #200]	; (8000380 <MX_GPIO_Init+0x114>)
 80002b8:	2101      	movs	r1, #1
 80002ba:	430a      	orrs	r2, r1
 80002bc:	635a      	str	r2, [r3, #52]	; 0x34
 80002be:	4b30      	ldr	r3, [pc, #192]	; (8000380 <MX_GPIO_Init+0x114>)
 80002c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80002c2:	2201      	movs	r2, #1
 80002c4:	4013      	ands	r3, r2
 80002c6:	603b      	str	r3, [r7, #0]
 80002c8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, WIERSZ_0_Pin|WIERSZ_1_Pin|WIERSZ_2_Pin|WIERSZ_3_Pin 
 80002ca:	492e      	ldr	r1, [pc, #184]	; (8000384 <MX_GPIO_Init+0x118>)
 80002cc:	23a0      	movs	r3, #160	; 0xa0
 80002ce:	05db      	lsls	r3, r3, #23
 80002d0:	2200      	movs	r2, #0
 80002d2:	0018      	movs	r0, r3
 80002d4:	f001 f82c 	bl	8001330 <HAL_GPIO_WritePin>
                          |KOLUMNA_7_Pin|KOLUMNA_6_Pin|KOLUMNA_5_Pin|KOLUMNA_4_Pin 
                          |KOLUMNA_3_Pin|KOLUMNA_2_Pin|KOLUMNA_1_Pin|KOLUMNA_0_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : PB9 PB0 PB1 PB2 
                           PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2 
 80002d8:	193b      	adds	r3, r7, r4
 80002da:	4a2b      	ldr	r2, [pc, #172]	; (8000388 <MX_GPIO_Init+0x11c>)
 80002dc:	601a      	str	r2, [r3, #0]
                          |GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80002de:	193b      	adds	r3, r7, r4
 80002e0:	2203      	movs	r2, #3
 80002e2:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80002e4:	193b      	adds	r3, r7, r4
 80002e6:	2200      	movs	r2, #0
 80002e8:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80002ea:	193b      	adds	r3, r7, r4
 80002ec:	4a27      	ldr	r2, [pc, #156]	; (800038c <MX_GPIO_Init+0x120>)
 80002ee:	0019      	movs	r1, r3
 80002f0:	0010      	movs	r0, r2
 80002f2:	f000 feb9 	bl	8001068 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC14 PC15 PC6 */
  GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_6;
 80002f6:	193b      	adds	r3, r7, r4
 80002f8:	4a25      	ldr	r2, [pc, #148]	; (8000390 <MX_GPIO_Init+0x124>)
 80002fa:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80002fc:	193b      	adds	r3, r7, r4
 80002fe:	2203      	movs	r2, #3
 8000300:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000302:	193b      	adds	r3, r7, r4
 8000304:	2200      	movs	r2, #0
 8000306:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000308:	193b      	adds	r3, r7, r4
 800030a:	4a22      	ldr	r2, [pc, #136]	; (8000394 <MX_GPIO_Init+0x128>)
 800030c:	0019      	movs	r1, r3
 800030e:	0010      	movs	r0, r2
 8000310:	f000 feaa 	bl	8001068 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin PAPin 
                           PAPin PAPin PAPin PAPin 
                           PAPin PAPin PAPin PAPin 
                           PAPin PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = WIERSZ_0_Pin|WIERSZ_1_Pin|WIERSZ_2_Pin|WIERSZ_3_Pin 
 8000314:	193b      	adds	r3, r7, r4
 8000316:	4a1b      	ldr	r2, [pc, #108]	; (8000384 <MX_GPIO_Init+0x118>)
 8000318:	601a      	str	r2, [r3, #0]
                          |WIERSZ_4_Pin|WIERSZ_5_Pin|WIERSZ_6_Pin|WIERSZ_7_Pin 
                          |KOLUMNA_7_Pin|KOLUMNA_6_Pin|KOLUMNA_5_Pin|KOLUMNA_4_Pin 
                          |KOLUMNA_3_Pin|KOLUMNA_2_Pin|KOLUMNA_1_Pin|KOLUMNA_0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800031a:	193b      	adds	r3, r7, r4
 800031c:	2201      	movs	r2, #1
 800031e:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000320:	193b      	adds	r3, r7, r4
 8000322:	2200      	movs	r2, #0
 8000324:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000326:	193b      	adds	r3, r7, r4
 8000328:	2200      	movs	r2, #0
 800032a:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800032c:	193a      	adds	r2, r7, r4
 800032e:	23a0      	movs	r3, #160	; 0xa0
 8000330:	05db      	lsls	r3, r3, #23
 8000332:	0011      	movs	r1, r2
 8000334:	0018      	movs	r0, r3
 8000336:	f000 fe97 	bl	8001068 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin PBPin 
                           PBPin */
  GPIO_InitStruct.Pin = SW_START_Pin|SW_RIGHT_Pin|SW_DOWN_Pin|SW_LEFT_Pin 
 800033a:	193b      	adds	r3, r7, r4
 800033c:	22f8      	movs	r2, #248	; 0xf8
 800033e:	601a      	str	r2, [r3, #0]
                          |SW_UP_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000340:	193b      	adds	r3, r7, r4
 8000342:	4a15      	ldr	r2, [pc, #84]	; (8000398 <MX_GPIO_Init+0x12c>)
 8000344:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000346:	193b      	adds	r3, r7, r4
 8000348:	2201      	movs	r2, #1
 800034a:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800034c:	193b      	adds	r3, r7, r4
 800034e:	4a0f      	ldr	r2, [pc, #60]	; (800038c <MX_GPIO_Init+0x120>)
 8000350:	0019      	movs	r1, r3
 8000352:	0010      	movs	r0, r2
 8000354:	f000 fe88 	bl	8001068 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI2_3_IRQn, 0, 0);
 8000358:	2200      	movs	r2, #0
 800035a:	2100      	movs	r1, #0
 800035c:	2006      	movs	r0, #6
 800035e:	f000 fe51 	bl	8001004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 8000362:	2006      	movs	r0, #6
 8000364:	f000 fe63 	bl	800102e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 8000368:	2200      	movs	r2, #0
 800036a:	2100      	movs	r1, #0
 800036c:	2007      	movs	r0, #7
 800036e:	f000 fe49 	bl	8001004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8000372:	2007      	movs	r0, #7
 8000374:	f000 fe5b 	bl	800102e <HAL_NVIC_EnableIRQ>

}
 8000378:	46c0      	nop			; (mov r8, r8)
 800037a:	46bd      	mov	sp, r7
 800037c:	b009      	add	sp, #36	; 0x24
 800037e:	bd90      	pop	{r4, r7, pc}
 8000380:	40021000 	.word	0x40021000
 8000384:	0000ffff 	.word	0x0000ffff
 8000388:	00000307 	.word	0x00000307
 800038c:	50000400 	.word	0x50000400
 8000390:	0000c040 	.word	0x0000c040
 8000394:	50000800 	.word	0x50000800
 8000398:	10210000 	.word	0x10210000

0800039c <HAL_GPIO_EXTI_Falling_Callback>:

/* USER CODE BEGIN 2 */
void HAL_GPIO_EXTI_Falling_Callback(uint16_t GPIO_Pin) {
 800039c:	b580      	push	{r7, lr}
 800039e:	b082      	sub	sp, #8
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	0002      	movs	r2, r0
 80003a4:	1dbb      	adds	r3, r7, #6
 80003a6:	801a      	strh	r2, [r3, #0]
	switch (GPIO_Pin) {
 80003a8:	1dbb      	adds	r3, r7, #6
 80003aa:	881b      	ldrh	r3, [r3, #0]
 80003ac:	2b20      	cmp	r3, #32
 80003ae:	d015      	beq.n	80003dc <HAL_GPIO_EXTI_Falling_Callback+0x40>
 80003b0:	dc04      	bgt.n	80003bc <HAL_GPIO_EXTI_Falling_Callback+0x20>
 80003b2:	2b08      	cmp	r3, #8
 80003b4:	d02a      	beq.n	800040c <HAL_GPIO_EXTI_Falling_Callback+0x70>
 80003b6:	2b10      	cmp	r3, #16
 80003b8:	d020      	beq.n	80003fc <HAL_GPIO_EXTI_Falling_Callback+0x60>
		if (which_sw != LEFT) which_sw = RIGHT;
		break;
	case SW_START_Pin:
		break;
	}
}
 80003ba:	e02e      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
	switch (GPIO_Pin) {
 80003bc:	2b40      	cmp	r3, #64	; 0x40
 80003be:	d015      	beq.n	80003ec <HAL_GPIO_EXTI_Falling_Callback+0x50>
 80003c0:	2b80      	cmp	r3, #128	; 0x80
 80003c2:	d000      	beq.n	80003c6 <HAL_GPIO_EXTI_Falling_Callback+0x2a>
}
 80003c4:	e029      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
		if (which_sw != DOWN) which_sw = UP;
 80003c6:	4b17      	ldr	r3, [pc, #92]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003c8:	781b      	ldrb	r3, [r3, #0]
 80003ca:	2b77      	cmp	r3, #119	; 0x77
 80003cc:	d002      	beq.n	80003d4 <HAL_GPIO_EXTI_Falling_Callback+0x38>
 80003ce:	4b15      	ldr	r3, [pc, #84]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003d0:	2273      	movs	r2, #115	; 0x73
 80003d2:	701a      	strb	r2, [r3, #0]
		game_over = 0;
 80003d4:	4b14      	ldr	r3, [pc, #80]	; (8000428 <HAL_GPIO_EXTI_Falling_Callback+0x8c>)
 80003d6:	2200      	movs	r2, #0
 80003d8:	701a      	strb	r2, [r3, #0]
		break;
 80003da:	e01e      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
		if (which_sw != UP) which_sw = DOWN;
 80003dc:	4b11      	ldr	r3, [pc, #68]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003de:	781b      	ldrb	r3, [r3, #0]
 80003e0:	2b73      	cmp	r3, #115	; 0x73
 80003e2:	d015      	beq.n	8000410 <HAL_GPIO_EXTI_Falling_Callback+0x74>
 80003e4:	4b0f      	ldr	r3, [pc, #60]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003e6:	2277      	movs	r2, #119	; 0x77
 80003e8:	701a      	strb	r2, [r3, #0]
		break;
 80003ea:	e011      	b.n	8000410 <HAL_GPIO_EXTI_Falling_Callback+0x74>
		if (which_sw != RIGHT) which_sw = LEFT;
 80003ec:	4b0d      	ldr	r3, [pc, #52]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003ee:	781b      	ldrb	r3, [r3, #0]
 80003f0:	2b64      	cmp	r3, #100	; 0x64
 80003f2:	d00f      	beq.n	8000414 <HAL_GPIO_EXTI_Falling_Callback+0x78>
 80003f4:	4b0b      	ldr	r3, [pc, #44]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003f6:	2261      	movs	r2, #97	; 0x61
 80003f8:	701a      	strb	r2, [r3, #0]
		break;
 80003fa:	e00b      	b.n	8000414 <HAL_GPIO_EXTI_Falling_Callback+0x78>
		if (which_sw != LEFT) which_sw = RIGHT;
 80003fc:	4b09      	ldr	r3, [pc, #36]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 80003fe:	781b      	ldrb	r3, [r3, #0]
 8000400:	2b61      	cmp	r3, #97	; 0x61
 8000402:	d009      	beq.n	8000418 <HAL_GPIO_EXTI_Falling_Callback+0x7c>
 8000404:	4b07      	ldr	r3, [pc, #28]	; (8000424 <HAL_GPIO_EXTI_Falling_Callback+0x88>)
 8000406:	2264      	movs	r2, #100	; 0x64
 8000408:	701a      	strb	r2, [r3, #0]
		break;
 800040a:	e005      	b.n	8000418 <HAL_GPIO_EXTI_Falling_Callback+0x7c>
		break;
 800040c:	46c0      	nop			; (mov r8, r8)
 800040e:	e004      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
		break;
 8000410:	46c0      	nop			; (mov r8, r8)
 8000412:	e002      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
		break;
 8000414:	46c0      	nop			; (mov r8, r8)
 8000416:	e000      	b.n	800041a <HAL_GPIO_EXTI_Falling_Callback+0x7e>
		break;
 8000418:	46c0      	nop			; (mov r8, r8)
}
 800041a:	46c0      	nop			; (mov r8, r8)
 800041c:	46bd      	mov	sp, r7
 800041e:	b002      	add	sp, #8
 8000420:	bd80      	pop	{r7, pc}
 8000422:	46c0      	nop			; (mov r8, r8)
 8000424:	20000090 	.word	0x20000090
 8000428:	20000000 	.word	0x20000000

0800042c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800042c:	b580      	push	{r7, lr}
 800042e:	af00      	add	r7, sp, #0
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000430:	f000 fc96 	bl	8000d60 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000434:	f000 f80e 	bl	8000454 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000438:	f7ff ff18 	bl	800026c <MX_GPIO_Init>
  MX_TIM14_Init();
 800043c:	f000 fbac 	bl	8000b98 <MX_TIM14_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim14);
 8000440:	4b03      	ldr	r3, [pc, #12]	; (8000450 <main+0x24>)
 8000442:	0018      	movs	r0, r3
 8000444:	f001 fcd2 	bl	8001dec <HAL_TIM_Base_Start_IT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1) {

		start_gameplay_snake();
 8000448:	f000 fa72 	bl	8000930 <start_gameplay_snake>
 800044c:	e7fc      	b.n	8000448 <main+0x1c>
 800044e:	46c0      	nop			; (mov r8, r8)
 8000450:	200000b0 	.word	0x200000b0

08000454 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000454:	b590      	push	{r4, r7, lr}
 8000456:	b093      	sub	sp, #76	; 0x4c
 8000458:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800045a:	2414      	movs	r4, #20
 800045c:	193b      	adds	r3, r7, r4
 800045e:	0018      	movs	r0, r3
 8000460:	2334      	movs	r3, #52	; 0x34
 8000462:	001a      	movs	r2, r3
 8000464:	2100      	movs	r1, #0
 8000466:	f001 feeb 	bl	8002240 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800046a:	1d3b      	adds	r3, r7, #4
 800046c:	0018      	movs	r0, r3
 800046e:	2310      	movs	r3, #16
 8000470:	001a      	movs	r2, r3
 8000472:	2100      	movs	r1, #0
 8000474:	f001 fee4 	bl	8002240 <memset>

  /** Configure the main internal regulator output voltage 
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000478:	2380      	movs	r3, #128	; 0x80
 800047a:	009b      	lsls	r3, r3, #2
 800047c:	0018      	movs	r0, r3
 800047e:	f000 ffa9 	bl	80013d4 <HAL_PWREx_ControlVoltageScaling>
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000482:	193b      	adds	r3, r7, r4
 8000484:	2202      	movs	r2, #2
 8000486:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000488:	193b      	adds	r3, r7, r4
 800048a:	2280      	movs	r2, #128	; 0x80
 800048c:	0052      	lsls	r2, r2, #1
 800048e:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8000490:	193b      	adds	r3, r7, r4
 8000492:	2200      	movs	r2, #0
 8000494:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000496:	193b      	adds	r3, r7, r4
 8000498:	2240      	movs	r2, #64	; 0x40
 800049a:	615a      	str	r2, [r3, #20]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800049c:	193b      	adds	r3, r7, r4
 800049e:	2200      	movs	r2, #0
 80004a0:	61da      	str	r2, [r3, #28]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80004a2:	193b      	adds	r3, r7, r4
 80004a4:	0018      	movs	r0, r3
 80004a6:	f000 ffd5 	bl	8001454 <HAL_RCC_OscConfig>
 80004aa:	1e03      	subs	r3, r0, #0
 80004ac:	d001      	beq.n	80004b2 <SystemClock_Config+0x5e>
  {
    Error_Handler();
 80004ae:	f000 f82d 	bl	800050c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80004b2:	1d3b      	adds	r3, r7, #4
 80004b4:	2207      	movs	r2, #7
 80004b6:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80004b8:	1d3b      	adds	r3, r7, #4
 80004ba:	2200      	movs	r2, #0
 80004bc:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80004be:	1d3b      	adds	r3, r7, #4
 80004c0:	2200      	movs	r2, #0
 80004c2:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80004c4:	1d3b      	adds	r3, r7, #4
 80004c6:	2200      	movs	r2, #0
 80004c8:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80004ca:	1d3b      	adds	r3, r7, #4
 80004cc:	2100      	movs	r1, #0
 80004ce:	0018      	movs	r0, r3
 80004d0:	f001 fad6 	bl	8001a80 <HAL_RCC_ClockConfig>
 80004d4:	1e03      	subs	r3, r0, #0
 80004d6:	d001      	beq.n	80004dc <SystemClock_Config+0x88>
  {
    Error_Handler();
 80004d8:	f000 f818 	bl	800050c <Error_Handler>
  }
}
 80004dc:	46c0      	nop			; (mov r8, r8)
 80004de:	46bd      	mov	sp, r7
 80004e0:	b013      	add	sp, #76	; 0x4c
 80004e2:	bd90      	pop	{r4, r7, pc}

080004e4 <clear_screen>:

/* USER CODE BEGIN 4 */



void clear_screen() {
 80004e4:	b580      	push	{r7, lr}
 80004e6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, 0x00FF, WIERSZ_OFF);
 80004e8:	23a0      	movs	r3, #160	; 0xa0
 80004ea:	05db      	lsls	r3, r3, #23
 80004ec:	2200      	movs	r2, #0
 80004ee:	21ff      	movs	r1, #255	; 0xff
 80004f0:	0018      	movs	r0, r3
 80004f2:	f000 ff1d 	bl	8001330 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, 0xFF00, KOLUMNA_OFF);
 80004f6:	23ff      	movs	r3, #255	; 0xff
 80004f8:	0219      	lsls	r1, r3, #8
 80004fa:	23a0      	movs	r3, #160	; 0xa0
 80004fc:	05db      	lsls	r3, r3, #23
 80004fe:	2201      	movs	r2, #1
 8000500:	0018      	movs	r0, r3
 8000502:	f000 ff15 	bl	8001330 <HAL_GPIO_WritePin>
}
 8000506:	46c0      	nop			; (mov r8, r8)
 8000508:	46bd      	mov	sp, r7
 800050a:	bd80      	pop	{r7, pc}

0800050c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800050c:	b580      	push	{r7, lr}
 800050e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000510:	46c0      	nop			; (mov r8, r8)
 8000512:	46bd      	mov	sp, r7
 8000514:	bd80      	pop	{r7, pc}

08000516 <change_direction>:
    0b00000000,
    0b00000000,
};


int8_t change_direction(Snake *snake, char direction) {
 8000516:	b580      	push	{r7, lr}
 8000518:	b082      	sub	sp, #8
 800051a:	af00      	add	r7, sp, #0
 800051c:	6078      	str	r0, [r7, #4]
 800051e:	000a      	movs	r2, r1
 8000520:	1cfb      	adds	r3, r7, #3
 8000522:	701a      	strb	r2, [r3, #0]
    if (snake->direction == direction) return 0;
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	2281      	movs	r2, #129	; 0x81
 8000528:	5c9b      	ldrb	r3, [r3, r2]
 800052a:	1cfa      	adds	r2, r7, #3
 800052c:	7812      	ldrb	r2, [r2, #0]
 800052e:	429a      	cmp	r2, r3
 8000530:	d101      	bne.n	8000536 <change_direction+0x20>
 8000532:	2300      	movs	r3, #0
 8000534:	e005      	b.n	8000542 <change_direction+0x2c>
    else snake->direction = direction;
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	1cfa      	adds	r2, r7, #3
 800053a:	2181      	movs	r1, #129	; 0x81
 800053c:	7812      	ldrb	r2, [r2, #0]
 800053e:	545a      	strb	r2, [r3, r1]
    return 1;
 8000540:	2301      	movs	r3, #1
}
 8000542:	0018      	movs	r0, r3
 8000544:	46bd      	mov	sp, r7
 8000546:	b002      	add	sp, #8
 8000548:	bd80      	pop	{r7, pc}

0800054a <clear_display>:


void clear_display(char display[]){
 800054a:	b580      	push	{r7, lr}
 800054c:	b084      	sub	sp, #16
 800054e:	af00      	add	r7, sp, #0
 8000550:	6078      	str	r0, [r7, #4]
    for (int i=0 ; i<8; i++) display[i] = 0b0;
 8000552:	2300      	movs	r3, #0
 8000554:	60fb      	str	r3, [r7, #12]
 8000556:	e007      	b.n	8000568 <clear_display+0x1e>
 8000558:	68fb      	ldr	r3, [r7, #12]
 800055a:	687a      	ldr	r2, [r7, #4]
 800055c:	18d3      	adds	r3, r2, r3
 800055e:	2200      	movs	r2, #0
 8000560:	701a      	strb	r2, [r3, #0]
 8000562:	68fb      	ldr	r3, [r7, #12]
 8000564:	3301      	adds	r3, #1
 8000566:	60fb      	str	r3, [r7, #12]
 8000568:	68fb      	ldr	r3, [r7, #12]
 800056a:	2b07      	cmp	r3, #7
 800056c:	ddf4      	ble.n	8000558 <clear_display+0xe>
};
 800056e:	46c0      	nop			; (mov r8, r8)
 8000570:	46bd      	mov	sp, r7
 8000572:	b004      	add	sp, #16
 8000574:	bd80      	pop	{r7, pc}

08000576 <food_reached>:


void food_reached(Snake *snake, Coord *food){
 8000576:	b590      	push	{r4, r7, lr}
 8000578:	b085      	sub	sp, #20
 800057a:	af00      	add	r7, sp, #0
 800057c:	6078      	str	r0, [r7, #4]
 800057e:	6039      	str	r1, [r7, #0]
	if(snake->body[0].x == food->x && snake->body[0].y == food->y) {
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	2201      	movs	r2, #1
 8000584:	569a      	ldrsb	r2, [r3, r2]
 8000586:	683b      	ldr	r3, [r7, #0]
 8000588:	781b      	ldrb	r3, [r3, #0]
 800058a:	b25b      	sxtb	r3, r3
 800058c:	429a      	cmp	r2, r3
 800058e:	d129      	bne.n	80005e4 <food_reached+0x6e>
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	2202      	movs	r2, #2
 8000594:	569a      	ldrsb	r2, [r3, r2]
 8000596:	683b      	ldr	r3, [r7, #0]
 8000598:	785b      	ldrb	r3, [r3, #1]
 800059a:	b25b      	sxtb	r3, r3
 800059c:	429a      	cmp	r2, r3
 800059e:	d121      	bne.n	80005e4 <food_reached+0x6e>
		snake->length++;
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	781b      	ldrb	r3, [r3, #0]
 80005a4:	b25b      	sxtb	r3, r3
 80005a6:	b2db      	uxtb	r3, r3
 80005a8:	3301      	adds	r3, #1
 80005aa:	b2db      	uxtb	r3, r3
 80005ac:	b25a      	sxtb	r2, r3
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	701a      	strb	r2, [r3, #0]
		int8_t overlap = -1;
 80005b2:	230f      	movs	r3, #15
 80005b4:	18fb      	adds	r3, r7, r3
 80005b6:	22ff      	movs	r2, #255	; 0xff
 80005b8:	701a      	strb	r2, [r3, #0]
		while (overlap == -1) {
 80005ba:	e00d      	b.n	80005d8 <food_reached+0x62>
			random_food(food);
 80005bc:	683b      	ldr	r3, [r7, #0]
 80005be:	0018      	movs	r0, r3
 80005c0:	f000 f88e 	bl	80006e0 <random_food>
			overlap = overlap_check(snake, food);
 80005c4:	230f      	movs	r3, #15
 80005c6:	18fc      	adds	r4, r7, r3
 80005c8:	683a      	ldr	r2, [r7, #0]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	0011      	movs	r1, r2
 80005ce:	0018      	movs	r0, r3
 80005d0:	f000 f857 	bl	8000682 <overlap_check>
 80005d4:	0003      	movs	r3, r0
 80005d6:	7023      	strb	r3, [r4, #0]
		while (overlap == -1) {
 80005d8:	230f      	movs	r3, #15
 80005da:	18fb      	adds	r3, r7, r3
 80005dc:	781b      	ldrb	r3, [r3, #0]
 80005de:	b25b      	sxtb	r3, r3
 80005e0:	3301      	adds	r3, #1
 80005e2:	d0eb      	beq.n	80005bc <food_reached+0x46>
		}
	}
}
 80005e4:	46c0      	nop			; (mov r8, r8)
 80005e6:	46bd      	mov	sp, r7
 80005e8:	b005      	add	sp, #20
 80005ea:	bd90      	pop	{r4, r7, pc}

080005ec <move_head>:


int8_t move_head(Snake *snake) {
 80005ec:	b580      	push	{r7, lr}
 80005ee:	b082      	sub	sp, #8
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	6078      	str	r0, [r7, #4]
    if (snake->direction == UP) snake->body[0].x ++;
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	2281      	movs	r2, #129	; 0x81
 80005f8:	5c9b      	ldrb	r3, [r3, r2]
 80005fa:	2b73      	cmp	r3, #115	; 0x73
 80005fc:	d109      	bne.n	8000612 <move_head+0x26>
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	785b      	ldrb	r3, [r3, #1]
 8000602:	b25b      	sxtb	r3, r3
 8000604:	b2db      	uxtb	r3, r3
 8000606:	3301      	adds	r3, #1
 8000608:	b2db      	uxtb	r3, r3
 800060a:	b25a      	sxtb	r2, r3
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	705a      	strb	r2, [r3, #1]
 8000610:	e02b      	b.n	800066a <move_head+0x7e>
    else if (snake->direction == DOWN) snake->body[0].x --;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	2281      	movs	r2, #129	; 0x81
 8000616:	5c9b      	ldrb	r3, [r3, r2]
 8000618:	2b77      	cmp	r3, #119	; 0x77
 800061a:	d109      	bne.n	8000630 <move_head+0x44>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	785b      	ldrb	r3, [r3, #1]
 8000620:	b25b      	sxtb	r3, r3
 8000622:	b2db      	uxtb	r3, r3
 8000624:	3b01      	subs	r3, #1
 8000626:	b2db      	uxtb	r3, r3
 8000628:	b25a      	sxtb	r2, r3
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	705a      	strb	r2, [r3, #1]
 800062e:	e01c      	b.n	800066a <move_head+0x7e>
    else if (snake->direction == LEFT) snake->body[0].y ++;
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	2281      	movs	r2, #129	; 0x81
 8000634:	5c9b      	ldrb	r3, [r3, r2]
 8000636:	2b61      	cmp	r3, #97	; 0x61
 8000638:	d109      	bne.n	800064e <move_head+0x62>
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	789b      	ldrb	r3, [r3, #2]
 800063e:	b25b      	sxtb	r3, r3
 8000640:	b2db      	uxtb	r3, r3
 8000642:	3301      	adds	r3, #1
 8000644:	b2db      	uxtb	r3, r3
 8000646:	b25a      	sxtb	r2, r3
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	709a      	strb	r2, [r3, #2]
 800064c:	e00d      	b.n	800066a <move_head+0x7e>
    else if (snake->direction == RIGHT) snake->body[0].y --;
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	2281      	movs	r2, #129	; 0x81
 8000652:	5c9b      	ldrb	r3, [r3, r2]
 8000654:	2b64      	cmp	r3, #100	; 0x64
 8000656:	d108      	bne.n	800066a <move_head+0x7e>
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	789b      	ldrb	r3, [r3, #2]
 800065c:	b25b      	sxtb	r3, r3
 800065e:	b2db      	uxtb	r3, r3
 8000660:	3b01      	subs	r3, #1
 8000662:	b2db      	uxtb	r3, r3
 8000664:	b25a      	sxtb	r2, r3
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	709a      	strb	r2, [r3, #2]
    return overlap_check(snake, &snake->body[0]);
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	1c5a      	adds	r2, r3, #1
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	0011      	movs	r1, r2
 8000672:	0018      	movs	r0, r3
 8000674:	f000 f805 	bl	8000682 <overlap_check>
 8000678:	0003      	movs	r3, r0
}
 800067a:	0018      	movs	r0, r3
 800067c:	46bd      	mov	sp, r7
 800067e:	b002      	add	sp, #8
 8000680:	bd80      	pop	{r7, pc}

08000682 <overlap_check>:



int8_t overlap_check(Snake *snake, Coord *position) {
 8000682:	b580      	push	{r7, lr}
 8000684:	b084      	sub	sp, #16
 8000686:	af00      	add	r7, sp, #0
 8000688:	6078      	str	r0, [r7, #4]
 800068a:	6039      	str	r1, [r7, #0]
    for (int i=1; i<SNAKE_MAX_LEN; i++) {
 800068c:	2301      	movs	r3, #1
 800068e:	60fb      	str	r3, [r7, #12]
 8000690:	e01d      	b.n	80006ce <overlap_check+0x4c>
        if (snake->body[i].x == position->x && snake->body[i].y == position->y) return -1;
 8000692:	687a      	ldr	r2, [r7, #4]
 8000694:	68fb      	ldr	r3, [r7, #12]
 8000696:	005b      	lsls	r3, r3, #1
 8000698:	18d3      	adds	r3, r2, r3
 800069a:	3301      	adds	r3, #1
 800069c:	2200      	movs	r2, #0
 800069e:	569a      	ldrsb	r2, [r3, r2]
 80006a0:	683b      	ldr	r3, [r7, #0]
 80006a2:	781b      	ldrb	r3, [r3, #0]
 80006a4:	b25b      	sxtb	r3, r3
 80006a6:	429a      	cmp	r2, r3
 80006a8:	d10e      	bne.n	80006c8 <overlap_check+0x46>
 80006aa:	687a      	ldr	r2, [r7, #4]
 80006ac:	68fb      	ldr	r3, [r7, #12]
 80006ae:	005b      	lsls	r3, r3, #1
 80006b0:	18d3      	adds	r3, r2, r3
 80006b2:	3302      	adds	r3, #2
 80006b4:	2200      	movs	r2, #0
 80006b6:	569a      	ldrsb	r2, [r3, r2]
 80006b8:	683b      	ldr	r3, [r7, #0]
 80006ba:	785b      	ldrb	r3, [r3, #1]
 80006bc:	b25b      	sxtb	r3, r3
 80006be:	429a      	cmp	r2, r3
 80006c0:	d102      	bne.n	80006c8 <overlap_check+0x46>
 80006c2:	2301      	movs	r3, #1
 80006c4:	425b      	negs	r3, r3
 80006c6:	e006      	b.n	80006d6 <overlap_check+0x54>
    for (int i=1; i<SNAKE_MAX_LEN; i++) {
 80006c8:	68fb      	ldr	r3, [r7, #12]
 80006ca:	3301      	adds	r3, #1
 80006cc:	60fb      	str	r3, [r7, #12]
 80006ce:	68fb      	ldr	r3, [r7, #12]
 80006d0:	2b3f      	cmp	r3, #63	; 0x3f
 80006d2:	ddde      	ble.n	8000692 <overlap_check+0x10>
    }
    return 0;
 80006d4:	2300      	movs	r3, #0
}
 80006d6:	0018      	movs	r0, r3
 80006d8:	46bd      	mov	sp, r7
 80006da:	b004      	add	sp, #16
 80006dc:	bd80      	pop	{r7, pc}
	...

080006e0 <random_food>:


void random_food(Coord *food) {
 80006e0:	b580      	push	{r7, lr}
 80006e2:	b082      	sub	sp, #8
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
    food->x = rand() % 8;
 80006e8:	f001 fdb2 	bl	8002250 <rand>
 80006ec:	0002      	movs	r2, r0
 80006ee:	4b0e      	ldr	r3, [pc, #56]	; (8000728 <random_food+0x48>)
 80006f0:	4013      	ands	r3, r2
 80006f2:	d504      	bpl.n	80006fe <random_food+0x1e>
 80006f4:	3b01      	subs	r3, #1
 80006f6:	2208      	movs	r2, #8
 80006f8:	4252      	negs	r2, r2
 80006fa:	4313      	orrs	r3, r2
 80006fc:	3301      	adds	r3, #1
 80006fe:	b25a      	sxtb	r2, r3
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	701a      	strb	r2, [r3, #0]
    food->y = rand() % 8;
 8000704:	f001 fda4 	bl	8002250 <rand>
 8000708:	0002      	movs	r2, r0
 800070a:	4b07      	ldr	r3, [pc, #28]	; (8000728 <random_food+0x48>)
 800070c:	4013      	ands	r3, r2
 800070e:	d504      	bpl.n	800071a <random_food+0x3a>
 8000710:	3b01      	subs	r3, #1
 8000712:	2208      	movs	r2, #8
 8000714:	4252      	negs	r2, r2
 8000716:	4313      	orrs	r3, r2
 8000718:	3301      	adds	r3, #1
 800071a:	b25a      	sxtb	r2, r3
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	705a      	strb	r2, [r3, #1]
}
 8000720:	46c0      	nop			; (mov r8, r8)
 8000722:	46bd      	mov	sp, r7
 8000724:	b002      	add	sp, #8
 8000726:	bd80      	pop	{r7, pc}
 8000728:	80000007 	.word	0x80000007

0800072c <set_screen>:


void set_screen(Coord *food, Snake *snake){
 800072c:	b580      	push	{r7, lr}
 800072e:	b086      	sub	sp, #24
 8000730:	af00      	add	r7, sp, #0
 8000732:	6078      	str	r0, [r7, #4]
 8000734:	6039      	str	r1, [r7, #0]
    for (int i=0; i<8; i++)
 8000736:	2300      	movs	r3, #0
 8000738:	617b      	str	r3, [r7, #20]
 800073a:	e06e      	b.n	800081a <set_screen+0xee>
    {
        for (int j=0; j<8; j++)
 800073c:	2300      	movs	r3, #0
 800073e:	613b      	str	r3, [r7, #16]
 8000740:	e065      	b.n	800080e <set_screen+0xe2>
        {   
            if (food->x == i && food->y == j)
 8000742:	687b      	ldr	r3, [r7, #4]
 8000744:	781b      	ldrb	r3, [r3, #0]
 8000746:	b25b      	sxtb	r3, r3
 8000748:	001a      	movs	r2, r3
 800074a:	697b      	ldr	r3, [r7, #20]
 800074c:	4293      	cmp	r3, r2
 800074e:	d121      	bne.n	8000794 <set_screen+0x68>
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	785b      	ldrb	r3, [r3, #1]
 8000754:	b25b      	sxtb	r3, r3
 8000756:	001a      	movs	r2, r3
 8000758:	693b      	ldr	r3, [r7, #16]
 800075a:	4293      	cmp	r3, r2
 800075c:	d11a      	bne.n	8000794 <set_screen+0x68>
            {
                    char row = virtual_screen[i];
 800075e:	210b      	movs	r1, #11
 8000760:	0008      	movs	r0, r1
 8000762:	187b      	adds	r3, r7, r1
 8000764:	4930      	ldr	r1, [pc, #192]	; (8000828 <set_screen+0xfc>)
 8000766:	697a      	ldr	r2, [r7, #20]
 8000768:	188a      	adds	r2, r1, r2
 800076a:	7812      	ldrb	r2, [r2, #0]
 800076c:	701a      	strb	r2, [r3, #0]
                    row = 1 << j;
 800076e:	2201      	movs	r2, #1
 8000770:	693b      	ldr	r3, [r7, #16]
 8000772:	409a      	lsls	r2, r3
 8000774:	0001      	movs	r1, r0
 8000776:	187b      	adds	r3, r7, r1
 8000778:	701a      	strb	r2, [r3, #0]
                    virtual_screen[i] |= row; 
 800077a:	4a2b      	ldr	r2, [pc, #172]	; (8000828 <set_screen+0xfc>)
 800077c:	697b      	ldr	r3, [r7, #20]
 800077e:	18d3      	adds	r3, r2, r3
 8000780:	781a      	ldrb	r2, [r3, #0]
 8000782:	187b      	adds	r3, r7, r1
 8000784:	781b      	ldrb	r3, [r3, #0]
 8000786:	4313      	orrs	r3, r2
 8000788:	b2d9      	uxtb	r1, r3
 800078a:	4a27      	ldr	r2, [pc, #156]	; (8000828 <set_screen+0xfc>)
 800078c:	697b      	ldr	r3, [r7, #20]
 800078e:	18d3      	adds	r3, r2, r3
 8000790:	1c0a      	adds	r2, r1, #0
 8000792:	701a      	strb	r2, [r3, #0]
            }

            for (int k=0; k<SNAKE_MAX_LEN; k++)
 8000794:	2300      	movs	r3, #0
 8000796:	60fb      	str	r3, [r7, #12]
 8000798:	e033      	b.n	8000802 <set_screen+0xd6>
            {
                if (snake->body[k].x == i && snake->body[k].y == j)
 800079a:	683a      	ldr	r2, [r7, #0]
 800079c:	68fb      	ldr	r3, [r7, #12]
 800079e:	005b      	lsls	r3, r3, #1
 80007a0:	18d3      	adds	r3, r2, r3
 80007a2:	3301      	adds	r3, #1
 80007a4:	781b      	ldrb	r3, [r3, #0]
 80007a6:	b25b      	sxtb	r3, r3
 80007a8:	001a      	movs	r2, r3
 80007aa:	697b      	ldr	r3, [r7, #20]
 80007ac:	4293      	cmp	r3, r2
 80007ae:	d125      	bne.n	80007fc <set_screen+0xd0>
 80007b0:	683a      	ldr	r2, [r7, #0]
 80007b2:	68fb      	ldr	r3, [r7, #12]
 80007b4:	005b      	lsls	r3, r3, #1
 80007b6:	18d3      	adds	r3, r2, r3
 80007b8:	3302      	adds	r3, #2
 80007ba:	781b      	ldrb	r3, [r3, #0]
 80007bc:	b25b      	sxtb	r3, r3
 80007be:	001a      	movs	r2, r3
 80007c0:	693b      	ldr	r3, [r7, #16]
 80007c2:	4293      	cmp	r3, r2
 80007c4:	d11a      	bne.n	80007fc <set_screen+0xd0>
                {
                    char row = virtual_screen[i];
 80007c6:	210a      	movs	r1, #10
 80007c8:	0008      	movs	r0, r1
 80007ca:	187b      	adds	r3, r7, r1
 80007cc:	4916      	ldr	r1, [pc, #88]	; (8000828 <set_screen+0xfc>)
 80007ce:	697a      	ldr	r2, [r7, #20]
 80007d0:	188a      	adds	r2, r1, r2
 80007d2:	7812      	ldrb	r2, [r2, #0]
 80007d4:	701a      	strb	r2, [r3, #0]
                    row = 1 << j;
 80007d6:	2201      	movs	r2, #1
 80007d8:	693b      	ldr	r3, [r7, #16]
 80007da:	409a      	lsls	r2, r3
 80007dc:	0001      	movs	r1, r0
 80007de:	187b      	adds	r3, r7, r1
 80007e0:	701a      	strb	r2, [r3, #0]
                    virtual_screen[i] |= row; 
 80007e2:	4a11      	ldr	r2, [pc, #68]	; (8000828 <set_screen+0xfc>)
 80007e4:	697b      	ldr	r3, [r7, #20]
 80007e6:	18d3      	adds	r3, r2, r3
 80007e8:	781a      	ldrb	r2, [r3, #0]
 80007ea:	187b      	adds	r3, r7, r1
 80007ec:	781b      	ldrb	r3, [r3, #0]
 80007ee:	4313      	orrs	r3, r2
 80007f0:	b2d9      	uxtb	r1, r3
 80007f2:	4a0d      	ldr	r2, [pc, #52]	; (8000828 <set_screen+0xfc>)
 80007f4:	697b      	ldr	r3, [r7, #20]
 80007f6:	18d3      	adds	r3, r2, r3
 80007f8:	1c0a      	adds	r2, r1, #0
 80007fa:	701a      	strb	r2, [r3, #0]
            for (int k=0; k<SNAKE_MAX_LEN; k++)
 80007fc:	68fb      	ldr	r3, [r7, #12]
 80007fe:	3301      	adds	r3, #1
 8000800:	60fb      	str	r3, [r7, #12]
 8000802:	68fb      	ldr	r3, [r7, #12]
 8000804:	2b3f      	cmp	r3, #63	; 0x3f
 8000806:	ddc8      	ble.n	800079a <set_screen+0x6e>
        for (int j=0; j<8; j++)
 8000808:	693b      	ldr	r3, [r7, #16]
 800080a:	3301      	adds	r3, #1
 800080c:	613b      	str	r3, [r7, #16]
 800080e:	693b      	ldr	r3, [r7, #16]
 8000810:	2b07      	cmp	r3, #7
 8000812:	dd96      	ble.n	8000742 <set_screen+0x16>
    for (int i=0; i<8; i++)
 8000814:	697b      	ldr	r3, [r7, #20]
 8000816:	3301      	adds	r3, #1
 8000818:	617b      	str	r3, [r7, #20]
 800081a:	697b      	ldr	r3, [r7, #20]
 800081c:	2b07      	cmp	r3, #7
 800081e:	dd8d      	ble.n	800073c <set_screen+0x10>
                }
            }
        }
    }
};
 8000820:	46c0      	nop			; (mov r8, r8)
 8000822:	46bd      	mov	sp, r7
 8000824:	b006      	add	sp, #24
 8000826:	bd80      	pop	{r7, pc}
 8000828:	20000094 	.word	0x20000094

0800082c <update_tail>:


void update_tail(Snake *snake) {
 800082c:	b580      	push	{r7, lr}
 800082e:	b084      	sub	sp, #16
 8000830:	af00      	add	r7, sp, #0
 8000832:	6078      	str	r0, [r7, #4]
    for(int i=snake->length; i>0; i--) {
 8000834:	687b      	ldr	r3, [r7, #4]
 8000836:	781b      	ldrb	r3, [r3, #0]
 8000838:	b25b      	sxtb	r3, r3
 800083a:	60fb      	str	r3, [r7, #12]
 800083c:	e020      	b.n	8000880 <update_tail+0x54>
        snake->body[i].x = snake->body[i-1].x;
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	3b01      	subs	r3, #1
 8000842:	687a      	ldr	r2, [r7, #4]
 8000844:	005b      	lsls	r3, r3, #1
 8000846:	18d3      	adds	r3, r2, r3
 8000848:	3301      	adds	r3, #1
 800084a:	2100      	movs	r1, #0
 800084c:	5659      	ldrsb	r1, [r3, r1]
 800084e:	687a      	ldr	r2, [r7, #4]
 8000850:	68fb      	ldr	r3, [r7, #12]
 8000852:	005b      	lsls	r3, r3, #1
 8000854:	18d3      	adds	r3, r2, r3
 8000856:	3301      	adds	r3, #1
 8000858:	1c0a      	adds	r2, r1, #0
 800085a:	701a      	strb	r2, [r3, #0]
        snake->body[i].y = snake->body[i-1].y;
 800085c:	68fb      	ldr	r3, [r7, #12]
 800085e:	3b01      	subs	r3, #1
 8000860:	687a      	ldr	r2, [r7, #4]
 8000862:	005b      	lsls	r3, r3, #1
 8000864:	18d3      	adds	r3, r2, r3
 8000866:	3302      	adds	r3, #2
 8000868:	2100      	movs	r1, #0
 800086a:	5659      	ldrsb	r1, [r3, r1]
 800086c:	687a      	ldr	r2, [r7, #4]
 800086e:	68fb      	ldr	r3, [r7, #12]
 8000870:	005b      	lsls	r3, r3, #1
 8000872:	18d3      	adds	r3, r2, r3
 8000874:	3302      	adds	r3, #2
 8000876:	1c0a      	adds	r2, r1, #0
 8000878:	701a      	strb	r2, [r3, #0]
    for(int i=snake->length; i>0; i--) {
 800087a:	68fb      	ldr	r3, [r7, #12]
 800087c:	3b01      	subs	r3, #1
 800087e:	60fb      	str	r3, [r7, #12]
 8000880:	68fb      	ldr	r3, [r7, #12]
 8000882:	2b00      	cmp	r3, #0
 8000884:	dcdb      	bgt.n	800083e <update_tail+0x12>
    }
};
 8000886:	46c0      	nop			; (mov r8, r8)
 8000888:	46bd      	mov	sp, r7
 800088a:	b004      	add	sp, #16
 800088c:	bd80      	pop	{r7, pc}

0800088e <wall_hit>:


int8_t wall_hit(Snake *snake){
 800088e:	b580      	push	{r7, lr}
 8000890:	b082      	sub	sp, #8
 8000892:	af00      	add	r7, sp, #0
 8000894:	6078      	str	r0, [r7, #4]
    if (snake->body[0].x < 0|| snake->body[0].x > 7 || snake->body[0].y < 0 || snake->body[0].y > 7) return -1;
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	785b      	ldrb	r3, [r3, #1]
 800089a:	b25b      	sxtb	r3, r3
 800089c:	2b00      	cmp	r3, #0
 800089e:	db0e      	blt.n	80008be <wall_hit+0x30>
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	785b      	ldrb	r3, [r3, #1]
 80008a4:	b25b      	sxtb	r3, r3
 80008a6:	2b07      	cmp	r3, #7
 80008a8:	dc09      	bgt.n	80008be <wall_hit+0x30>
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	789b      	ldrb	r3, [r3, #2]
 80008ae:	b25b      	sxtb	r3, r3
 80008b0:	2b00      	cmp	r3, #0
 80008b2:	db04      	blt.n	80008be <wall_hit+0x30>
 80008b4:	687b      	ldr	r3, [r7, #4]
 80008b6:	789b      	ldrb	r3, [r3, #2]
 80008b8:	b25b      	sxtb	r3, r3
 80008ba:	2b07      	cmp	r3, #7
 80008bc:	dd02      	ble.n	80008c4 <wall_hit+0x36>
 80008be:	2301      	movs	r3, #1
 80008c0:	425b      	negs	r3, r3
 80008c2:	e000      	b.n	80008c6 <wall_hit+0x38>
    return 0;
 80008c4:	2300      	movs	r3, #0
}
 80008c6:	0018      	movs	r0, r3
 80008c8:	46bd      	mov	sp, r7
 80008ca:	b002      	add	sp, #8
 80008cc:	bd80      	pop	{r7, pc}
	...

080008d0 <game_over_screen>:

void game_over_screen(Snake *snake, Coord *food){
 80008d0:	b580      	push	{r7, lr}
 80008d2:	b084      	sub	sp, #16
 80008d4:	af00      	add	r7, sp, #0
 80008d6:	6078      	str	r0, [r7, #4]
 80008d8:	6039      	str	r1, [r7, #0]
	for (int8_t i = 0; i < 3; i ++) {
 80008da:	230f      	movs	r3, #15
 80008dc:	18fb      	adds	r3, r7, r3
 80008de:	2200      	movs	r2, #0
 80008e0:	701a      	strb	r2, [r3, #0]
 80008e2:	e018      	b.n	8000916 <game_over_screen+0x46>
		clear_display(virtual_screen);
 80008e4:	4b11      	ldr	r3, [pc, #68]	; (800092c <game_over_screen+0x5c>)
 80008e6:	0018      	movs	r0, r3
 80008e8:	f7ff fe2f 	bl	800054a <clear_display>
		HAL_Delay(100);
 80008ec:	2064      	movs	r0, #100	; 0x64
 80008ee:	f000 fabb 	bl	8000e68 <HAL_Delay>
		set_screen(food, snake);
 80008f2:	687a      	ldr	r2, [r7, #4]
 80008f4:	683b      	ldr	r3, [r7, #0]
 80008f6:	0011      	movs	r1, r2
 80008f8:	0018      	movs	r0, r3
 80008fa:	f7ff ff17 	bl	800072c <set_screen>
		HAL_Delay(100);
 80008fe:	2064      	movs	r0, #100	; 0x64
 8000900:	f000 fab2 	bl	8000e68 <HAL_Delay>
	for (int8_t i = 0; i < 3; i ++) {
 8000904:	210f      	movs	r1, #15
 8000906:	187b      	adds	r3, r7, r1
 8000908:	781b      	ldrb	r3, [r3, #0]
 800090a:	b25b      	sxtb	r3, r3
 800090c:	b2db      	uxtb	r3, r3
 800090e:	3301      	adds	r3, #1
 8000910:	b2da      	uxtb	r2, r3
 8000912:	187b      	adds	r3, r7, r1
 8000914:	701a      	strb	r2, [r3, #0]
 8000916:	230f      	movs	r3, #15
 8000918:	18fb      	adds	r3, r7, r3
 800091a:	781b      	ldrb	r3, [r3, #0]
 800091c:	b25b      	sxtb	r3, r3
 800091e:	2b02      	cmp	r3, #2
 8000920:	dde0      	ble.n	80008e4 <game_over_screen+0x14>
	}
}
 8000922:	46c0      	nop			; (mov r8, r8)
 8000924:	46bd      	mov	sp, r7
 8000926:	b004      	add	sp, #16
 8000928:	bd80      	pop	{r7, pc}
 800092a:	46c0      	nop			; (mov r8, r8)
 800092c:	20000094 	.word	0x20000094

08000930 <start_gameplay_snake>:


void start_gameplay_snake(void) {
 8000930:	b590      	push	{r4, r7, lr}
 8000932:	b0a5      	sub	sp, #148	; 0x94
 8000934:	af00      	add	r7, sp, #0
	while (game_over == 0) {
 8000936:	e084      	b.n	8000a42 <start_gameplay_snake+0x112>
		Snake snake;
		snake.length = 0;
 8000938:	003b      	movs	r3, r7
 800093a:	2200      	movs	r2, #0
 800093c:	701a      	strb	r2, [r3, #0]
		snake.direction = UP;
 800093e:	003b      	movs	r3, r7
 8000940:	2281      	movs	r2, #129	; 0x81
 8000942:	2173      	movs	r1, #115	; 0x73
 8000944:	5499      	strb	r1, [r3, r2]
		snake.body[0].x = 3, snake.body[0].y = 3;
 8000946:	003b      	movs	r3, r7
 8000948:	2203      	movs	r2, #3
 800094a:	705a      	strb	r2, [r3, #1]
 800094c:	003b      	movs	r3, r7
 800094e:	2203      	movs	r2, #3
 8000950:	709a      	strb	r2, [r3, #2]
		for (int i = 1; i < (sizeof(snake.body) / sizeof(snake.body[0])); i++) {
 8000952:	2301      	movs	r3, #1
 8000954:	228c      	movs	r2, #140	; 0x8c
 8000956:	18ba      	adds	r2, r7, r2
 8000958:	6013      	str	r3, [r2, #0]
 800095a:	e015      	b.n	8000988 <start_gameplay_snake+0x58>
			snake.body[i].x = -1, snake.body[i].y = -1;
 800095c:	003a      	movs	r2, r7
 800095e:	218c      	movs	r1, #140	; 0x8c
 8000960:	187b      	adds	r3, r7, r1
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	005b      	lsls	r3, r3, #1
 8000966:	18d3      	adds	r3, r2, r3
 8000968:	3301      	adds	r3, #1
 800096a:	22ff      	movs	r2, #255	; 0xff
 800096c:	701a      	strb	r2, [r3, #0]
 800096e:	003a      	movs	r2, r7
 8000970:	187b      	adds	r3, r7, r1
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	005b      	lsls	r3, r3, #1
 8000976:	18d3      	adds	r3, r2, r3
 8000978:	3302      	adds	r3, #2
 800097a:	22ff      	movs	r2, #255	; 0xff
 800097c:	701a      	strb	r2, [r3, #0]
		for (int i = 1; i < (sizeof(snake.body) / sizeof(snake.body[0])); i++) {
 800097e:	187b      	adds	r3, r7, r1
 8000980:	681b      	ldr	r3, [r3, #0]
 8000982:	3301      	adds	r3, #1
 8000984:	187a      	adds	r2, r7, r1
 8000986:	6013      	str	r3, [r2, #0]
 8000988:	238c      	movs	r3, #140	; 0x8c
 800098a:	18fb      	adds	r3, r7, r3
 800098c:	681b      	ldr	r3, [r3, #0]
 800098e:	2b3f      	cmp	r3, #63	; 0x3f
 8000990:	d9e4      	bls.n	800095c <start_gameplay_snake+0x2c>
		}

		Coord food;
		random_food(&food);
 8000992:	2484      	movs	r4, #132	; 0x84
 8000994:	193b      	adds	r3, r7, r4
 8000996:	0018      	movs	r0, r3
 8000998:	f7ff fea2 	bl	80006e0 <random_food>

		int result = 0;
 800099c:	2300      	movs	r3, #0
 800099e:	2288      	movs	r2, #136	; 0x88
 80009a0:	18ba      	adds	r2, r7, r2
 80009a2:	6013      	str	r3, [r2, #0]

		set_screen(&food, &snake);
 80009a4:	003a      	movs	r2, r7
 80009a6:	193b      	adds	r3, r7, r4
 80009a8:	0011      	movs	r1, r2
 80009aa:	0018      	movs	r0, r3
 80009ac:	f7ff febe 	bl	800072c <set_screen>

		while (result != -1) {
 80009b0:	e032      	b.n	8000a18 <start_gameplay_snake+0xe8>

			HAL_Delay(GAME_DELAY);
 80009b2:	20fa      	movs	r0, #250	; 0xfa
 80009b4:	f000 fa58 	bl	8000e68 <HAL_Delay>

			change_direction(&snake, which_sw);
 80009b8:	4b27      	ldr	r3, [pc, #156]	; (8000a58 <start_gameplay_snake+0x128>)
 80009ba:	781a      	ldrb	r2, [r3, #0]
 80009bc:	003b      	movs	r3, r7
 80009be:	0011      	movs	r1, r2
 80009c0:	0018      	movs	r0, r3
 80009c2:	f7ff fda8 	bl	8000516 <change_direction>

			update_tail(&snake);
 80009c6:	003b      	movs	r3, r7
 80009c8:	0018      	movs	r0, r3
 80009ca:	f7ff ff2f 	bl	800082c <update_tail>

			result = move_head(&snake); // overlap check
 80009ce:	003b      	movs	r3, r7
 80009d0:	0018      	movs	r0, r3
 80009d2:	f7ff fe0b 	bl	80005ec <move_head>
 80009d6:	0003      	movs	r3, r0
 80009d8:	2288      	movs	r2, #136	; 0x88
 80009da:	18b9      	adds	r1, r7, r2
 80009dc:	600b      	str	r3, [r1, #0]
			if (result == -1) break;
 80009de:	18bb      	adds	r3, r7, r2
 80009e0:	681b      	ldr	r3, [r3, #0]
 80009e2:	3301      	adds	r3, #1
 80009e4:	d01e      	beq.n	8000a24 <start_gameplay_snake+0xf4>

			food_reached(&snake, &food); // hungry?
 80009e6:	2484      	movs	r4, #132	; 0x84
 80009e8:	193a      	adds	r2, r7, r4
 80009ea:	003b      	movs	r3, r7
 80009ec:	0011      	movs	r1, r2
 80009ee:	0018      	movs	r0, r3
 80009f0:	f7ff fdc1 	bl	8000576 <food_reached>

			result = wall_hit(&snake);
 80009f4:	003b      	movs	r3, r7
 80009f6:	0018      	movs	r0, r3
 80009f8:	f7ff ff49 	bl	800088e <wall_hit>
 80009fc:	0003      	movs	r3, r0
 80009fe:	2288      	movs	r2, #136	; 0x88
 8000a00:	18ba      	adds	r2, r7, r2
 8000a02:	6013      	str	r3, [r2, #0]

			clear_display(virtual_screen);
 8000a04:	4b15      	ldr	r3, [pc, #84]	; (8000a5c <start_gameplay_snake+0x12c>)
 8000a06:	0018      	movs	r0, r3
 8000a08:	f7ff fd9f 	bl	800054a <clear_display>
			set_screen(&food, &snake);
 8000a0c:	003a      	movs	r2, r7
 8000a0e:	193b      	adds	r3, r7, r4
 8000a10:	0011      	movs	r1, r2
 8000a12:	0018      	movs	r0, r3
 8000a14:	f7ff fe8a 	bl	800072c <set_screen>
		while (result != -1) {
 8000a18:	2388      	movs	r3, #136	; 0x88
 8000a1a:	18fb      	adds	r3, r7, r3
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	3301      	adds	r3, #1
 8000a20:	d1c7      	bne.n	80009b2 <start_gameplay_snake+0x82>
 8000a22:	e000      	b.n	8000a26 <start_gameplay_snake+0xf6>
			if (result == -1) break;
 8000a24:	46c0      	nop			; (mov r8, r8)
		}

		game_over_screen(&snake, &food);
 8000a26:	2384      	movs	r3, #132	; 0x84
 8000a28:	18fa      	adds	r2, r7, r3
 8000a2a:	003b      	movs	r3, r7
 8000a2c:	0011      	movs	r1, r2
 8000a2e:	0018      	movs	r0, r3
 8000a30:	f7ff ff4e 	bl	80008d0 <game_over_screen>

		game_over = 1;
 8000a34:	4b0a      	ldr	r3, [pc, #40]	; (8000a60 <start_gameplay_snake+0x130>)
 8000a36:	2201      	movs	r2, #1
 8000a38:	701a      	strb	r2, [r3, #0]
		clear_display(virtual_screen);
 8000a3a:	4b08      	ldr	r3, [pc, #32]	; (8000a5c <start_gameplay_snake+0x12c>)
 8000a3c:	0018      	movs	r0, r3
 8000a3e:	f7ff fd84 	bl	800054a <clear_display>
	while (game_over == 0) {
 8000a42:	4b07      	ldr	r3, [pc, #28]	; (8000a60 <start_gameplay_snake+0x130>)
 8000a44:	781b      	ldrb	r3, [r3, #0]
 8000a46:	b25b      	sxtb	r3, r3
 8000a48:	2b00      	cmp	r3, #0
 8000a4a:	d100      	bne.n	8000a4e <start_gameplay_snake+0x11e>
 8000a4c:	e774      	b.n	8000938 <start_gameplay_snake+0x8>
	}
}
 8000a4e:	46c0      	nop			; (mov r8, r8)
 8000a50:	46bd      	mov	sp, r7
 8000a52:	b025      	add	sp, #148	; 0x94
 8000a54:	bd90      	pop	{r4, r7, pc}
 8000a56:	46c0      	nop			; (mov r8, r8)
 8000a58:	20000090 	.word	0x20000090
 8000a5c:	20000094 	.word	0x20000094
 8000a60:	20000000 	.word	0x20000000

08000a64 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000a64:	b580      	push	{r7, lr}
 8000a66:	b082      	sub	sp, #8
 8000a68:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000a6a:	4b0f      	ldr	r3, [pc, #60]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a6c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000a6e:	4b0e      	ldr	r3, [pc, #56]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a70:	2101      	movs	r1, #1
 8000a72:	430a      	orrs	r2, r1
 8000a74:	641a      	str	r2, [r3, #64]	; 0x40
 8000a76:	4b0c      	ldr	r3, [pc, #48]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000a7a:	2201      	movs	r2, #1
 8000a7c:	4013      	ands	r3, r2
 8000a7e:	607b      	str	r3, [r7, #4]
 8000a80:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000a82:	4b09      	ldr	r3, [pc, #36]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a84:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8000a86:	4b08      	ldr	r3, [pc, #32]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a88:	2180      	movs	r1, #128	; 0x80
 8000a8a:	0549      	lsls	r1, r1, #21
 8000a8c:	430a      	orrs	r2, r1
 8000a8e:	63da      	str	r2, [r3, #60]	; 0x3c
 8000a90:	4b05      	ldr	r3, [pc, #20]	; (8000aa8 <HAL_MspInit+0x44>)
 8000a92:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8000a94:	2380      	movs	r3, #128	; 0x80
 8000a96:	055b      	lsls	r3, r3, #21
 8000a98:	4013      	ands	r3, r2
 8000a9a:	603b      	str	r3, [r7, #0]
 8000a9c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000a9e:	46c0      	nop			; (mov r8, r8)
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	b002      	add	sp, #8
 8000aa4:	bd80      	pop	{r7, pc}
 8000aa6:	46c0      	nop			; (mov r8, r8)
 8000aa8:	40021000 	.word	0x40021000

08000aac <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000aac:	b580      	push	{r7, lr}
 8000aae:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8000ab0:	46c0      	nop			; (mov r8, r8)
 8000ab2:	46bd      	mov	sp, r7
 8000ab4:	bd80      	pop	{r7, pc}

08000ab6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000ab6:	b580      	push	{r7, lr}
 8000ab8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000aba:	e7fe      	b.n	8000aba <HardFault_Handler+0x4>

08000abc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8000ac0:	46c0      	nop			; (mov r8, r8)
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bd80      	pop	{r7, pc}

08000ac6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000ac6:	b580      	push	{r7, lr}
 8000ac8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000aca:	46c0      	nop			; (mov r8, r8)
 8000acc:	46bd      	mov	sp, r7
 8000ace:	bd80      	pop	{r7, pc}

08000ad0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000ad4:	f000 f9ae 	bl	8000e34 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ad8:	46c0      	nop			; (mov r8, r8)
 8000ada:	46bd      	mov	sp, r7
 8000adc:	bd80      	pop	{r7, pc}

08000ade <EXTI2_3_IRQHandler>:

/**
  * @brief This function handles EXTI line 2 and line 3 interrupts.
  */
void EXTI2_3_IRQHandler(void)
{
 8000ade:	b580      	push	{r7, lr}
 8000ae0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_3_IRQn 0 */

  /* USER CODE END EXTI2_3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 8000ae2:	2008      	movs	r0, #8
 8000ae4:	f000 fc42 	bl	800136c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_3_IRQn 1 */

  /* USER CODE END EXTI2_3_IRQn 1 */
}
 8000ae8:	46c0      	nop			; (mov r8, r8)
 8000aea:	46bd      	mov	sp, r7
 8000aec:	bd80      	pop	{r7, pc}

08000aee <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 8000aee:	b580      	push	{r7, lr}
 8000af0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 8000af2:	2010      	movs	r0, #16
 8000af4:	f000 fc3a 	bl	800136c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8000af8:	2020      	movs	r0, #32
 8000afa:	f000 fc37 	bl	800136c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 8000afe:	2040      	movs	r0, #64	; 0x40
 8000b00:	f000 fc34 	bl	800136c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8000b04:	2080      	movs	r0, #128	; 0x80
 8000b06:	f000 fc31 	bl	800136c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 8000b0a:	46c0      	nop			; (mov r8, r8)
 8000b0c:	46bd      	mov	sp, r7
 8000b0e:	bd80      	pop	{r7, pc}

08000b10 <TIM14_IRQHandler>:

/**
  * @brief This function handles TIM14 global interrupt.
  */
void TIM14_IRQHandler(void)
{
 8000b10:	b580      	push	{r7, lr}
 8000b12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM14_IRQn 0 */

  /* USER CODE END TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 8000b14:	4b03      	ldr	r3, [pc, #12]	; (8000b24 <TIM14_IRQHandler+0x14>)
 8000b16:	0018      	movs	r0, r3
 8000b18:	f001 f992 	bl	8001e40 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM14_IRQn 1 */

  /* USER CODE END TIM14_IRQn 1 */
}
 8000b1c:	46c0      	nop			; (mov r8, r8)
 8000b1e:	46bd      	mov	sp, r7
 8000b20:	bd80      	pop	{r7, pc}
 8000b22:	46c0      	nop			; (mov r8, r8)
 8000b24:	200000b0 	.word	0x200000b0

08000b28 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000b28:	b580      	push	{r7, lr}
 8000b2a:	b084      	sub	sp, #16
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000b30:	4b11      	ldr	r3, [pc, #68]	; (8000b78 <_sbrk+0x50>)
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	2b00      	cmp	r3, #0
 8000b36:	d102      	bne.n	8000b3e <_sbrk+0x16>
		heap_end = &end;
 8000b38:	4b0f      	ldr	r3, [pc, #60]	; (8000b78 <_sbrk+0x50>)
 8000b3a:	4a10      	ldr	r2, [pc, #64]	; (8000b7c <_sbrk+0x54>)
 8000b3c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8000b3e:	4b0e      	ldr	r3, [pc, #56]	; (8000b78 <_sbrk+0x50>)
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000b44:	4b0c      	ldr	r3, [pc, #48]	; (8000b78 <_sbrk+0x50>)
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	18d3      	adds	r3, r2, r3
 8000b4c:	466a      	mov	r2, sp
 8000b4e:	4293      	cmp	r3, r2
 8000b50:	d907      	bls.n	8000b62 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000b52:	f001 fb4b 	bl	80021ec <__errno>
 8000b56:	0003      	movs	r3, r0
 8000b58:	220c      	movs	r2, #12
 8000b5a:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8000b5c:	2301      	movs	r3, #1
 8000b5e:	425b      	negs	r3, r3
 8000b60:	e006      	b.n	8000b70 <_sbrk+0x48>
	}

	heap_end += incr;
 8000b62:	4b05      	ldr	r3, [pc, #20]	; (8000b78 <_sbrk+0x50>)
 8000b64:	681a      	ldr	r2, [r3, #0]
 8000b66:	687b      	ldr	r3, [r7, #4]
 8000b68:	18d2      	adds	r2, r2, r3
 8000b6a:	4b03      	ldr	r3, [pc, #12]	; (8000b78 <_sbrk+0x50>)
 8000b6c:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap_end;
 8000b6e:	68fb      	ldr	r3, [r7, #12]
}
 8000b70:	0018      	movs	r0, r3
 8000b72:	46bd      	mov	sp, r7
 8000b74:	b004      	add	sp, #16
 8000b76:	bd80      	pop	{r7, pc}
 8000b78:	2000009c 	.word	0x2000009c
 8000b7c:	200000f8 	.word	0x200000f8

08000b80 <SystemInit>:
 8000b80:	b580      	push	{r7, lr}
 8000b82:	af00      	add	r7, sp, #0
 8000b84:	4b03      	ldr	r3, [pc, #12]	; (8000b94 <SystemInit+0x14>)
 8000b86:	2280      	movs	r2, #128	; 0x80
 8000b88:	0512      	lsls	r2, r2, #20
 8000b8a:	609a      	str	r2, [r3, #8]
 8000b8c:	46c0      	nop			; (mov r8, r8)
 8000b8e:	46bd      	mov	sp, r7
 8000b90:	bd80      	pop	{r7, pc}
 8000b92:	46c0      	nop			; (mov r8, r8)
 8000b94:	e000ed00 	.word	0xe000ed00

08000b98 <MX_TIM14_Init>:

TIM_HandleTypeDef htim14;

/* TIM14 init function */
void MX_TIM14_Init(void)
{
 8000b98:	b580      	push	{r7, lr}
 8000b9a:	af00      	add	r7, sp, #0

  htim14.Instance = TIM14;
 8000b9c:	4b0e      	ldr	r3, [pc, #56]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000b9e:	4a0f      	ldr	r2, [pc, #60]	; (8000bdc <MX_TIM14_Init+0x44>)
 8000ba0:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 499;
 8000ba2:	4b0d      	ldr	r3, [pc, #52]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000ba4:	22f4      	movs	r2, #244	; 0xf4
 8000ba6:	32ff      	adds	r2, #255	; 0xff
 8000ba8:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000baa:	4b0b      	ldr	r3, [pc, #44]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000bac:	2200      	movs	r2, #0
 8000bae:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 1;
 8000bb0:	4b09      	ldr	r3, [pc, #36]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000bb2:	2201      	movs	r2, #1
 8000bb4:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bb6:	4b08      	ldr	r3, [pc, #32]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000bb8:	2200      	movs	r2, #0
 8000bba:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000bbc:	4b06      	ldr	r3, [pc, #24]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000bbe:	2280      	movs	r2, #128	; 0x80
 8000bc0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8000bc2:	4b05      	ldr	r3, [pc, #20]	; (8000bd8 <MX_TIM14_Init+0x40>)
 8000bc4:	0018      	movs	r0, r3
 8000bc6:	f001 f8e5 	bl	8001d94 <HAL_TIM_Base_Init>
 8000bca:	1e03      	subs	r3, r0, #0
 8000bcc:	d001      	beq.n	8000bd2 <MX_TIM14_Init+0x3a>
  {
    Error_Handler();
 8000bce:	f7ff fc9d 	bl	800050c <Error_Handler>
  }

}
 8000bd2:	46c0      	nop			; (mov r8, r8)
 8000bd4:	46bd      	mov	sp, r7
 8000bd6:	bd80      	pop	{r7, pc}
 8000bd8:	200000b0 	.word	0x200000b0
 8000bdc:	40002000 	.word	0x40002000

08000be0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8000be0:	b580      	push	{r7, lr}
 8000be2:	b084      	sub	sp, #16
 8000be4:	af00      	add	r7, sp, #0
 8000be6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM14)
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	4a0e      	ldr	r2, [pc, #56]	; (8000c28 <HAL_TIM_Base_MspInit+0x48>)
 8000bee:	4293      	cmp	r3, r2
 8000bf0:	d115      	bne.n	8000c1e <HAL_TIM_Base_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM14_MspInit 0 */

  /* USER CODE END TIM14_MspInit 0 */
    /* TIM14 clock enable */
    __HAL_RCC_TIM14_CLK_ENABLE();
 8000bf2:	4b0e      	ldr	r3, [pc, #56]	; (8000c2c <HAL_TIM_Base_MspInit+0x4c>)
 8000bf4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000bf6:	4b0d      	ldr	r3, [pc, #52]	; (8000c2c <HAL_TIM_Base_MspInit+0x4c>)
 8000bf8:	2180      	movs	r1, #128	; 0x80
 8000bfa:	0209      	lsls	r1, r1, #8
 8000bfc:	430a      	orrs	r2, r1
 8000bfe:	641a      	str	r2, [r3, #64]	; 0x40
 8000c00:	4b0a      	ldr	r3, [pc, #40]	; (8000c2c <HAL_TIM_Base_MspInit+0x4c>)
 8000c02:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000c04:	2380      	movs	r3, #128	; 0x80
 8000c06:	021b      	lsls	r3, r3, #8
 8000c08:	4013      	ands	r3, r2
 8000c0a:	60fb      	str	r3, [r7, #12]
 8000c0c:	68fb      	ldr	r3, [r7, #12]

    /* TIM14 interrupt Init */
    HAL_NVIC_SetPriority(TIM14_IRQn, 0, 0);
 8000c0e:	2200      	movs	r2, #0
 8000c10:	2100      	movs	r1, #0
 8000c12:	2013      	movs	r0, #19
 8000c14:	f000 f9f6 	bl	8001004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM14_IRQn);
 8000c18:	2013      	movs	r0, #19
 8000c1a:	f000 fa08 	bl	800102e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }
}
 8000c1e:	46c0      	nop			; (mov r8, r8)
 8000c20:	46bd      	mov	sp, r7
 8000c22:	b004      	add	sp, #16
 8000c24:	bd80      	pop	{r7, pc}
 8000c26:	46c0      	nop			; (mov r8, r8)
 8000c28:	40002000 	.word	0x40002000
 8000c2c:	40021000 	.word	0x40021000

08000c30 <HAL_TIM_PeriodElapsedCallback>:
  /* USER CODE END TIM14_MspDeInit 1 */
  }
} 

/* USER CODE BEGIN 1 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8000c30:	b590      	push	{r4, r7, lr}
 8000c32:	b085      	sub	sp, #20
 8000c34:	af00      	add	r7, sp, #0
 8000c36:	6078      	str	r0, [r7, #4]
	if (bit_kolumny < 8) {
 8000c38:	4b30      	ldr	r3, [pc, #192]	; (8000cfc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8000c3a:	781b      	ldrb	r3, [r3, #0]
 8000c3c:	2b07      	cmp	r3, #7
 8000c3e:	d853      	bhi.n	8000ce8 <HAL_TIM_PeriodElapsedCallback+0xb8>

		if (bit_wiersza < 8) {
 8000c40:	4b2f      	ldr	r3, [pc, #188]	; (8000d00 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8000c42:	781b      	ldrb	r3, [r3, #0]
 8000c44:	2b07      	cmp	r3, #7
 8000c46:	d83f      	bhi.n	8000cc8 <HAL_TIM_PeriodElapsedCallback+0x98>
			uint16_t tab_to_2nd_byte = 0;
 8000c48:	200e      	movs	r0, #14
 8000c4a:	183b      	adds	r3, r7, r0
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	801a      	strh	r2, [r3, #0]
			uint8_t spr = 0;
 8000c50:	240d      	movs	r4, #13
 8000c52:	193b      	adds	r3, r7, r4
 8000c54:	2200      	movs	r2, #0
 8000c56:	701a      	strb	r2, [r3, #0]
			uint8_t przesuniecie = 0b10000000;
 8000c58:	210c      	movs	r1, #12
 8000c5a:	187b      	adds	r3, r7, r1
 8000c5c:	2280      	movs	r2, #128	; 0x80
 8000c5e:	701a      	strb	r2, [r3, #0]

			przesuniecie = przesuniecie >> bit_wiersza;
 8000c60:	187b      	adds	r3, r7, r1
 8000c62:	781b      	ldrb	r3, [r3, #0]
 8000c64:	4a26      	ldr	r2, [pc, #152]	; (8000d00 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8000c66:	7812      	ldrb	r2, [r2, #0]
 8000c68:	4113      	asrs	r3, r2
 8000c6a:	001a      	movs	r2, r3
 8000c6c:	187b      	adds	r3, r7, r1
 8000c6e:	701a      	strb	r2, [r3, #0]
			spr = virtual_screen[bit_kolumny] & przesuniecie;
 8000c70:	4b22      	ldr	r3, [pc, #136]	; (8000cfc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8000c72:	781b      	ldrb	r3, [r3, #0]
 8000c74:	001a      	movs	r2, r3
 8000c76:	4b23      	ldr	r3, [pc, #140]	; (8000d04 <HAL_TIM_PeriodElapsedCallback+0xd4>)
 8000c78:	5c9a      	ldrb	r2, [r3, r2]
 8000c7a:	193b      	adds	r3, r7, r4
 8000c7c:	1879      	adds	r1, r7, r1
 8000c7e:	7809      	ldrb	r1, [r1, #0]
 8000c80:	400a      	ands	r2, r1
 8000c82:	701a      	strb	r2, [r3, #0]

			tab_to_2nd_byte = spr << 8;
 8000c84:	193b      	adds	r3, r7, r4
 8000c86:	781b      	ldrb	r3, [r3, #0]
 8000c88:	b29a      	uxth	r2, r3
 8000c8a:	0004      	movs	r4, r0
 8000c8c:	183b      	adds	r3, r7, r0
 8000c8e:	0212      	lsls	r2, r2, #8
 8000c90:	801a      	strh	r2, [r3, #0]

			clear_screen();
 8000c92:	f7ff fc27 	bl	80004e4 <clear_screen>

			HAL_GPIO_WritePin(GPIOA, tab_to_2nd_byte, KOLUMNA_ON);
 8000c96:	0020      	movs	r0, r4
 8000c98:	183b      	adds	r3, r7, r0
 8000c9a:	8819      	ldrh	r1, [r3, #0]
 8000c9c:	23a0      	movs	r3, #160	; 0xa0
 8000c9e:	05db      	lsls	r3, r3, #23
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	0018      	movs	r0, r3
 8000ca4:	f000 fb44 	bl	8001330 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOA, multi_wiersze, WIERSZ_ON);
 8000ca8:	4b17      	ldr	r3, [pc, #92]	; (8000d08 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 8000caa:	781b      	ldrb	r3, [r3, #0]
 8000cac:	b299      	uxth	r1, r3
 8000cae:	23a0      	movs	r3, #160	; 0xa0
 8000cb0:	05db      	lsls	r3, r3, #23
 8000cb2:	2201      	movs	r2, #1
 8000cb4:	0018      	movs	r0, r3
 8000cb6:	f000 fb3b 	bl	8001330 <HAL_GPIO_WritePin>

			bit_wiersza++;
 8000cba:	4b11      	ldr	r3, [pc, #68]	; (8000d00 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8000cbc:	781b      	ldrb	r3, [r3, #0]
 8000cbe:	3301      	adds	r3, #1
 8000cc0:	b2da      	uxtb	r2, r3
 8000cc2:	4b0f      	ldr	r3, [pc, #60]	; (8000d00 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8000cc4:	701a      	strb	r2, [r3, #0]
 8000cc6:	e002      	b.n	8000cce <HAL_TIM_PeriodElapsedCallback+0x9e>
		} else
			bit_wiersza = 0;
 8000cc8:	4b0d      	ldr	r3, [pc, #52]	; (8000d00 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 8000cca:	2200      	movs	r2, #0
 8000ccc:	701a      	strb	r2, [r3, #0]

		bit_kolumny++;
 8000cce:	4b0b      	ldr	r3, [pc, #44]	; (8000cfc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8000cd0:	781b      	ldrb	r3, [r3, #0]
 8000cd2:	3301      	adds	r3, #1
 8000cd4:	b2da      	uxtb	r2, r3
 8000cd6:	4b09      	ldr	r3, [pc, #36]	; (8000cfc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8000cd8:	701a      	strb	r2, [r3, #0]
		multi_wiersze = multi_wiersze << 1;
 8000cda:	4b0b      	ldr	r3, [pc, #44]	; (8000d08 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 8000cdc:	781b      	ldrb	r3, [r3, #0]
 8000cde:	18db      	adds	r3, r3, r3
 8000ce0:	b2da      	uxtb	r2, r3
 8000ce2:	4b09      	ldr	r3, [pc, #36]	; (8000d08 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 8000ce4:	701a      	strb	r2, [r3, #0]

	} else {
		bit_kolumny = 0;
		multi_wiersze = 0x01;
	}
}
 8000ce6:	e005      	b.n	8000cf4 <HAL_TIM_PeriodElapsedCallback+0xc4>
		bit_kolumny = 0;
 8000ce8:	4b04      	ldr	r3, [pc, #16]	; (8000cfc <HAL_TIM_PeriodElapsedCallback+0xcc>)
 8000cea:	2200      	movs	r2, #0
 8000cec:	701a      	strb	r2, [r3, #0]
		multi_wiersze = 0x01;
 8000cee:	4b06      	ldr	r3, [pc, #24]	; (8000d08 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 8000cf0:	2201      	movs	r2, #1
 8000cf2:	701a      	strb	r2, [r3, #0]
}
 8000cf4:	46c0      	nop			; (mov r8, r8)
 8000cf6:	46bd      	mov	sp, r7
 8000cf8:	b005      	add	sp, #20
 8000cfa:	bd90      	pop	{r4, r7, pc}
 8000cfc:	200000a0 	.word	0x200000a0
 8000d00:	200000a1 	.word	0x200000a1
 8000d04:	20000094 	.word	0x20000094
 8000d08:	200000ac 	.word	0x200000ac

08000d0c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000d0c:	480d      	ldr	r0, [pc, #52]	; (8000d44 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000d0e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8000d10:	2100      	movs	r1, #0
  b LoopCopyDataInit
 8000d12:	e003      	b.n	8000d1c <LoopCopyDataInit>

08000d14 <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 8000d14:	4b0c      	ldr	r3, [pc, #48]	; (8000d48 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 8000d16:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8000d18:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8000d1a:	3104      	adds	r1, #4

08000d1c <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8000d1c:	480b      	ldr	r0, [pc, #44]	; (8000d4c <LoopForever+0xa>)
  ldr r3, =_edata
 8000d1e:	4b0c      	ldr	r3, [pc, #48]	; (8000d50 <LoopForever+0xe>)
  adds r2, r0, r1
 8000d20:	1842      	adds	r2, r0, r1
  cmp r2, r3
 8000d22:	429a      	cmp	r2, r3
  bcc CopyDataInit
 8000d24:	d3f6      	bcc.n	8000d14 <CopyDataInit>
  ldr r2, =_sbss
 8000d26:	4a0b      	ldr	r2, [pc, #44]	; (8000d54 <LoopForever+0x12>)
  b LoopFillZerobss
 8000d28:	e002      	b.n	8000d30 <LoopFillZerobss>

08000d2a <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8000d2a:	2300      	movs	r3, #0
  str  r3, [r2]
 8000d2c:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000d2e:	3204      	adds	r2, #4

08000d30 <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 8000d30:	4b09      	ldr	r3, [pc, #36]	; (8000d58 <LoopForever+0x16>)
  cmp r2, r3
 8000d32:	429a      	cmp	r2, r3
  bcc FillZerobss
 8000d34:	d3f9      	bcc.n	8000d2a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000d36:	f7ff ff23 	bl	8000b80 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8000d3a:	f001 fa5d 	bl	80021f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000d3e:	f7ff fb75 	bl	800042c <main>

08000d42 <LoopForever>:

LoopForever:
    b LoopForever
 8000d42:	e7fe      	b.n	8000d42 <LoopForever>
  ldr   r0, =_estack
 8000d44:	20002000 	.word	0x20002000
  ldr r3, =_sidata
 8000d48:	0800240c 	.word	0x0800240c
  ldr r0, =_sdata
 8000d4c:	20000000 	.word	0x20000000
  ldr r3, =_edata
 8000d50:	20000074 	.word	0x20000074
  ldr r2, =_sbss
 8000d54:	20000074 	.word	0x20000074
  ldr r3, = _ebss
 8000d58:	200000f8 	.word	0x200000f8

08000d5c <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000d5c:	e7fe      	b.n	8000d5c <ADC1_IRQHandler>
	...

08000d60 <HAL_Init>:
 8000d60:	b580      	push	{r7, lr}
 8000d62:	b082      	sub	sp, #8
 8000d64:	af00      	add	r7, sp, #0
 8000d66:	1dfb      	adds	r3, r7, #7
 8000d68:	2200      	movs	r2, #0
 8000d6a:	701a      	strb	r2, [r3, #0]
 8000d6c:	4b0b      	ldr	r3, [pc, #44]	; (8000d9c <HAL_Init+0x3c>)
 8000d6e:	681a      	ldr	r2, [r3, #0]
 8000d70:	4b0a      	ldr	r3, [pc, #40]	; (8000d9c <HAL_Init+0x3c>)
 8000d72:	2180      	movs	r1, #128	; 0x80
 8000d74:	0049      	lsls	r1, r1, #1
 8000d76:	430a      	orrs	r2, r1
 8000d78:	601a      	str	r2, [r3, #0]
 8000d7a:	2000      	movs	r0, #0
 8000d7c:	f000 f810 	bl	8000da0 <HAL_InitTick>
 8000d80:	1e03      	subs	r3, r0, #0
 8000d82:	d003      	beq.n	8000d8c <HAL_Init+0x2c>
 8000d84:	1dfb      	adds	r3, r7, #7
 8000d86:	2201      	movs	r2, #1
 8000d88:	701a      	strb	r2, [r3, #0]
 8000d8a:	e001      	b.n	8000d90 <HAL_Init+0x30>
 8000d8c:	f7ff fe6a 	bl	8000a64 <HAL_MspInit>
 8000d90:	1dfb      	adds	r3, r7, #7
 8000d92:	781b      	ldrb	r3, [r3, #0]
 8000d94:	0018      	movs	r0, r3
 8000d96:	46bd      	mov	sp, r7
 8000d98:	b002      	add	sp, #8
 8000d9a:	bd80      	pop	{r7, pc}
 8000d9c:	40022000 	.word	0x40022000

08000da0 <HAL_InitTick>:
 8000da0:	b590      	push	{r4, r7, lr}
 8000da2:	b085      	sub	sp, #20
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
 8000da8:	230f      	movs	r3, #15
 8000daa:	18fb      	adds	r3, r7, r3
 8000dac:	2200      	movs	r2, #0
 8000dae:	701a      	strb	r2, [r3, #0]
 8000db0:	4b1d      	ldr	r3, [pc, #116]	; (8000e28 <HAL_InitTick+0x88>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	d02b      	beq.n	8000e10 <HAL_InitTick+0x70>
 8000db8:	4b1c      	ldr	r3, [pc, #112]	; (8000e2c <HAL_InitTick+0x8c>)
 8000dba:	681c      	ldr	r4, [r3, #0]
 8000dbc:	4b1a      	ldr	r3, [pc, #104]	; (8000e28 <HAL_InitTick+0x88>)
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	0019      	movs	r1, r3
 8000dc2:	23fa      	movs	r3, #250	; 0xfa
 8000dc4:	0098      	lsls	r0, r3, #2
 8000dc6:	f7ff f99b 	bl	8000100 <__udivsi3>
 8000dca:	0003      	movs	r3, r0
 8000dcc:	0019      	movs	r1, r3
 8000dce:	0020      	movs	r0, r4
 8000dd0:	f7ff f996 	bl	8000100 <__udivsi3>
 8000dd4:	0003      	movs	r3, r0
 8000dd6:	0018      	movs	r0, r3
 8000dd8:	f000 f939 	bl	800104e <HAL_SYSTICK_Config>
 8000ddc:	1e03      	subs	r3, r0, #0
 8000dde:	d112      	bne.n	8000e06 <HAL_InitTick+0x66>
 8000de0:	687b      	ldr	r3, [r7, #4]
 8000de2:	2b03      	cmp	r3, #3
 8000de4:	d80a      	bhi.n	8000dfc <HAL_InitTick+0x5c>
 8000de6:	6879      	ldr	r1, [r7, #4]
 8000de8:	2301      	movs	r3, #1
 8000dea:	425b      	negs	r3, r3
 8000dec:	2200      	movs	r2, #0
 8000dee:	0018      	movs	r0, r3
 8000df0:	f000 f908 	bl	8001004 <HAL_NVIC_SetPriority>
 8000df4:	4b0e      	ldr	r3, [pc, #56]	; (8000e30 <HAL_InitTick+0x90>)
 8000df6:	687a      	ldr	r2, [r7, #4]
 8000df8:	601a      	str	r2, [r3, #0]
 8000dfa:	e00d      	b.n	8000e18 <HAL_InitTick+0x78>
 8000dfc:	230f      	movs	r3, #15
 8000dfe:	18fb      	adds	r3, r7, r3
 8000e00:	2201      	movs	r2, #1
 8000e02:	701a      	strb	r2, [r3, #0]
 8000e04:	e008      	b.n	8000e18 <HAL_InitTick+0x78>
 8000e06:	230f      	movs	r3, #15
 8000e08:	18fb      	adds	r3, r7, r3
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	701a      	strb	r2, [r3, #0]
 8000e0e:	e003      	b.n	8000e18 <HAL_InitTick+0x78>
 8000e10:	230f      	movs	r3, #15
 8000e12:	18fb      	adds	r3, r7, r3
 8000e14:	2201      	movs	r2, #1
 8000e16:	701a      	strb	r2, [r3, #0]
 8000e18:	230f      	movs	r3, #15
 8000e1a:	18fb      	adds	r3, r7, r3
 8000e1c:	781b      	ldrb	r3, [r3, #0]
 8000e1e:	0018      	movs	r0, r3
 8000e20:	46bd      	mov	sp, r7
 8000e22:	b005      	add	sp, #20
 8000e24:	bd90      	pop	{r4, r7, pc}
 8000e26:	46c0      	nop			; (mov r8, r8)
 8000e28:	2000000c 	.word	0x2000000c
 8000e2c:	20000004 	.word	0x20000004
 8000e30:	20000008 	.word	0x20000008

08000e34 <HAL_IncTick>:
 8000e34:	b580      	push	{r7, lr}
 8000e36:	af00      	add	r7, sp, #0
 8000e38:	4b04      	ldr	r3, [pc, #16]	; (8000e4c <HAL_IncTick+0x18>)
 8000e3a:	681a      	ldr	r2, [r3, #0]
 8000e3c:	4b04      	ldr	r3, [pc, #16]	; (8000e50 <HAL_IncTick+0x1c>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	18d2      	adds	r2, r2, r3
 8000e42:	4b02      	ldr	r3, [pc, #8]	; (8000e4c <HAL_IncTick+0x18>)
 8000e44:	601a      	str	r2, [r3, #0]
 8000e46:	46c0      	nop			; (mov r8, r8)
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd80      	pop	{r7, pc}
 8000e4c:	200000f0 	.word	0x200000f0
 8000e50:	2000000c 	.word	0x2000000c

08000e54 <HAL_GetTick>:
 8000e54:	b580      	push	{r7, lr}
 8000e56:	af00      	add	r7, sp, #0
 8000e58:	4b02      	ldr	r3, [pc, #8]	; (8000e64 <HAL_GetTick+0x10>)
 8000e5a:	681b      	ldr	r3, [r3, #0]
 8000e5c:	0018      	movs	r0, r3
 8000e5e:	46bd      	mov	sp, r7
 8000e60:	bd80      	pop	{r7, pc}
 8000e62:	46c0      	nop			; (mov r8, r8)
 8000e64:	200000f0 	.word	0x200000f0

08000e68 <HAL_Delay>:
 8000e68:	b580      	push	{r7, lr}
 8000e6a:	b084      	sub	sp, #16
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	6078      	str	r0, [r7, #4]
 8000e70:	f7ff fff0 	bl	8000e54 <HAL_GetTick>
 8000e74:	0003      	movs	r3, r0
 8000e76:	60bb      	str	r3, [r7, #8]
 8000e78:	687b      	ldr	r3, [r7, #4]
 8000e7a:	60fb      	str	r3, [r7, #12]
 8000e7c:	68fb      	ldr	r3, [r7, #12]
 8000e7e:	3301      	adds	r3, #1
 8000e80:	d004      	beq.n	8000e8c <HAL_Delay+0x24>
 8000e82:	4b09      	ldr	r3, [pc, #36]	; (8000ea8 <HAL_Delay+0x40>)
 8000e84:	681b      	ldr	r3, [r3, #0]
 8000e86:	68fa      	ldr	r2, [r7, #12]
 8000e88:	18d3      	adds	r3, r2, r3
 8000e8a:	60fb      	str	r3, [r7, #12]
 8000e8c:	46c0      	nop			; (mov r8, r8)
 8000e8e:	f7ff ffe1 	bl	8000e54 <HAL_GetTick>
 8000e92:	0002      	movs	r2, r0
 8000e94:	68bb      	ldr	r3, [r7, #8]
 8000e96:	1ad3      	subs	r3, r2, r3
 8000e98:	68fa      	ldr	r2, [r7, #12]
 8000e9a:	429a      	cmp	r2, r3
 8000e9c:	d8f7      	bhi.n	8000e8e <HAL_Delay+0x26>
 8000e9e:	46c0      	nop			; (mov r8, r8)
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	b004      	add	sp, #16
 8000ea4:	bd80      	pop	{r7, pc}
 8000ea6:	46c0      	nop			; (mov r8, r8)
 8000ea8:	2000000c 	.word	0x2000000c

08000eac <__NVIC_EnableIRQ>:
 8000eac:	b580      	push	{r7, lr}
 8000eae:	b082      	sub	sp, #8
 8000eb0:	af00      	add	r7, sp, #0
 8000eb2:	0002      	movs	r2, r0
 8000eb4:	1dfb      	adds	r3, r7, #7
 8000eb6:	701a      	strb	r2, [r3, #0]
 8000eb8:	1dfb      	adds	r3, r7, #7
 8000eba:	781b      	ldrb	r3, [r3, #0]
 8000ebc:	2b7f      	cmp	r3, #127	; 0x7f
 8000ebe:	d809      	bhi.n	8000ed4 <__NVIC_EnableIRQ+0x28>
 8000ec0:	1dfb      	adds	r3, r7, #7
 8000ec2:	781b      	ldrb	r3, [r3, #0]
 8000ec4:	001a      	movs	r2, r3
 8000ec6:	231f      	movs	r3, #31
 8000ec8:	401a      	ands	r2, r3
 8000eca:	4b04      	ldr	r3, [pc, #16]	; (8000edc <__NVIC_EnableIRQ+0x30>)
 8000ecc:	2101      	movs	r1, #1
 8000ece:	4091      	lsls	r1, r2
 8000ed0:	000a      	movs	r2, r1
 8000ed2:	601a      	str	r2, [r3, #0]
 8000ed4:	46c0      	nop			; (mov r8, r8)
 8000ed6:	46bd      	mov	sp, r7
 8000ed8:	b002      	add	sp, #8
 8000eda:	bd80      	pop	{r7, pc}
 8000edc:	e000e100 	.word	0xe000e100

08000ee0 <__NVIC_SetPriority>:
 8000ee0:	b590      	push	{r4, r7, lr}
 8000ee2:	b083      	sub	sp, #12
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	0002      	movs	r2, r0
 8000ee8:	6039      	str	r1, [r7, #0]
 8000eea:	1dfb      	adds	r3, r7, #7
 8000eec:	701a      	strb	r2, [r3, #0]
 8000eee:	1dfb      	adds	r3, r7, #7
 8000ef0:	781b      	ldrb	r3, [r3, #0]
 8000ef2:	2b7f      	cmp	r3, #127	; 0x7f
 8000ef4:	d828      	bhi.n	8000f48 <__NVIC_SetPriority+0x68>
 8000ef6:	4a2f      	ldr	r2, [pc, #188]	; (8000fb4 <__NVIC_SetPriority+0xd4>)
 8000ef8:	1dfb      	adds	r3, r7, #7
 8000efa:	781b      	ldrb	r3, [r3, #0]
 8000efc:	b25b      	sxtb	r3, r3
 8000efe:	089b      	lsrs	r3, r3, #2
 8000f00:	33c0      	adds	r3, #192	; 0xc0
 8000f02:	009b      	lsls	r3, r3, #2
 8000f04:	589b      	ldr	r3, [r3, r2]
 8000f06:	1dfa      	adds	r2, r7, #7
 8000f08:	7812      	ldrb	r2, [r2, #0]
 8000f0a:	0011      	movs	r1, r2
 8000f0c:	2203      	movs	r2, #3
 8000f0e:	400a      	ands	r2, r1
 8000f10:	00d2      	lsls	r2, r2, #3
 8000f12:	21ff      	movs	r1, #255	; 0xff
 8000f14:	4091      	lsls	r1, r2
 8000f16:	000a      	movs	r2, r1
 8000f18:	43d2      	mvns	r2, r2
 8000f1a:	401a      	ands	r2, r3
 8000f1c:	0011      	movs	r1, r2
 8000f1e:	683b      	ldr	r3, [r7, #0]
 8000f20:	019b      	lsls	r3, r3, #6
 8000f22:	22ff      	movs	r2, #255	; 0xff
 8000f24:	401a      	ands	r2, r3
 8000f26:	1dfb      	adds	r3, r7, #7
 8000f28:	781b      	ldrb	r3, [r3, #0]
 8000f2a:	0018      	movs	r0, r3
 8000f2c:	2303      	movs	r3, #3
 8000f2e:	4003      	ands	r3, r0
 8000f30:	00db      	lsls	r3, r3, #3
 8000f32:	409a      	lsls	r2, r3
 8000f34:	481f      	ldr	r0, [pc, #124]	; (8000fb4 <__NVIC_SetPriority+0xd4>)
 8000f36:	1dfb      	adds	r3, r7, #7
 8000f38:	781b      	ldrb	r3, [r3, #0]
 8000f3a:	b25b      	sxtb	r3, r3
 8000f3c:	089b      	lsrs	r3, r3, #2
 8000f3e:	430a      	orrs	r2, r1
 8000f40:	33c0      	adds	r3, #192	; 0xc0
 8000f42:	009b      	lsls	r3, r3, #2
 8000f44:	501a      	str	r2, [r3, r0]
 8000f46:	e031      	b.n	8000fac <__NVIC_SetPriority+0xcc>
 8000f48:	4a1b      	ldr	r2, [pc, #108]	; (8000fb8 <__NVIC_SetPriority+0xd8>)
 8000f4a:	1dfb      	adds	r3, r7, #7
 8000f4c:	781b      	ldrb	r3, [r3, #0]
 8000f4e:	0019      	movs	r1, r3
 8000f50:	230f      	movs	r3, #15
 8000f52:	400b      	ands	r3, r1
 8000f54:	3b08      	subs	r3, #8
 8000f56:	089b      	lsrs	r3, r3, #2
 8000f58:	3306      	adds	r3, #6
 8000f5a:	009b      	lsls	r3, r3, #2
 8000f5c:	18d3      	adds	r3, r2, r3
 8000f5e:	3304      	adds	r3, #4
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	1dfa      	adds	r2, r7, #7
 8000f64:	7812      	ldrb	r2, [r2, #0]
 8000f66:	0011      	movs	r1, r2
 8000f68:	2203      	movs	r2, #3
 8000f6a:	400a      	ands	r2, r1
 8000f6c:	00d2      	lsls	r2, r2, #3
 8000f6e:	21ff      	movs	r1, #255	; 0xff
 8000f70:	4091      	lsls	r1, r2
 8000f72:	000a      	movs	r2, r1
 8000f74:	43d2      	mvns	r2, r2
 8000f76:	401a      	ands	r2, r3
 8000f78:	0011      	movs	r1, r2
 8000f7a:	683b      	ldr	r3, [r7, #0]
 8000f7c:	019b      	lsls	r3, r3, #6
 8000f7e:	22ff      	movs	r2, #255	; 0xff
 8000f80:	401a      	ands	r2, r3
 8000f82:	1dfb      	adds	r3, r7, #7
 8000f84:	781b      	ldrb	r3, [r3, #0]
 8000f86:	0018      	movs	r0, r3
 8000f88:	2303      	movs	r3, #3
 8000f8a:	4003      	ands	r3, r0
 8000f8c:	00db      	lsls	r3, r3, #3
 8000f8e:	409a      	lsls	r2, r3
 8000f90:	4809      	ldr	r0, [pc, #36]	; (8000fb8 <__NVIC_SetPriority+0xd8>)
 8000f92:	1dfb      	adds	r3, r7, #7
 8000f94:	781b      	ldrb	r3, [r3, #0]
 8000f96:	001c      	movs	r4, r3
 8000f98:	230f      	movs	r3, #15
 8000f9a:	4023      	ands	r3, r4
 8000f9c:	3b08      	subs	r3, #8
 8000f9e:	089b      	lsrs	r3, r3, #2
 8000fa0:	430a      	orrs	r2, r1
 8000fa2:	3306      	adds	r3, #6
 8000fa4:	009b      	lsls	r3, r3, #2
 8000fa6:	18c3      	adds	r3, r0, r3
 8000fa8:	3304      	adds	r3, #4
 8000faa:	601a      	str	r2, [r3, #0]
 8000fac:	46c0      	nop			; (mov r8, r8)
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	b003      	add	sp, #12
 8000fb2:	bd90      	pop	{r4, r7, pc}
 8000fb4:	e000e100 	.word	0xe000e100
 8000fb8:	e000ed00 	.word	0xe000ed00

08000fbc <SysTick_Config>:
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b082      	sub	sp, #8
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	3b01      	subs	r3, #1
 8000fc8:	4a0c      	ldr	r2, [pc, #48]	; (8000ffc <SysTick_Config+0x40>)
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	d901      	bls.n	8000fd2 <SysTick_Config+0x16>
 8000fce:	2301      	movs	r3, #1
 8000fd0:	e010      	b.n	8000ff4 <SysTick_Config+0x38>
 8000fd2:	4b0b      	ldr	r3, [pc, #44]	; (8001000 <SysTick_Config+0x44>)
 8000fd4:	687a      	ldr	r2, [r7, #4]
 8000fd6:	3a01      	subs	r2, #1
 8000fd8:	605a      	str	r2, [r3, #4]
 8000fda:	2301      	movs	r3, #1
 8000fdc:	425b      	negs	r3, r3
 8000fde:	2103      	movs	r1, #3
 8000fe0:	0018      	movs	r0, r3
 8000fe2:	f7ff ff7d 	bl	8000ee0 <__NVIC_SetPriority>
 8000fe6:	4b06      	ldr	r3, [pc, #24]	; (8001000 <SysTick_Config+0x44>)
 8000fe8:	2200      	movs	r2, #0
 8000fea:	609a      	str	r2, [r3, #8]
 8000fec:	4b04      	ldr	r3, [pc, #16]	; (8001000 <SysTick_Config+0x44>)
 8000fee:	2207      	movs	r2, #7
 8000ff0:	601a      	str	r2, [r3, #0]
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	0018      	movs	r0, r3
 8000ff6:	46bd      	mov	sp, r7
 8000ff8:	b002      	add	sp, #8
 8000ffa:	bd80      	pop	{r7, pc}
 8000ffc:	00ffffff 	.word	0x00ffffff
 8001000:	e000e010 	.word	0xe000e010

08001004 <HAL_NVIC_SetPriority>:
 8001004:	b580      	push	{r7, lr}
 8001006:	b084      	sub	sp, #16
 8001008:	af00      	add	r7, sp, #0
 800100a:	60b9      	str	r1, [r7, #8]
 800100c:	607a      	str	r2, [r7, #4]
 800100e:	210f      	movs	r1, #15
 8001010:	187b      	adds	r3, r7, r1
 8001012:	1c02      	adds	r2, r0, #0
 8001014:	701a      	strb	r2, [r3, #0]
 8001016:	68ba      	ldr	r2, [r7, #8]
 8001018:	187b      	adds	r3, r7, r1
 800101a:	781b      	ldrb	r3, [r3, #0]
 800101c:	b25b      	sxtb	r3, r3
 800101e:	0011      	movs	r1, r2
 8001020:	0018      	movs	r0, r3
 8001022:	f7ff ff5d 	bl	8000ee0 <__NVIC_SetPriority>
 8001026:	46c0      	nop			; (mov r8, r8)
 8001028:	46bd      	mov	sp, r7
 800102a:	b004      	add	sp, #16
 800102c:	bd80      	pop	{r7, pc}

0800102e <HAL_NVIC_EnableIRQ>:
 800102e:	b580      	push	{r7, lr}
 8001030:	b082      	sub	sp, #8
 8001032:	af00      	add	r7, sp, #0
 8001034:	0002      	movs	r2, r0
 8001036:	1dfb      	adds	r3, r7, #7
 8001038:	701a      	strb	r2, [r3, #0]
 800103a:	1dfb      	adds	r3, r7, #7
 800103c:	781b      	ldrb	r3, [r3, #0]
 800103e:	b25b      	sxtb	r3, r3
 8001040:	0018      	movs	r0, r3
 8001042:	f7ff ff33 	bl	8000eac <__NVIC_EnableIRQ>
 8001046:	46c0      	nop			; (mov r8, r8)
 8001048:	46bd      	mov	sp, r7
 800104a:	b002      	add	sp, #8
 800104c:	bd80      	pop	{r7, pc}

0800104e <HAL_SYSTICK_Config>:
 800104e:	b580      	push	{r7, lr}
 8001050:	b082      	sub	sp, #8
 8001052:	af00      	add	r7, sp, #0
 8001054:	6078      	str	r0, [r7, #4]
 8001056:	687b      	ldr	r3, [r7, #4]
 8001058:	0018      	movs	r0, r3
 800105a:	f7ff ffaf 	bl	8000fbc <SysTick_Config>
 800105e:	0003      	movs	r3, r0
 8001060:	0018      	movs	r0, r3
 8001062:	46bd      	mov	sp, r7
 8001064:	b002      	add	sp, #8
 8001066:	bd80      	pop	{r7, pc}

08001068 <HAL_GPIO_Init>:
 8001068:	b580      	push	{r7, lr}
 800106a:	b086      	sub	sp, #24
 800106c:	af00      	add	r7, sp, #0
 800106e:	6078      	str	r0, [r7, #4]
 8001070:	6039      	str	r1, [r7, #0]
 8001072:	2300      	movs	r3, #0
 8001074:	617b      	str	r3, [r7, #20]
 8001076:	e147      	b.n	8001308 <HAL_GPIO_Init+0x2a0>
 8001078:	683b      	ldr	r3, [r7, #0]
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	2101      	movs	r1, #1
 800107e:	697a      	ldr	r2, [r7, #20]
 8001080:	4091      	lsls	r1, r2
 8001082:	000a      	movs	r2, r1
 8001084:	4013      	ands	r3, r2
 8001086:	60fb      	str	r3, [r7, #12]
 8001088:	68fb      	ldr	r3, [r7, #12]
 800108a:	2b00      	cmp	r3, #0
 800108c:	d100      	bne.n	8001090 <HAL_GPIO_Init+0x28>
 800108e:	e138      	b.n	8001302 <HAL_GPIO_Init+0x29a>
 8001090:	683b      	ldr	r3, [r7, #0]
 8001092:	685b      	ldr	r3, [r3, #4]
 8001094:	2b02      	cmp	r3, #2
 8001096:	d003      	beq.n	80010a0 <HAL_GPIO_Init+0x38>
 8001098:	683b      	ldr	r3, [r7, #0]
 800109a:	685b      	ldr	r3, [r3, #4]
 800109c:	2b12      	cmp	r3, #18
 800109e:	d123      	bne.n	80010e8 <HAL_GPIO_Init+0x80>
 80010a0:	697b      	ldr	r3, [r7, #20]
 80010a2:	08da      	lsrs	r2, r3, #3
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	3208      	adds	r2, #8
 80010a8:	0092      	lsls	r2, r2, #2
 80010aa:	58d3      	ldr	r3, [r2, r3]
 80010ac:	613b      	str	r3, [r7, #16]
 80010ae:	697b      	ldr	r3, [r7, #20]
 80010b0:	2207      	movs	r2, #7
 80010b2:	4013      	ands	r3, r2
 80010b4:	009b      	lsls	r3, r3, #2
 80010b6:	220f      	movs	r2, #15
 80010b8:	409a      	lsls	r2, r3
 80010ba:	0013      	movs	r3, r2
 80010bc:	43da      	mvns	r2, r3
 80010be:	693b      	ldr	r3, [r7, #16]
 80010c0:	4013      	ands	r3, r2
 80010c2:	613b      	str	r3, [r7, #16]
 80010c4:	683b      	ldr	r3, [r7, #0]
 80010c6:	691a      	ldr	r2, [r3, #16]
 80010c8:	697b      	ldr	r3, [r7, #20]
 80010ca:	2107      	movs	r1, #7
 80010cc:	400b      	ands	r3, r1
 80010ce:	009b      	lsls	r3, r3, #2
 80010d0:	409a      	lsls	r2, r3
 80010d2:	0013      	movs	r3, r2
 80010d4:	693a      	ldr	r2, [r7, #16]
 80010d6:	4313      	orrs	r3, r2
 80010d8:	613b      	str	r3, [r7, #16]
 80010da:	697b      	ldr	r3, [r7, #20]
 80010dc:	08da      	lsrs	r2, r3, #3
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	3208      	adds	r2, #8
 80010e2:	0092      	lsls	r2, r2, #2
 80010e4:	6939      	ldr	r1, [r7, #16]
 80010e6:	50d1      	str	r1, [r2, r3]
 80010e8:	687b      	ldr	r3, [r7, #4]
 80010ea:	681b      	ldr	r3, [r3, #0]
 80010ec:	613b      	str	r3, [r7, #16]
 80010ee:	697b      	ldr	r3, [r7, #20]
 80010f0:	005b      	lsls	r3, r3, #1
 80010f2:	2203      	movs	r2, #3
 80010f4:	409a      	lsls	r2, r3
 80010f6:	0013      	movs	r3, r2
 80010f8:	43da      	mvns	r2, r3
 80010fa:	693b      	ldr	r3, [r7, #16]
 80010fc:	4013      	ands	r3, r2
 80010fe:	613b      	str	r3, [r7, #16]
 8001100:	683b      	ldr	r3, [r7, #0]
 8001102:	685b      	ldr	r3, [r3, #4]
 8001104:	2203      	movs	r2, #3
 8001106:	401a      	ands	r2, r3
 8001108:	697b      	ldr	r3, [r7, #20]
 800110a:	005b      	lsls	r3, r3, #1
 800110c:	409a      	lsls	r2, r3
 800110e:	0013      	movs	r3, r2
 8001110:	693a      	ldr	r2, [r7, #16]
 8001112:	4313      	orrs	r3, r2
 8001114:	613b      	str	r3, [r7, #16]
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	693a      	ldr	r2, [r7, #16]
 800111a:	601a      	str	r2, [r3, #0]
 800111c:	683b      	ldr	r3, [r7, #0]
 800111e:	685b      	ldr	r3, [r3, #4]
 8001120:	2b01      	cmp	r3, #1
 8001122:	d00b      	beq.n	800113c <HAL_GPIO_Init+0xd4>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	685b      	ldr	r3, [r3, #4]
 8001128:	2b02      	cmp	r3, #2
 800112a:	d007      	beq.n	800113c <HAL_GPIO_Init+0xd4>
 800112c:	683b      	ldr	r3, [r7, #0]
 800112e:	685b      	ldr	r3, [r3, #4]
 8001130:	2b11      	cmp	r3, #17
 8001132:	d003      	beq.n	800113c <HAL_GPIO_Init+0xd4>
 8001134:	683b      	ldr	r3, [r7, #0]
 8001136:	685b      	ldr	r3, [r3, #4]
 8001138:	2b12      	cmp	r3, #18
 800113a:	d130      	bne.n	800119e <HAL_GPIO_Init+0x136>
 800113c:	687b      	ldr	r3, [r7, #4]
 800113e:	689b      	ldr	r3, [r3, #8]
 8001140:	613b      	str	r3, [r7, #16]
 8001142:	697b      	ldr	r3, [r7, #20]
 8001144:	005b      	lsls	r3, r3, #1
 8001146:	2203      	movs	r2, #3
 8001148:	409a      	lsls	r2, r3
 800114a:	0013      	movs	r3, r2
 800114c:	43da      	mvns	r2, r3
 800114e:	693b      	ldr	r3, [r7, #16]
 8001150:	4013      	ands	r3, r2
 8001152:	613b      	str	r3, [r7, #16]
 8001154:	683b      	ldr	r3, [r7, #0]
 8001156:	68da      	ldr	r2, [r3, #12]
 8001158:	697b      	ldr	r3, [r7, #20]
 800115a:	005b      	lsls	r3, r3, #1
 800115c:	409a      	lsls	r2, r3
 800115e:	0013      	movs	r3, r2
 8001160:	693a      	ldr	r2, [r7, #16]
 8001162:	4313      	orrs	r3, r2
 8001164:	613b      	str	r3, [r7, #16]
 8001166:	687b      	ldr	r3, [r7, #4]
 8001168:	693a      	ldr	r2, [r7, #16]
 800116a:	609a      	str	r2, [r3, #8]
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	685b      	ldr	r3, [r3, #4]
 8001170:	613b      	str	r3, [r7, #16]
 8001172:	2201      	movs	r2, #1
 8001174:	697b      	ldr	r3, [r7, #20]
 8001176:	409a      	lsls	r2, r3
 8001178:	0013      	movs	r3, r2
 800117a:	43da      	mvns	r2, r3
 800117c:	693b      	ldr	r3, [r7, #16]
 800117e:	4013      	ands	r3, r2
 8001180:	613b      	str	r3, [r7, #16]
 8001182:	683b      	ldr	r3, [r7, #0]
 8001184:	685b      	ldr	r3, [r3, #4]
 8001186:	091b      	lsrs	r3, r3, #4
 8001188:	2201      	movs	r2, #1
 800118a:	401a      	ands	r2, r3
 800118c:	697b      	ldr	r3, [r7, #20]
 800118e:	409a      	lsls	r2, r3
 8001190:	0013      	movs	r3, r2
 8001192:	693a      	ldr	r2, [r7, #16]
 8001194:	4313      	orrs	r3, r2
 8001196:	613b      	str	r3, [r7, #16]
 8001198:	687b      	ldr	r3, [r7, #4]
 800119a:	693a      	ldr	r2, [r7, #16]
 800119c:	605a      	str	r2, [r3, #4]
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	68db      	ldr	r3, [r3, #12]
 80011a2:	613b      	str	r3, [r7, #16]
 80011a4:	697b      	ldr	r3, [r7, #20]
 80011a6:	005b      	lsls	r3, r3, #1
 80011a8:	2203      	movs	r2, #3
 80011aa:	409a      	lsls	r2, r3
 80011ac:	0013      	movs	r3, r2
 80011ae:	43da      	mvns	r2, r3
 80011b0:	693b      	ldr	r3, [r7, #16]
 80011b2:	4013      	ands	r3, r2
 80011b4:	613b      	str	r3, [r7, #16]
 80011b6:	683b      	ldr	r3, [r7, #0]
 80011b8:	689a      	ldr	r2, [r3, #8]
 80011ba:	697b      	ldr	r3, [r7, #20]
 80011bc:	005b      	lsls	r3, r3, #1
 80011be:	409a      	lsls	r2, r3
 80011c0:	0013      	movs	r3, r2
 80011c2:	693a      	ldr	r2, [r7, #16]
 80011c4:	4313      	orrs	r3, r2
 80011c6:	613b      	str	r3, [r7, #16]
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	693a      	ldr	r2, [r7, #16]
 80011cc:	60da      	str	r2, [r3, #12]
 80011ce:	683b      	ldr	r3, [r7, #0]
 80011d0:	685a      	ldr	r2, [r3, #4]
 80011d2:	2380      	movs	r3, #128	; 0x80
 80011d4:	055b      	lsls	r3, r3, #21
 80011d6:	4013      	ands	r3, r2
 80011d8:	d100      	bne.n	80011dc <HAL_GPIO_Init+0x174>
 80011da:	e092      	b.n	8001302 <HAL_GPIO_Init+0x29a>
 80011dc:	4a50      	ldr	r2, [pc, #320]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80011de:	697b      	ldr	r3, [r7, #20]
 80011e0:	089b      	lsrs	r3, r3, #2
 80011e2:	3318      	adds	r3, #24
 80011e4:	009b      	lsls	r3, r3, #2
 80011e6:	589b      	ldr	r3, [r3, r2]
 80011e8:	613b      	str	r3, [r7, #16]
 80011ea:	697b      	ldr	r3, [r7, #20]
 80011ec:	2203      	movs	r2, #3
 80011ee:	4013      	ands	r3, r2
 80011f0:	00db      	lsls	r3, r3, #3
 80011f2:	220f      	movs	r2, #15
 80011f4:	409a      	lsls	r2, r3
 80011f6:	0013      	movs	r3, r2
 80011f8:	43da      	mvns	r2, r3
 80011fa:	693b      	ldr	r3, [r7, #16]
 80011fc:	4013      	ands	r3, r2
 80011fe:	613b      	str	r3, [r7, #16]
 8001200:	687a      	ldr	r2, [r7, #4]
 8001202:	23a0      	movs	r3, #160	; 0xa0
 8001204:	05db      	lsls	r3, r3, #23
 8001206:	429a      	cmp	r2, r3
 8001208:	d013      	beq.n	8001232 <HAL_GPIO_Init+0x1ca>
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	4a45      	ldr	r2, [pc, #276]	; (8001324 <HAL_GPIO_Init+0x2bc>)
 800120e:	4293      	cmp	r3, r2
 8001210:	d00d      	beq.n	800122e <HAL_GPIO_Init+0x1c6>
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	4a44      	ldr	r2, [pc, #272]	; (8001328 <HAL_GPIO_Init+0x2c0>)
 8001216:	4293      	cmp	r3, r2
 8001218:	d007      	beq.n	800122a <HAL_GPIO_Init+0x1c2>
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	4a43      	ldr	r2, [pc, #268]	; (800132c <HAL_GPIO_Init+0x2c4>)
 800121e:	4293      	cmp	r3, r2
 8001220:	d101      	bne.n	8001226 <HAL_GPIO_Init+0x1be>
 8001222:	2303      	movs	r3, #3
 8001224:	e006      	b.n	8001234 <HAL_GPIO_Init+0x1cc>
 8001226:	2305      	movs	r3, #5
 8001228:	e004      	b.n	8001234 <HAL_GPIO_Init+0x1cc>
 800122a:	2302      	movs	r3, #2
 800122c:	e002      	b.n	8001234 <HAL_GPIO_Init+0x1cc>
 800122e:	2301      	movs	r3, #1
 8001230:	e000      	b.n	8001234 <HAL_GPIO_Init+0x1cc>
 8001232:	2300      	movs	r3, #0
 8001234:	697a      	ldr	r2, [r7, #20]
 8001236:	2103      	movs	r1, #3
 8001238:	400a      	ands	r2, r1
 800123a:	00d2      	lsls	r2, r2, #3
 800123c:	4093      	lsls	r3, r2
 800123e:	693a      	ldr	r2, [r7, #16]
 8001240:	4313      	orrs	r3, r2
 8001242:	613b      	str	r3, [r7, #16]
 8001244:	4936      	ldr	r1, [pc, #216]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 8001246:	697b      	ldr	r3, [r7, #20]
 8001248:	089b      	lsrs	r3, r3, #2
 800124a:	3318      	adds	r3, #24
 800124c:	009b      	lsls	r3, r3, #2
 800124e:	693a      	ldr	r2, [r7, #16]
 8001250:	505a      	str	r2, [r3, r1]
 8001252:	4a33      	ldr	r2, [pc, #204]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 8001254:	2380      	movs	r3, #128	; 0x80
 8001256:	58d3      	ldr	r3, [r2, r3]
 8001258:	613b      	str	r3, [r7, #16]
 800125a:	68fb      	ldr	r3, [r7, #12]
 800125c:	43da      	mvns	r2, r3
 800125e:	693b      	ldr	r3, [r7, #16]
 8001260:	4013      	ands	r3, r2
 8001262:	613b      	str	r3, [r7, #16]
 8001264:	683b      	ldr	r3, [r7, #0]
 8001266:	685a      	ldr	r2, [r3, #4]
 8001268:	2380      	movs	r3, #128	; 0x80
 800126a:	025b      	lsls	r3, r3, #9
 800126c:	4013      	ands	r3, r2
 800126e:	d003      	beq.n	8001278 <HAL_GPIO_Init+0x210>
 8001270:	693a      	ldr	r2, [r7, #16]
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	4313      	orrs	r3, r2
 8001276:	613b      	str	r3, [r7, #16]
 8001278:	4929      	ldr	r1, [pc, #164]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 800127a:	2280      	movs	r2, #128	; 0x80
 800127c:	693b      	ldr	r3, [r7, #16]
 800127e:	508b      	str	r3, [r1, r2]
 8001280:	4a27      	ldr	r2, [pc, #156]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 8001282:	2384      	movs	r3, #132	; 0x84
 8001284:	58d3      	ldr	r3, [r2, r3]
 8001286:	613b      	str	r3, [r7, #16]
 8001288:	68fb      	ldr	r3, [r7, #12]
 800128a:	43da      	mvns	r2, r3
 800128c:	693b      	ldr	r3, [r7, #16]
 800128e:	4013      	ands	r3, r2
 8001290:	613b      	str	r3, [r7, #16]
 8001292:	683b      	ldr	r3, [r7, #0]
 8001294:	685a      	ldr	r2, [r3, #4]
 8001296:	2380      	movs	r3, #128	; 0x80
 8001298:	029b      	lsls	r3, r3, #10
 800129a:	4013      	ands	r3, r2
 800129c:	d003      	beq.n	80012a6 <HAL_GPIO_Init+0x23e>
 800129e:	693a      	ldr	r2, [r7, #16]
 80012a0:	68fb      	ldr	r3, [r7, #12]
 80012a2:	4313      	orrs	r3, r2
 80012a4:	613b      	str	r3, [r7, #16]
 80012a6:	491e      	ldr	r1, [pc, #120]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80012a8:	2284      	movs	r2, #132	; 0x84
 80012aa:	693b      	ldr	r3, [r7, #16]
 80012ac:	508b      	str	r3, [r1, r2]
 80012ae:	4b1c      	ldr	r3, [pc, #112]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	613b      	str	r3, [r7, #16]
 80012b4:	68fb      	ldr	r3, [r7, #12]
 80012b6:	43da      	mvns	r2, r3
 80012b8:	693b      	ldr	r3, [r7, #16]
 80012ba:	4013      	ands	r3, r2
 80012bc:	613b      	str	r3, [r7, #16]
 80012be:	683b      	ldr	r3, [r7, #0]
 80012c0:	685a      	ldr	r2, [r3, #4]
 80012c2:	2380      	movs	r3, #128	; 0x80
 80012c4:	035b      	lsls	r3, r3, #13
 80012c6:	4013      	ands	r3, r2
 80012c8:	d003      	beq.n	80012d2 <HAL_GPIO_Init+0x26a>
 80012ca:	693a      	ldr	r2, [r7, #16]
 80012cc:	68fb      	ldr	r3, [r7, #12]
 80012ce:	4313      	orrs	r3, r2
 80012d0:	613b      	str	r3, [r7, #16]
 80012d2:	4b13      	ldr	r3, [pc, #76]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80012d4:	693a      	ldr	r2, [r7, #16]
 80012d6:	601a      	str	r2, [r3, #0]
 80012d8:	4b11      	ldr	r3, [pc, #68]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80012da:	685b      	ldr	r3, [r3, #4]
 80012dc:	613b      	str	r3, [r7, #16]
 80012de:	68fb      	ldr	r3, [r7, #12]
 80012e0:	43da      	mvns	r2, r3
 80012e2:	693b      	ldr	r3, [r7, #16]
 80012e4:	4013      	ands	r3, r2
 80012e6:	613b      	str	r3, [r7, #16]
 80012e8:	683b      	ldr	r3, [r7, #0]
 80012ea:	685a      	ldr	r2, [r3, #4]
 80012ec:	2380      	movs	r3, #128	; 0x80
 80012ee:	039b      	lsls	r3, r3, #14
 80012f0:	4013      	ands	r3, r2
 80012f2:	d003      	beq.n	80012fc <HAL_GPIO_Init+0x294>
 80012f4:	693a      	ldr	r2, [r7, #16]
 80012f6:	68fb      	ldr	r3, [r7, #12]
 80012f8:	4313      	orrs	r3, r2
 80012fa:	613b      	str	r3, [r7, #16]
 80012fc:	4b08      	ldr	r3, [pc, #32]	; (8001320 <HAL_GPIO_Init+0x2b8>)
 80012fe:	693a      	ldr	r2, [r7, #16]
 8001300:	605a      	str	r2, [r3, #4]
 8001302:	697b      	ldr	r3, [r7, #20]
 8001304:	3301      	adds	r3, #1
 8001306:	617b      	str	r3, [r7, #20]
 8001308:	683b      	ldr	r3, [r7, #0]
 800130a:	681a      	ldr	r2, [r3, #0]
 800130c:	697b      	ldr	r3, [r7, #20]
 800130e:	40da      	lsrs	r2, r3
 8001310:	1e13      	subs	r3, r2, #0
 8001312:	d000      	beq.n	8001316 <HAL_GPIO_Init+0x2ae>
 8001314:	e6b0      	b.n	8001078 <HAL_GPIO_Init+0x10>
 8001316:	46c0      	nop			; (mov r8, r8)
 8001318:	46bd      	mov	sp, r7
 800131a:	b006      	add	sp, #24
 800131c:	bd80      	pop	{r7, pc}
 800131e:	46c0      	nop			; (mov r8, r8)
 8001320:	40021800 	.word	0x40021800
 8001324:	50000400 	.word	0x50000400
 8001328:	50000800 	.word	0x50000800
 800132c:	50000c00 	.word	0x50000c00

08001330 <HAL_GPIO_WritePin>:
 8001330:	b580      	push	{r7, lr}
 8001332:	b082      	sub	sp, #8
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
 8001338:	0008      	movs	r0, r1
 800133a:	0011      	movs	r1, r2
 800133c:	1cbb      	adds	r3, r7, #2
 800133e:	1c02      	adds	r2, r0, #0
 8001340:	801a      	strh	r2, [r3, #0]
 8001342:	1c7b      	adds	r3, r7, #1
 8001344:	1c0a      	adds	r2, r1, #0
 8001346:	701a      	strb	r2, [r3, #0]
 8001348:	1c7b      	adds	r3, r7, #1
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	2b00      	cmp	r3, #0
 800134e:	d004      	beq.n	800135a <HAL_GPIO_WritePin+0x2a>
 8001350:	1cbb      	adds	r3, r7, #2
 8001352:	881a      	ldrh	r2, [r3, #0]
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	619a      	str	r2, [r3, #24]
 8001358:	e003      	b.n	8001362 <HAL_GPIO_WritePin+0x32>
 800135a:	1cbb      	adds	r3, r7, #2
 800135c:	881a      	ldrh	r2, [r3, #0]
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	629a      	str	r2, [r3, #40]	; 0x28
 8001362:	46c0      	nop			; (mov r8, r8)
 8001364:	46bd      	mov	sp, r7
 8001366:	b002      	add	sp, #8
 8001368:	bd80      	pop	{r7, pc}
	...

0800136c <HAL_GPIO_EXTI_IRQHandler>:
 800136c:	b580      	push	{r7, lr}
 800136e:	b082      	sub	sp, #8
 8001370:	af00      	add	r7, sp, #0
 8001372:	0002      	movs	r2, r0
 8001374:	1dbb      	adds	r3, r7, #6
 8001376:	801a      	strh	r2, [r3, #0]
 8001378:	4b10      	ldr	r3, [pc, #64]	; (80013bc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	1dba      	adds	r2, r7, #6
 800137e:	8812      	ldrh	r2, [r2, #0]
 8001380:	4013      	ands	r3, r2
 8001382:	d008      	beq.n	8001396 <HAL_GPIO_EXTI_IRQHandler+0x2a>
 8001384:	4b0d      	ldr	r3, [pc, #52]	; (80013bc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8001386:	1dba      	adds	r2, r7, #6
 8001388:	8812      	ldrh	r2, [r2, #0]
 800138a:	60da      	str	r2, [r3, #12]
 800138c:	1dbb      	adds	r3, r7, #6
 800138e:	881b      	ldrh	r3, [r3, #0]
 8001390:	0018      	movs	r0, r3
 8001392:	f000 f815 	bl	80013c0 <HAL_GPIO_EXTI_Rising_Callback>
 8001396:	4b09      	ldr	r3, [pc, #36]	; (80013bc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 8001398:	691b      	ldr	r3, [r3, #16]
 800139a:	1dba      	adds	r2, r7, #6
 800139c:	8812      	ldrh	r2, [r2, #0]
 800139e:	4013      	ands	r3, r2
 80013a0:	d008      	beq.n	80013b4 <HAL_GPIO_EXTI_IRQHandler+0x48>
 80013a2:	4b06      	ldr	r3, [pc, #24]	; (80013bc <HAL_GPIO_EXTI_IRQHandler+0x50>)
 80013a4:	1dba      	adds	r2, r7, #6
 80013a6:	8812      	ldrh	r2, [r2, #0]
 80013a8:	611a      	str	r2, [r3, #16]
 80013aa:	1dbb      	adds	r3, r7, #6
 80013ac:	881b      	ldrh	r3, [r3, #0]
 80013ae:	0018      	movs	r0, r3
 80013b0:	f7fe fff4 	bl	800039c <HAL_GPIO_EXTI_Falling_Callback>
 80013b4:	46c0      	nop			; (mov r8, r8)
 80013b6:	46bd      	mov	sp, r7
 80013b8:	b002      	add	sp, #8
 80013ba:	bd80      	pop	{r7, pc}
 80013bc:	40021800 	.word	0x40021800

080013c0 <HAL_GPIO_EXTI_Rising_Callback>:
 80013c0:	b580      	push	{r7, lr}
 80013c2:	b082      	sub	sp, #8
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	0002      	movs	r2, r0
 80013c8:	1dbb      	adds	r3, r7, #6
 80013ca:	801a      	strh	r2, [r3, #0]
 80013cc:	46c0      	nop			; (mov r8, r8)
 80013ce:	46bd      	mov	sp, r7
 80013d0:	b002      	add	sp, #8
 80013d2:	bd80      	pop	{r7, pc}

080013d4 <HAL_PWREx_ControlVoltageScaling>:
 80013d4:	b580      	push	{r7, lr}
 80013d6:	b084      	sub	sp, #16
 80013d8:	af00      	add	r7, sp, #0
 80013da:	6078      	str	r0, [r7, #4]
 80013dc:	4b19      	ldr	r3, [pc, #100]	; (8001444 <HAL_PWREx_ControlVoltageScaling+0x70>)
 80013de:	681b      	ldr	r3, [r3, #0]
 80013e0:	4a19      	ldr	r2, [pc, #100]	; (8001448 <HAL_PWREx_ControlVoltageScaling+0x74>)
 80013e2:	4013      	ands	r3, r2
 80013e4:	0019      	movs	r1, r3
 80013e6:	4b17      	ldr	r3, [pc, #92]	; (8001444 <HAL_PWREx_ControlVoltageScaling+0x70>)
 80013e8:	687a      	ldr	r2, [r7, #4]
 80013ea:	430a      	orrs	r2, r1
 80013ec:	601a      	str	r2, [r3, #0]
 80013ee:	687a      	ldr	r2, [r7, #4]
 80013f0:	2380      	movs	r3, #128	; 0x80
 80013f2:	009b      	lsls	r3, r3, #2
 80013f4:	429a      	cmp	r2, r3
 80013f6:	d11f      	bne.n	8001438 <HAL_PWREx_ControlVoltageScaling+0x64>
 80013f8:	4b14      	ldr	r3, [pc, #80]	; (800144c <HAL_PWREx_ControlVoltageScaling+0x78>)
 80013fa:	681a      	ldr	r2, [r3, #0]
 80013fc:	0013      	movs	r3, r2
 80013fe:	005b      	lsls	r3, r3, #1
 8001400:	189b      	adds	r3, r3, r2
 8001402:	005b      	lsls	r3, r3, #1
 8001404:	4912      	ldr	r1, [pc, #72]	; (8001450 <HAL_PWREx_ControlVoltageScaling+0x7c>)
 8001406:	0018      	movs	r0, r3
 8001408:	f7fe fe7a 	bl	8000100 <__udivsi3>
 800140c:	0003      	movs	r3, r0
 800140e:	3301      	adds	r3, #1
 8001410:	60fb      	str	r3, [r7, #12]
 8001412:	e008      	b.n	8001426 <HAL_PWREx_ControlVoltageScaling+0x52>
 8001414:	68fb      	ldr	r3, [r7, #12]
 8001416:	2b00      	cmp	r3, #0
 8001418:	d003      	beq.n	8001422 <HAL_PWREx_ControlVoltageScaling+0x4e>
 800141a:	68fb      	ldr	r3, [r7, #12]
 800141c:	3b01      	subs	r3, #1
 800141e:	60fb      	str	r3, [r7, #12]
 8001420:	e001      	b.n	8001426 <HAL_PWREx_ControlVoltageScaling+0x52>
 8001422:	2303      	movs	r3, #3
 8001424:	e009      	b.n	800143a <HAL_PWREx_ControlVoltageScaling+0x66>
 8001426:	4b07      	ldr	r3, [pc, #28]	; (8001444 <HAL_PWREx_ControlVoltageScaling+0x70>)
 8001428:	695a      	ldr	r2, [r3, #20]
 800142a:	2380      	movs	r3, #128	; 0x80
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	401a      	ands	r2, r3
 8001430:	2380      	movs	r3, #128	; 0x80
 8001432:	00db      	lsls	r3, r3, #3
 8001434:	429a      	cmp	r2, r3
 8001436:	d0ed      	beq.n	8001414 <HAL_PWREx_ControlVoltageScaling+0x40>
 8001438:	2300      	movs	r3, #0
 800143a:	0018      	movs	r0, r3
 800143c:	46bd      	mov	sp, r7
 800143e:	b004      	add	sp, #16
 8001440:	bd80      	pop	{r7, pc}
 8001442:	46c0      	nop			; (mov r8, r8)
 8001444:	40007000 	.word	0x40007000
 8001448:	fffff9ff 	.word	0xfffff9ff
 800144c:	20000004 	.word	0x20000004
 8001450:	000f4240 	.word	0x000f4240

08001454 <HAL_RCC_OscConfig>:
 8001454:	b580      	push	{r7, lr}
 8001456:	b088      	sub	sp, #32
 8001458:	af00      	add	r7, sp, #0
 800145a:	6078      	str	r0, [r7, #4]
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	2b00      	cmp	r3, #0
 8001460:	d101      	bne.n	8001466 <HAL_RCC_OscConfig+0x12>
 8001462:	2301      	movs	r3, #1
 8001464:	e2f9      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	2201      	movs	r2, #1
 800146c:	4013      	ands	r3, r2
 800146e:	d100      	bne.n	8001472 <HAL_RCC_OscConfig+0x1e>
 8001470:	e07c      	b.n	800156c <HAL_RCC_OscConfig+0x118>
 8001472:	4bc3      	ldr	r3, [pc, #780]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001474:	689b      	ldr	r3, [r3, #8]
 8001476:	2238      	movs	r2, #56	; 0x38
 8001478:	4013      	ands	r3, r2
 800147a:	61bb      	str	r3, [r7, #24]
 800147c:	4bc0      	ldr	r3, [pc, #768]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800147e:	68db      	ldr	r3, [r3, #12]
 8001480:	2203      	movs	r2, #3
 8001482:	4013      	ands	r3, r2
 8001484:	617b      	str	r3, [r7, #20]
 8001486:	69bb      	ldr	r3, [r7, #24]
 8001488:	2b10      	cmp	r3, #16
 800148a:	d102      	bne.n	8001492 <HAL_RCC_OscConfig+0x3e>
 800148c:	697b      	ldr	r3, [r7, #20]
 800148e:	2b03      	cmp	r3, #3
 8001490:	d002      	beq.n	8001498 <HAL_RCC_OscConfig+0x44>
 8001492:	69bb      	ldr	r3, [r7, #24]
 8001494:	2b08      	cmp	r3, #8
 8001496:	d10b      	bne.n	80014b0 <HAL_RCC_OscConfig+0x5c>
 8001498:	4bb9      	ldr	r3, [pc, #740]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800149a:	681a      	ldr	r2, [r3, #0]
 800149c:	2380      	movs	r3, #128	; 0x80
 800149e:	029b      	lsls	r3, r3, #10
 80014a0:	4013      	ands	r3, r2
 80014a2:	d062      	beq.n	800156a <HAL_RCC_OscConfig+0x116>
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	685b      	ldr	r3, [r3, #4]
 80014a8:	2b00      	cmp	r3, #0
 80014aa:	d15e      	bne.n	800156a <HAL_RCC_OscConfig+0x116>
 80014ac:	2301      	movs	r3, #1
 80014ae:	e2d4      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	685a      	ldr	r2, [r3, #4]
 80014b4:	2380      	movs	r3, #128	; 0x80
 80014b6:	025b      	lsls	r3, r3, #9
 80014b8:	429a      	cmp	r2, r3
 80014ba:	d107      	bne.n	80014cc <HAL_RCC_OscConfig+0x78>
 80014bc:	4bb0      	ldr	r3, [pc, #704]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014be:	681a      	ldr	r2, [r3, #0]
 80014c0:	4baf      	ldr	r3, [pc, #700]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014c2:	2180      	movs	r1, #128	; 0x80
 80014c4:	0249      	lsls	r1, r1, #9
 80014c6:	430a      	orrs	r2, r1
 80014c8:	601a      	str	r2, [r3, #0]
 80014ca:	e020      	b.n	800150e <HAL_RCC_OscConfig+0xba>
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	685a      	ldr	r2, [r3, #4]
 80014d0:	23a0      	movs	r3, #160	; 0xa0
 80014d2:	02db      	lsls	r3, r3, #11
 80014d4:	429a      	cmp	r2, r3
 80014d6:	d10e      	bne.n	80014f6 <HAL_RCC_OscConfig+0xa2>
 80014d8:	4ba9      	ldr	r3, [pc, #676]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014da:	681a      	ldr	r2, [r3, #0]
 80014dc:	4ba8      	ldr	r3, [pc, #672]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014de:	2180      	movs	r1, #128	; 0x80
 80014e0:	02c9      	lsls	r1, r1, #11
 80014e2:	430a      	orrs	r2, r1
 80014e4:	601a      	str	r2, [r3, #0]
 80014e6:	4ba6      	ldr	r3, [pc, #664]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014e8:	681a      	ldr	r2, [r3, #0]
 80014ea:	4ba5      	ldr	r3, [pc, #660]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014ec:	2180      	movs	r1, #128	; 0x80
 80014ee:	0249      	lsls	r1, r1, #9
 80014f0:	430a      	orrs	r2, r1
 80014f2:	601a      	str	r2, [r3, #0]
 80014f4:	e00b      	b.n	800150e <HAL_RCC_OscConfig+0xba>
 80014f6:	4ba2      	ldr	r3, [pc, #648]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014f8:	681a      	ldr	r2, [r3, #0]
 80014fa:	4ba1      	ldr	r3, [pc, #644]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80014fc:	49a1      	ldr	r1, [pc, #644]	; (8001784 <HAL_RCC_OscConfig+0x330>)
 80014fe:	400a      	ands	r2, r1
 8001500:	601a      	str	r2, [r3, #0]
 8001502:	4b9f      	ldr	r3, [pc, #636]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001504:	681a      	ldr	r2, [r3, #0]
 8001506:	4b9e      	ldr	r3, [pc, #632]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001508:	499f      	ldr	r1, [pc, #636]	; (8001788 <HAL_RCC_OscConfig+0x334>)
 800150a:	400a      	ands	r2, r1
 800150c:	601a      	str	r2, [r3, #0]
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	685b      	ldr	r3, [r3, #4]
 8001512:	2b00      	cmp	r3, #0
 8001514:	d014      	beq.n	8001540 <HAL_RCC_OscConfig+0xec>
 8001516:	f7ff fc9d 	bl	8000e54 <HAL_GetTick>
 800151a:	0003      	movs	r3, r0
 800151c:	613b      	str	r3, [r7, #16]
 800151e:	e008      	b.n	8001532 <HAL_RCC_OscConfig+0xde>
 8001520:	f7ff fc98 	bl	8000e54 <HAL_GetTick>
 8001524:	0002      	movs	r2, r0
 8001526:	693b      	ldr	r3, [r7, #16]
 8001528:	1ad3      	subs	r3, r2, r3
 800152a:	2b64      	cmp	r3, #100	; 0x64
 800152c:	d901      	bls.n	8001532 <HAL_RCC_OscConfig+0xde>
 800152e:	2303      	movs	r3, #3
 8001530:	e293      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001532:	4b93      	ldr	r3, [pc, #588]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001534:	681a      	ldr	r2, [r3, #0]
 8001536:	2380      	movs	r3, #128	; 0x80
 8001538:	029b      	lsls	r3, r3, #10
 800153a:	4013      	ands	r3, r2
 800153c:	d0f0      	beq.n	8001520 <HAL_RCC_OscConfig+0xcc>
 800153e:	e015      	b.n	800156c <HAL_RCC_OscConfig+0x118>
 8001540:	f7ff fc88 	bl	8000e54 <HAL_GetTick>
 8001544:	0003      	movs	r3, r0
 8001546:	613b      	str	r3, [r7, #16]
 8001548:	e008      	b.n	800155c <HAL_RCC_OscConfig+0x108>
 800154a:	f7ff fc83 	bl	8000e54 <HAL_GetTick>
 800154e:	0002      	movs	r2, r0
 8001550:	693b      	ldr	r3, [r7, #16]
 8001552:	1ad3      	subs	r3, r2, r3
 8001554:	2b64      	cmp	r3, #100	; 0x64
 8001556:	d901      	bls.n	800155c <HAL_RCC_OscConfig+0x108>
 8001558:	2303      	movs	r3, #3
 800155a:	e27e      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 800155c:	4b88      	ldr	r3, [pc, #544]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800155e:	681a      	ldr	r2, [r3, #0]
 8001560:	2380      	movs	r3, #128	; 0x80
 8001562:	029b      	lsls	r3, r3, #10
 8001564:	4013      	ands	r3, r2
 8001566:	d1f0      	bne.n	800154a <HAL_RCC_OscConfig+0xf6>
 8001568:	e000      	b.n	800156c <HAL_RCC_OscConfig+0x118>
 800156a:	46c0      	nop			; (mov r8, r8)
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	681b      	ldr	r3, [r3, #0]
 8001570:	2202      	movs	r2, #2
 8001572:	4013      	ands	r3, r2
 8001574:	d100      	bne.n	8001578 <HAL_RCC_OscConfig+0x124>
 8001576:	e099      	b.n	80016ac <HAL_RCC_OscConfig+0x258>
 8001578:	4b81      	ldr	r3, [pc, #516]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800157a:	689b      	ldr	r3, [r3, #8]
 800157c:	2238      	movs	r2, #56	; 0x38
 800157e:	4013      	ands	r3, r2
 8001580:	61bb      	str	r3, [r7, #24]
 8001582:	4b7f      	ldr	r3, [pc, #508]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001584:	68db      	ldr	r3, [r3, #12]
 8001586:	2203      	movs	r2, #3
 8001588:	4013      	ands	r3, r2
 800158a:	617b      	str	r3, [r7, #20]
 800158c:	69bb      	ldr	r3, [r7, #24]
 800158e:	2b10      	cmp	r3, #16
 8001590:	d102      	bne.n	8001598 <HAL_RCC_OscConfig+0x144>
 8001592:	697b      	ldr	r3, [r7, #20]
 8001594:	2b02      	cmp	r3, #2
 8001596:	d002      	beq.n	800159e <HAL_RCC_OscConfig+0x14a>
 8001598:	69bb      	ldr	r3, [r7, #24]
 800159a:	2b00      	cmp	r3, #0
 800159c:	d135      	bne.n	800160a <HAL_RCC_OscConfig+0x1b6>
 800159e:	4b78      	ldr	r3, [pc, #480]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015a0:	681a      	ldr	r2, [r3, #0]
 80015a2:	2380      	movs	r3, #128	; 0x80
 80015a4:	00db      	lsls	r3, r3, #3
 80015a6:	4013      	ands	r3, r2
 80015a8:	d005      	beq.n	80015b6 <HAL_RCC_OscConfig+0x162>
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	68db      	ldr	r3, [r3, #12]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d101      	bne.n	80015b6 <HAL_RCC_OscConfig+0x162>
 80015b2:	2301      	movs	r3, #1
 80015b4:	e251      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 80015b6:	4b72      	ldr	r3, [pc, #456]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015b8:	685b      	ldr	r3, [r3, #4]
 80015ba:	4a74      	ldr	r2, [pc, #464]	; (800178c <HAL_RCC_OscConfig+0x338>)
 80015bc:	4013      	ands	r3, r2
 80015be:	0019      	movs	r1, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	695b      	ldr	r3, [r3, #20]
 80015c4:	021a      	lsls	r2, r3, #8
 80015c6:	4b6e      	ldr	r3, [pc, #440]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015c8:	430a      	orrs	r2, r1
 80015ca:	605a      	str	r2, [r3, #4]
 80015cc:	69bb      	ldr	r3, [r7, #24]
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d112      	bne.n	80015f8 <HAL_RCC_OscConfig+0x1a4>
 80015d2:	4b6b      	ldr	r3, [pc, #428]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	4a6e      	ldr	r2, [pc, #440]	; (8001790 <HAL_RCC_OscConfig+0x33c>)
 80015d8:	4013      	ands	r3, r2
 80015da:	0019      	movs	r1, r3
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	691a      	ldr	r2, [r3, #16]
 80015e0:	4b67      	ldr	r3, [pc, #412]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015e2:	430a      	orrs	r2, r1
 80015e4:	601a      	str	r2, [r3, #0]
 80015e6:	4b66      	ldr	r3, [pc, #408]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	0adb      	lsrs	r3, r3, #11
 80015ec:	2207      	movs	r2, #7
 80015ee:	4013      	ands	r3, r2
 80015f0:	4a68      	ldr	r2, [pc, #416]	; (8001794 <HAL_RCC_OscConfig+0x340>)
 80015f2:	40da      	lsrs	r2, r3
 80015f4:	4b68      	ldr	r3, [pc, #416]	; (8001798 <HAL_RCC_OscConfig+0x344>)
 80015f6:	601a      	str	r2, [r3, #0]
 80015f8:	4b68      	ldr	r3, [pc, #416]	; (800179c <HAL_RCC_OscConfig+0x348>)
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	0018      	movs	r0, r3
 80015fe:	f7ff fbcf 	bl	8000da0 <HAL_InitTick>
 8001602:	1e03      	subs	r3, r0, #0
 8001604:	d051      	beq.n	80016aa <HAL_RCC_OscConfig+0x256>
 8001606:	2301      	movs	r3, #1
 8001608:	e227      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	68db      	ldr	r3, [r3, #12]
 800160e:	2b00      	cmp	r3, #0
 8001610:	d030      	beq.n	8001674 <HAL_RCC_OscConfig+0x220>
 8001612:	4b5b      	ldr	r3, [pc, #364]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	4a5e      	ldr	r2, [pc, #376]	; (8001790 <HAL_RCC_OscConfig+0x33c>)
 8001618:	4013      	ands	r3, r2
 800161a:	0019      	movs	r1, r3
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	691a      	ldr	r2, [r3, #16]
 8001620:	4b57      	ldr	r3, [pc, #348]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001622:	430a      	orrs	r2, r1
 8001624:	601a      	str	r2, [r3, #0]
 8001626:	4b56      	ldr	r3, [pc, #344]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001628:	681a      	ldr	r2, [r3, #0]
 800162a:	4b55      	ldr	r3, [pc, #340]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800162c:	2180      	movs	r1, #128	; 0x80
 800162e:	0049      	lsls	r1, r1, #1
 8001630:	430a      	orrs	r2, r1
 8001632:	601a      	str	r2, [r3, #0]
 8001634:	f7ff fc0e 	bl	8000e54 <HAL_GetTick>
 8001638:	0003      	movs	r3, r0
 800163a:	613b      	str	r3, [r7, #16]
 800163c:	e008      	b.n	8001650 <HAL_RCC_OscConfig+0x1fc>
 800163e:	f7ff fc09 	bl	8000e54 <HAL_GetTick>
 8001642:	0002      	movs	r2, r0
 8001644:	693b      	ldr	r3, [r7, #16]
 8001646:	1ad3      	subs	r3, r2, r3
 8001648:	2b02      	cmp	r3, #2
 800164a:	d901      	bls.n	8001650 <HAL_RCC_OscConfig+0x1fc>
 800164c:	2303      	movs	r3, #3
 800164e:	e204      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001650:	4b4b      	ldr	r3, [pc, #300]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001652:	681a      	ldr	r2, [r3, #0]
 8001654:	2380      	movs	r3, #128	; 0x80
 8001656:	00db      	lsls	r3, r3, #3
 8001658:	4013      	ands	r3, r2
 800165a:	d0f0      	beq.n	800163e <HAL_RCC_OscConfig+0x1ea>
 800165c:	4b48      	ldr	r3, [pc, #288]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800165e:	685b      	ldr	r3, [r3, #4]
 8001660:	4a4a      	ldr	r2, [pc, #296]	; (800178c <HAL_RCC_OscConfig+0x338>)
 8001662:	4013      	ands	r3, r2
 8001664:	0019      	movs	r1, r3
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	695b      	ldr	r3, [r3, #20]
 800166a:	021a      	lsls	r2, r3, #8
 800166c:	4b44      	ldr	r3, [pc, #272]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800166e:	430a      	orrs	r2, r1
 8001670:	605a      	str	r2, [r3, #4]
 8001672:	e01b      	b.n	80016ac <HAL_RCC_OscConfig+0x258>
 8001674:	4b42      	ldr	r3, [pc, #264]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001676:	681a      	ldr	r2, [r3, #0]
 8001678:	4b41      	ldr	r3, [pc, #260]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800167a:	4949      	ldr	r1, [pc, #292]	; (80017a0 <HAL_RCC_OscConfig+0x34c>)
 800167c:	400a      	ands	r2, r1
 800167e:	601a      	str	r2, [r3, #0]
 8001680:	f7ff fbe8 	bl	8000e54 <HAL_GetTick>
 8001684:	0003      	movs	r3, r0
 8001686:	613b      	str	r3, [r7, #16]
 8001688:	e008      	b.n	800169c <HAL_RCC_OscConfig+0x248>
 800168a:	f7ff fbe3 	bl	8000e54 <HAL_GetTick>
 800168e:	0002      	movs	r2, r0
 8001690:	693b      	ldr	r3, [r7, #16]
 8001692:	1ad3      	subs	r3, r2, r3
 8001694:	2b02      	cmp	r3, #2
 8001696:	d901      	bls.n	800169c <HAL_RCC_OscConfig+0x248>
 8001698:	2303      	movs	r3, #3
 800169a:	e1de      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 800169c:	4b38      	ldr	r3, [pc, #224]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800169e:	681a      	ldr	r2, [r3, #0]
 80016a0:	2380      	movs	r3, #128	; 0x80
 80016a2:	00db      	lsls	r3, r3, #3
 80016a4:	4013      	ands	r3, r2
 80016a6:	d1f0      	bne.n	800168a <HAL_RCC_OscConfig+0x236>
 80016a8:	e000      	b.n	80016ac <HAL_RCC_OscConfig+0x258>
 80016aa:	46c0      	nop			; (mov r8, r8)
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	2208      	movs	r2, #8
 80016b2:	4013      	ands	r3, r2
 80016b4:	d047      	beq.n	8001746 <HAL_RCC_OscConfig+0x2f2>
 80016b6:	4b32      	ldr	r3, [pc, #200]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80016b8:	689b      	ldr	r3, [r3, #8]
 80016ba:	2238      	movs	r2, #56	; 0x38
 80016bc:	4013      	ands	r3, r2
 80016be:	2b18      	cmp	r3, #24
 80016c0:	d10a      	bne.n	80016d8 <HAL_RCC_OscConfig+0x284>
 80016c2:	4b2f      	ldr	r3, [pc, #188]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80016c4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80016c6:	2202      	movs	r2, #2
 80016c8:	4013      	ands	r3, r2
 80016ca:	d03c      	beq.n	8001746 <HAL_RCC_OscConfig+0x2f2>
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	699b      	ldr	r3, [r3, #24]
 80016d0:	2b00      	cmp	r3, #0
 80016d2:	d138      	bne.n	8001746 <HAL_RCC_OscConfig+0x2f2>
 80016d4:	2301      	movs	r3, #1
 80016d6:	e1c0      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	699b      	ldr	r3, [r3, #24]
 80016dc:	2b00      	cmp	r3, #0
 80016de:	d019      	beq.n	8001714 <HAL_RCC_OscConfig+0x2c0>
 80016e0:	4b27      	ldr	r3, [pc, #156]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80016e2:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80016e4:	4b26      	ldr	r3, [pc, #152]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 80016e6:	2101      	movs	r1, #1
 80016e8:	430a      	orrs	r2, r1
 80016ea:	661a      	str	r2, [r3, #96]	; 0x60
 80016ec:	f7ff fbb2 	bl	8000e54 <HAL_GetTick>
 80016f0:	0003      	movs	r3, r0
 80016f2:	613b      	str	r3, [r7, #16]
 80016f4:	e008      	b.n	8001708 <HAL_RCC_OscConfig+0x2b4>
 80016f6:	f7ff fbad 	bl	8000e54 <HAL_GetTick>
 80016fa:	0002      	movs	r2, r0
 80016fc:	693b      	ldr	r3, [r7, #16]
 80016fe:	1ad3      	subs	r3, r2, r3
 8001700:	2b02      	cmp	r3, #2
 8001702:	d901      	bls.n	8001708 <HAL_RCC_OscConfig+0x2b4>
 8001704:	2303      	movs	r3, #3
 8001706:	e1a8      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001708:	4b1d      	ldr	r3, [pc, #116]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800170a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800170c:	2202      	movs	r2, #2
 800170e:	4013      	ands	r3, r2
 8001710:	d0f1      	beq.n	80016f6 <HAL_RCC_OscConfig+0x2a2>
 8001712:	e018      	b.n	8001746 <HAL_RCC_OscConfig+0x2f2>
 8001714:	4b1a      	ldr	r3, [pc, #104]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001716:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8001718:	4b19      	ldr	r3, [pc, #100]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800171a:	2101      	movs	r1, #1
 800171c:	438a      	bics	r2, r1
 800171e:	661a      	str	r2, [r3, #96]	; 0x60
 8001720:	f7ff fb98 	bl	8000e54 <HAL_GetTick>
 8001724:	0003      	movs	r3, r0
 8001726:	613b      	str	r3, [r7, #16]
 8001728:	e008      	b.n	800173c <HAL_RCC_OscConfig+0x2e8>
 800172a:	f7ff fb93 	bl	8000e54 <HAL_GetTick>
 800172e:	0002      	movs	r2, r0
 8001730:	693b      	ldr	r3, [r7, #16]
 8001732:	1ad3      	subs	r3, r2, r3
 8001734:	2b02      	cmp	r3, #2
 8001736:	d901      	bls.n	800173c <HAL_RCC_OscConfig+0x2e8>
 8001738:	2303      	movs	r3, #3
 800173a:	e18e      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 800173c:	4b10      	ldr	r3, [pc, #64]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800173e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001740:	2202      	movs	r2, #2
 8001742:	4013      	ands	r3, r2
 8001744:	d1f1      	bne.n	800172a <HAL_RCC_OscConfig+0x2d6>
 8001746:	687b      	ldr	r3, [r7, #4]
 8001748:	681b      	ldr	r3, [r3, #0]
 800174a:	2204      	movs	r2, #4
 800174c:	4013      	ands	r3, r2
 800174e:	d100      	bne.n	8001752 <HAL_RCC_OscConfig+0x2fe>
 8001750:	e0c6      	b.n	80018e0 <HAL_RCC_OscConfig+0x48c>
 8001752:	231f      	movs	r3, #31
 8001754:	18fb      	adds	r3, r7, r3
 8001756:	2200      	movs	r2, #0
 8001758:	701a      	strb	r2, [r3, #0]
 800175a:	4b09      	ldr	r3, [pc, #36]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 800175c:	689b      	ldr	r3, [r3, #8]
 800175e:	2238      	movs	r2, #56	; 0x38
 8001760:	4013      	ands	r3, r2
 8001762:	2b20      	cmp	r3, #32
 8001764:	d11e      	bne.n	80017a4 <HAL_RCC_OscConfig+0x350>
 8001766:	4b06      	ldr	r3, [pc, #24]	; (8001780 <HAL_RCC_OscConfig+0x32c>)
 8001768:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800176a:	2202      	movs	r2, #2
 800176c:	4013      	ands	r3, r2
 800176e:	d100      	bne.n	8001772 <HAL_RCC_OscConfig+0x31e>
 8001770:	e0b6      	b.n	80018e0 <HAL_RCC_OscConfig+0x48c>
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	689b      	ldr	r3, [r3, #8]
 8001776:	2b00      	cmp	r3, #0
 8001778:	d000      	beq.n	800177c <HAL_RCC_OscConfig+0x328>
 800177a:	e0b1      	b.n	80018e0 <HAL_RCC_OscConfig+0x48c>
 800177c:	2301      	movs	r3, #1
 800177e:	e16c      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001780:	40021000 	.word	0x40021000
 8001784:	fffeffff 	.word	0xfffeffff
 8001788:	fffbffff 	.word	0xfffbffff
 800178c:	ffff80ff 	.word	0xffff80ff
 8001790:	ffffc7ff 	.word	0xffffc7ff
 8001794:	00f42400 	.word	0x00f42400
 8001798:	20000004 	.word	0x20000004
 800179c:	20000008 	.word	0x20000008
 80017a0:	fffffeff 	.word	0xfffffeff
 80017a4:	4baf      	ldr	r3, [pc, #700]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80017a6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80017a8:	2380      	movs	r3, #128	; 0x80
 80017aa:	055b      	lsls	r3, r3, #21
 80017ac:	4013      	ands	r3, r2
 80017ae:	d101      	bne.n	80017b4 <HAL_RCC_OscConfig+0x360>
 80017b0:	2301      	movs	r3, #1
 80017b2:	e000      	b.n	80017b6 <HAL_RCC_OscConfig+0x362>
 80017b4:	2300      	movs	r3, #0
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d011      	beq.n	80017de <HAL_RCC_OscConfig+0x38a>
 80017ba:	4baa      	ldr	r3, [pc, #680]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80017bc:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80017be:	4ba9      	ldr	r3, [pc, #676]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80017c0:	2180      	movs	r1, #128	; 0x80
 80017c2:	0549      	lsls	r1, r1, #21
 80017c4:	430a      	orrs	r2, r1
 80017c6:	63da      	str	r2, [r3, #60]	; 0x3c
 80017c8:	4ba6      	ldr	r3, [pc, #664]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80017ca:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80017cc:	2380      	movs	r3, #128	; 0x80
 80017ce:	055b      	lsls	r3, r3, #21
 80017d0:	4013      	ands	r3, r2
 80017d2:	60fb      	str	r3, [r7, #12]
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	231f      	movs	r3, #31
 80017d8:	18fb      	adds	r3, r7, r3
 80017da:	2201      	movs	r2, #1
 80017dc:	701a      	strb	r2, [r3, #0]
 80017de:	4ba2      	ldr	r3, [pc, #648]	; (8001a68 <HAL_RCC_OscConfig+0x614>)
 80017e0:	681a      	ldr	r2, [r3, #0]
 80017e2:	2380      	movs	r3, #128	; 0x80
 80017e4:	005b      	lsls	r3, r3, #1
 80017e6:	4013      	ands	r3, r2
 80017e8:	d11a      	bne.n	8001820 <HAL_RCC_OscConfig+0x3cc>
 80017ea:	4b9f      	ldr	r3, [pc, #636]	; (8001a68 <HAL_RCC_OscConfig+0x614>)
 80017ec:	681a      	ldr	r2, [r3, #0]
 80017ee:	4b9e      	ldr	r3, [pc, #632]	; (8001a68 <HAL_RCC_OscConfig+0x614>)
 80017f0:	2180      	movs	r1, #128	; 0x80
 80017f2:	0049      	lsls	r1, r1, #1
 80017f4:	430a      	orrs	r2, r1
 80017f6:	601a      	str	r2, [r3, #0]
 80017f8:	f7ff fb2c 	bl	8000e54 <HAL_GetTick>
 80017fc:	0003      	movs	r3, r0
 80017fe:	613b      	str	r3, [r7, #16]
 8001800:	e008      	b.n	8001814 <HAL_RCC_OscConfig+0x3c0>
 8001802:	f7ff fb27 	bl	8000e54 <HAL_GetTick>
 8001806:	0002      	movs	r2, r0
 8001808:	693b      	ldr	r3, [r7, #16]
 800180a:	1ad3      	subs	r3, r2, r3
 800180c:	2b02      	cmp	r3, #2
 800180e:	d901      	bls.n	8001814 <HAL_RCC_OscConfig+0x3c0>
 8001810:	2303      	movs	r3, #3
 8001812:	e122      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001814:	4b94      	ldr	r3, [pc, #592]	; (8001a68 <HAL_RCC_OscConfig+0x614>)
 8001816:	681a      	ldr	r2, [r3, #0]
 8001818:	2380      	movs	r3, #128	; 0x80
 800181a:	005b      	lsls	r3, r3, #1
 800181c:	4013      	ands	r3, r2
 800181e:	d0f0      	beq.n	8001802 <HAL_RCC_OscConfig+0x3ae>
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	689b      	ldr	r3, [r3, #8]
 8001824:	2b01      	cmp	r3, #1
 8001826:	d106      	bne.n	8001836 <HAL_RCC_OscConfig+0x3e2>
 8001828:	4b8e      	ldr	r3, [pc, #568]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800182a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800182c:	4b8d      	ldr	r3, [pc, #564]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800182e:	2101      	movs	r1, #1
 8001830:	430a      	orrs	r2, r1
 8001832:	65da      	str	r2, [r3, #92]	; 0x5c
 8001834:	e01c      	b.n	8001870 <HAL_RCC_OscConfig+0x41c>
 8001836:	687b      	ldr	r3, [r7, #4]
 8001838:	689b      	ldr	r3, [r3, #8]
 800183a:	2b05      	cmp	r3, #5
 800183c:	d10c      	bne.n	8001858 <HAL_RCC_OscConfig+0x404>
 800183e:	4b89      	ldr	r3, [pc, #548]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001840:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001842:	4b88      	ldr	r3, [pc, #544]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001844:	2104      	movs	r1, #4
 8001846:	430a      	orrs	r2, r1
 8001848:	65da      	str	r2, [r3, #92]	; 0x5c
 800184a:	4b86      	ldr	r3, [pc, #536]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800184c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800184e:	4b85      	ldr	r3, [pc, #532]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001850:	2101      	movs	r1, #1
 8001852:	430a      	orrs	r2, r1
 8001854:	65da      	str	r2, [r3, #92]	; 0x5c
 8001856:	e00b      	b.n	8001870 <HAL_RCC_OscConfig+0x41c>
 8001858:	4b82      	ldr	r3, [pc, #520]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800185a:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800185c:	4b81      	ldr	r3, [pc, #516]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800185e:	2101      	movs	r1, #1
 8001860:	438a      	bics	r2, r1
 8001862:	65da      	str	r2, [r3, #92]	; 0x5c
 8001864:	4b7f      	ldr	r3, [pc, #508]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001866:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8001868:	4b7e      	ldr	r3, [pc, #504]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800186a:	2104      	movs	r1, #4
 800186c:	438a      	bics	r2, r1
 800186e:	65da      	str	r2, [r3, #92]	; 0x5c
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	689b      	ldr	r3, [r3, #8]
 8001874:	2b00      	cmp	r3, #0
 8001876:	d014      	beq.n	80018a2 <HAL_RCC_OscConfig+0x44e>
 8001878:	f7ff faec 	bl	8000e54 <HAL_GetTick>
 800187c:	0003      	movs	r3, r0
 800187e:	613b      	str	r3, [r7, #16]
 8001880:	e009      	b.n	8001896 <HAL_RCC_OscConfig+0x442>
 8001882:	f7ff fae7 	bl	8000e54 <HAL_GetTick>
 8001886:	0002      	movs	r2, r0
 8001888:	693b      	ldr	r3, [r7, #16]
 800188a:	1ad3      	subs	r3, r2, r3
 800188c:	4a77      	ldr	r2, [pc, #476]	; (8001a6c <HAL_RCC_OscConfig+0x618>)
 800188e:	4293      	cmp	r3, r2
 8001890:	d901      	bls.n	8001896 <HAL_RCC_OscConfig+0x442>
 8001892:	2303      	movs	r3, #3
 8001894:	e0e1      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001896:	4b73      	ldr	r3, [pc, #460]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001898:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800189a:	2202      	movs	r2, #2
 800189c:	4013      	ands	r3, r2
 800189e:	d0f0      	beq.n	8001882 <HAL_RCC_OscConfig+0x42e>
 80018a0:	e013      	b.n	80018ca <HAL_RCC_OscConfig+0x476>
 80018a2:	f7ff fad7 	bl	8000e54 <HAL_GetTick>
 80018a6:	0003      	movs	r3, r0
 80018a8:	613b      	str	r3, [r7, #16]
 80018aa:	e009      	b.n	80018c0 <HAL_RCC_OscConfig+0x46c>
 80018ac:	f7ff fad2 	bl	8000e54 <HAL_GetTick>
 80018b0:	0002      	movs	r2, r0
 80018b2:	693b      	ldr	r3, [r7, #16]
 80018b4:	1ad3      	subs	r3, r2, r3
 80018b6:	4a6d      	ldr	r2, [pc, #436]	; (8001a6c <HAL_RCC_OscConfig+0x618>)
 80018b8:	4293      	cmp	r3, r2
 80018ba:	d901      	bls.n	80018c0 <HAL_RCC_OscConfig+0x46c>
 80018bc:	2303      	movs	r3, #3
 80018be:	e0cc      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 80018c0:	4b68      	ldr	r3, [pc, #416]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80018c2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80018c4:	2202      	movs	r2, #2
 80018c6:	4013      	ands	r3, r2
 80018c8:	d1f0      	bne.n	80018ac <HAL_RCC_OscConfig+0x458>
 80018ca:	231f      	movs	r3, #31
 80018cc:	18fb      	adds	r3, r7, r3
 80018ce:	781b      	ldrb	r3, [r3, #0]
 80018d0:	2b01      	cmp	r3, #1
 80018d2:	d105      	bne.n	80018e0 <HAL_RCC_OscConfig+0x48c>
 80018d4:	4b63      	ldr	r3, [pc, #396]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80018d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80018d8:	4b62      	ldr	r3, [pc, #392]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80018da:	4965      	ldr	r1, [pc, #404]	; (8001a70 <HAL_RCC_OscConfig+0x61c>)
 80018dc:	400a      	ands	r2, r1
 80018de:	63da      	str	r2, [r3, #60]	; 0x3c
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	69db      	ldr	r3, [r3, #28]
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d100      	bne.n	80018ea <HAL_RCC_OscConfig+0x496>
 80018e8:	e0b6      	b.n	8001a58 <HAL_RCC_OscConfig+0x604>
 80018ea:	4b5e      	ldr	r3, [pc, #376]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80018ec:	689b      	ldr	r3, [r3, #8]
 80018ee:	2238      	movs	r2, #56	; 0x38
 80018f0:	4013      	ands	r3, r2
 80018f2:	2b10      	cmp	r3, #16
 80018f4:	d100      	bne.n	80018f8 <HAL_RCC_OscConfig+0x4a4>
 80018f6:	e07e      	b.n	80019f6 <HAL_RCC_OscConfig+0x5a2>
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	69db      	ldr	r3, [r3, #28]
 80018fc:	2b02      	cmp	r3, #2
 80018fe:	d153      	bne.n	80019a8 <HAL_RCC_OscConfig+0x554>
 8001900:	4b58      	ldr	r3, [pc, #352]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001902:	681a      	ldr	r2, [r3, #0]
 8001904:	4b57      	ldr	r3, [pc, #348]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001906:	495b      	ldr	r1, [pc, #364]	; (8001a74 <HAL_RCC_OscConfig+0x620>)
 8001908:	400a      	ands	r2, r1
 800190a:	601a      	str	r2, [r3, #0]
 800190c:	f7ff faa2 	bl	8000e54 <HAL_GetTick>
 8001910:	0003      	movs	r3, r0
 8001912:	613b      	str	r3, [r7, #16]
 8001914:	e008      	b.n	8001928 <HAL_RCC_OscConfig+0x4d4>
 8001916:	f7ff fa9d 	bl	8000e54 <HAL_GetTick>
 800191a:	0002      	movs	r2, r0
 800191c:	693b      	ldr	r3, [r7, #16]
 800191e:	1ad3      	subs	r3, r2, r3
 8001920:	2b02      	cmp	r3, #2
 8001922:	d901      	bls.n	8001928 <HAL_RCC_OscConfig+0x4d4>
 8001924:	2303      	movs	r3, #3
 8001926:	e098      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001928:	4b4e      	ldr	r3, [pc, #312]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800192a:	681a      	ldr	r2, [r3, #0]
 800192c:	2380      	movs	r3, #128	; 0x80
 800192e:	049b      	lsls	r3, r3, #18
 8001930:	4013      	ands	r3, r2
 8001932:	d1f0      	bne.n	8001916 <HAL_RCC_OscConfig+0x4c2>
 8001934:	4b4b      	ldr	r3, [pc, #300]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001936:	68db      	ldr	r3, [r3, #12]
 8001938:	4a4f      	ldr	r2, [pc, #316]	; (8001a78 <HAL_RCC_OscConfig+0x624>)
 800193a:	4013      	ands	r3, r2
 800193c:	0019      	movs	r1, r3
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	6a1a      	ldr	r2, [r3, #32]
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001946:	431a      	orrs	r2, r3
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800194c:	021b      	lsls	r3, r3, #8
 800194e:	431a      	orrs	r2, r3
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001954:	431a      	orrs	r2, r3
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800195a:	431a      	orrs	r2, r3
 800195c:	4b41      	ldr	r3, [pc, #260]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800195e:	430a      	orrs	r2, r1
 8001960:	60da      	str	r2, [r3, #12]
 8001962:	4b40      	ldr	r3, [pc, #256]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001964:	681a      	ldr	r2, [r3, #0]
 8001966:	4b3f      	ldr	r3, [pc, #252]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001968:	2180      	movs	r1, #128	; 0x80
 800196a:	0449      	lsls	r1, r1, #17
 800196c:	430a      	orrs	r2, r1
 800196e:	601a      	str	r2, [r3, #0]
 8001970:	4b3c      	ldr	r3, [pc, #240]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001972:	68da      	ldr	r2, [r3, #12]
 8001974:	4b3b      	ldr	r3, [pc, #236]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001976:	2180      	movs	r1, #128	; 0x80
 8001978:	0549      	lsls	r1, r1, #21
 800197a:	430a      	orrs	r2, r1
 800197c:	60da      	str	r2, [r3, #12]
 800197e:	f7ff fa69 	bl	8000e54 <HAL_GetTick>
 8001982:	0003      	movs	r3, r0
 8001984:	613b      	str	r3, [r7, #16]
 8001986:	e008      	b.n	800199a <HAL_RCC_OscConfig+0x546>
 8001988:	f7ff fa64 	bl	8000e54 <HAL_GetTick>
 800198c:	0002      	movs	r2, r0
 800198e:	693b      	ldr	r3, [r7, #16]
 8001990:	1ad3      	subs	r3, r2, r3
 8001992:	2b02      	cmp	r3, #2
 8001994:	d901      	bls.n	800199a <HAL_RCC_OscConfig+0x546>
 8001996:	2303      	movs	r3, #3
 8001998:	e05f      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 800199a:	4b32      	ldr	r3, [pc, #200]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 800199c:	681a      	ldr	r2, [r3, #0]
 800199e:	2380      	movs	r3, #128	; 0x80
 80019a0:	049b      	lsls	r3, r3, #18
 80019a2:	4013      	ands	r3, r2
 80019a4:	d0f0      	beq.n	8001988 <HAL_RCC_OscConfig+0x534>
 80019a6:	e057      	b.n	8001a58 <HAL_RCC_OscConfig+0x604>
 80019a8:	4b2e      	ldr	r3, [pc, #184]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019aa:	681a      	ldr	r2, [r3, #0]
 80019ac:	4b2d      	ldr	r3, [pc, #180]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019ae:	4931      	ldr	r1, [pc, #196]	; (8001a74 <HAL_RCC_OscConfig+0x620>)
 80019b0:	400a      	ands	r2, r1
 80019b2:	601a      	str	r2, [r3, #0]
 80019b4:	4b2b      	ldr	r3, [pc, #172]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019b6:	68da      	ldr	r2, [r3, #12]
 80019b8:	4b2a      	ldr	r3, [pc, #168]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019ba:	2103      	movs	r1, #3
 80019bc:	438a      	bics	r2, r1
 80019be:	60da      	str	r2, [r3, #12]
 80019c0:	4b28      	ldr	r3, [pc, #160]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019c2:	68da      	ldr	r2, [r3, #12]
 80019c4:	4b27      	ldr	r3, [pc, #156]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019c6:	492d      	ldr	r1, [pc, #180]	; (8001a7c <HAL_RCC_OscConfig+0x628>)
 80019c8:	400a      	ands	r2, r1
 80019ca:	60da      	str	r2, [r3, #12]
 80019cc:	f7ff fa42 	bl	8000e54 <HAL_GetTick>
 80019d0:	0003      	movs	r3, r0
 80019d2:	613b      	str	r3, [r7, #16]
 80019d4:	e008      	b.n	80019e8 <HAL_RCC_OscConfig+0x594>
 80019d6:	f7ff fa3d 	bl	8000e54 <HAL_GetTick>
 80019da:	0002      	movs	r2, r0
 80019dc:	693b      	ldr	r3, [r7, #16]
 80019de:	1ad3      	subs	r3, r2, r3
 80019e0:	2b02      	cmp	r3, #2
 80019e2:	d901      	bls.n	80019e8 <HAL_RCC_OscConfig+0x594>
 80019e4:	2303      	movs	r3, #3
 80019e6:	e038      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 80019e8:	4b1e      	ldr	r3, [pc, #120]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 80019ea:	681a      	ldr	r2, [r3, #0]
 80019ec:	2380      	movs	r3, #128	; 0x80
 80019ee:	049b      	lsls	r3, r3, #18
 80019f0:	4013      	ands	r3, r2
 80019f2:	d1f0      	bne.n	80019d6 <HAL_RCC_OscConfig+0x582>
 80019f4:	e030      	b.n	8001a58 <HAL_RCC_OscConfig+0x604>
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	69db      	ldr	r3, [r3, #28]
 80019fa:	2b01      	cmp	r3, #1
 80019fc:	d101      	bne.n	8001a02 <HAL_RCC_OscConfig+0x5ae>
 80019fe:	2301      	movs	r3, #1
 8001a00:	e02b      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001a02:	4b18      	ldr	r3, [pc, #96]	; (8001a64 <HAL_RCC_OscConfig+0x610>)
 8001a04:	68db      	ldr	r3, [r3, #12]
 8001a06:	617b      	str	r3, [r7, #20]
 8001a08:	697b      	ldr	r3, [r7, #20]
 8001a0a:	2203      	movs	r2, #3
 8001a0c:	401a      	ands	r2, r3
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	6a1b      	ldr	r3, [r3, #32]
 8001a12:	429a      	cmp	r2, r3
 8001a14:	d11e      	bne.n	8001a54 <HAL_RCC_OscConfig+0x600>
 8001a16:	697b      	ldr	r3, [r7, #20]
 8001a18:	2270      	movs	r2, #112	; 0x70
 8001a1a:	401a      	ands	r2, r3
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a20:	429a      	cmp	r2, r3
 8001a22:	d117      	bne.n	8001a54 <HAL_RCC_OscConfig+0x600>
 8001a24:	697a      	ldr	r2, [r7, #20]
 8001a26:	23fe      	movs	r3, #254	; 0xfe
 8001a28:	01db      	lsls	r3, r3, #7
 8001a2a:	401a      	ands	r2, r3
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001a30:	021b      	lsls	r3, r3, #8
 8001a32:	429a      	cmp	r2, r3
 8001a34:	d10e      	bne.n	8001a54 <HAL_RCC_OscConfig+0x600>
 8001a36:	697a      	ldr	r2, [r7, #20]
 8001a38:	23f8      	movs	r3, #248	; 0xf8
 8001a3a:	039b      	lsls	r3, r3, #14
 8001a3c:	401a      	ands	r2, r3
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a42:	429a      	cmp	r2, r3
 8001a44:	d106      	bne.n	8001a54 <HAL_RCC_OscConfig+0x600>
 8001a46:	697b      	ldr	r3, [r7, #20]
 8001a48:	0f5b      	lsrs	r3, r3, #29
 8001a4a:	075a      	lsls	r2, r3, #29
 8001a4c:	687b      	ldr	r3, [r7, #4]
 8001a4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a50:	429a      	cmp	r2, r3
 8001a52:	d001      	beq.n	8001a58 <HAL_RCC_OscConfig+0x604>
 8001a54:	2301      	movs	r3, #1
 8001a56:	e000      	b.n	8001a5a <HAL_RCC_OscConfig+0x606>
 8001a58:	2300      	movs	r3, #0
 8001a5a:	0018      	movs	r0, r3
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	b008      	add	sp, #32
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	46c0      	nop			; (mov r8, r8)
 8001a64:	40021000 	.word	0x40021000
 8001a68:	40007000 	.word	0x40007000
 8001a6c:	00001388 	.word	0x00001388
 8001a70:	efffffff 	.word	0xefffffff
 8001a74:	feffffff 	.word	0xfeffffff
 8001a78:	1fc1808c 	.word	0x1fc1808c
 8001a7c:	effeffff 	.word	0xeffeffff

08001a80 <HAL_RCC_ClockConfig>:
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b084      	sub	sp, #16
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
 8001a88:	6039      	str	r1, [r7, #0]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	d101      	bne.n	8001a94 <HAL_RCC_ClockConfig+0x14>
 8001a90:	2301      	movs	r3, #1
 8001a92:	e0e9      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001a94:	4b76      	ldr	r3, [pc, #472]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	2207      	movs	r2, #7
 8001a9a:	4013      	ands	r3, r2
 8001a9c:	683a      	ldr	r2, [r7, #0]
 8001a9e:	429a      	cmp	r2, r3
 8001aa0:	d91e      	bls.n	8001ae0 <HAL_RCC_ClockConfig+0x60>
 8001aa2:	4b73      	ldr	r3, [pc, #460]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001aa4:	681b      	ldr	r3, [r3, #0]
 8001aa6:	2207      	movs	r2, #7
 8001aa8:	4393      	bics	r3, r2
 8001aaa:	0019      	movs	r1, r3
 8001aac:	4b70      	ldr	r3, [pc, #448]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001aae:	683a      	ldr	r2, [r7, #0]
 8001ab0:	430a      	orrs	r2, r1
 8001ab2:	601a      	str	r2, [r3, #0]
 8001ab4:	f7ff f9ce 	bl	8000e54 <HAL_GetTick>
 8001ab8:	0003      	movs	r3, r0
 8001aba:	60fb      	str	r3, [r7, #12]
 8001abc:	e009      	b.n	8001ad2 <HAL_RCC_ClockConfig+0x52>
 8001abe:	f7ff f9c9 	bl	8000e54 <HAL_GetTick>
 8001ac2:	0002      	movs	r2, r0
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	1ad3      	subs	r3, r2, r3
 8001ac8:	4a6a      	ldr	r2, [pc, #424]	; (8001c74 <HAL_RCC_ClockConfig+0x1f4>)
 8001aca:	4293      	cmp	r3, r2
 8001acc:	d901      	bls.n	8001ad2 <HAL_RCC_ClockConfig+0x52>
 8001ace:	2303      	movs	r3, #3
 8001ad0:	e0ca      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001ad2:	4b67      	ldr	r3, [pc, #412]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001ad4:	681b      	ldr	r3, [r3, #0]
 8001ad6:	2207      	movs	r2, #7
 8001ad8:	4013      	ands	r3, r2
 8001ada:	683a      	ldr	r2, [r7, #0]
 8001adc:	429a      	cmp	r2, r3
 8001ade:	d1ee      	bne.n	8001abe <HAL_RCC_ClockConfig+0x3e>
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	2202      	movs	r2, #2
 8001ae6:	4013      	ands	r3, r2
 8001ae8:	d015      	beq.n	8001b16 <HAL_RCC_ClockConfig+0x96>
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	2204      	movs	r2, #4
 8001af0:	4013      	ands	r3, r2
 8001af2:	d006      	beq.n	8001b02 <HAL_RCC_ClockConfig+0x82>
 8001af4:	4b60      	ldr	r3, [pc, #384]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001af6:	689a      	ldr	r2, [r3, #8]
 8001af8:	4b5f      	ldr	r3, [pc, #380]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001afa:	21e0      	movs	r1, #224	; 0xe0
 8001afc:	01c9      	lsls	r1, r1, #7
 8001afe:	430a      	orrs	r2, r1
 8001b00:	609a      	str	r2, [r3, #8]
 8001b02:	4b5d      	ldr	r3, [pc, #372]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b04:	689b      	ldr	r3, [r3, #8]
 8001b06:	4a5d      	ldr	r2, [pc, #372]	; (8001c7c <HAL_RCC_ClockConfig+0x1fc>)
 8001b08:	4013      	ands	r3, r2
 8001b0a:	0019      	movs	r1, r3
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	689a      	ldr	r2, [r3, #8]
 8001b10:	4b59      	ldr	r3, [pc, #356]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b12:	430a      	orrs	r2, r1
 8001b14:	609a      	str	r2, [r3, #8]
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	2201      	movs	r2, #1
 8001b1c:	4013      	ands	r3, r2
 8001b1e:	d057      	beq.n	8001bd0 <HAL_RCC_ClockConfig+0x150>
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	685b      	ldr	r3, [r3, #4]
 8001b24:	2b01      	cmp	r3, #1
 8001b26:	d107      	bne.n	8001b38 <HAL_RCC_ClockConfig+0xb8>
 8001b28:	4b53      	ldr	r3, [pc, #332]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b2a:	681a      	ldr	r2, [r3, #0]
 8001b2c:	2380      	movs	r3, #128	; 0x80
 8001b2e:	029b      	lsls	r3, r3, #10
 8001b30:	4013      	ands	r3, r2
 8001b32:	d12b      	bne.n	8001b8c <HAL_RCC_ClockConfig+0x10c>
 8001b34:	2301      	movs	r3, #1
 8001b36:	e097      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	685b      	ldr	r3, [r3, #4]
 8001b3c:	2b02      	cmp	r3, #2
 8001b3e:	d107      	bne.n	8001b50 <HAL_RCC_ClockConfig+0xd0>
 8001b40:	4b4d      	ldr	r3, [pc, #308]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b42:	681a      	ldr	r2, [r3, #0]
 8001b44:	2380      	movs	r3, #128	; 0x80
 8001b46:	049b      	lsls	r3, r3, #18
 8001b48:	4013      	ands	r3, r2
 8001b4a:	d11f      	bne.n	8001b8c <HAL_RCC_ClockConfig+0x10c>
 8001b4c:	2301      	movs	r3, #1
 8001b4e:	e08b      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001b50:	687b      	ldr	r3, [r7, #4]
 8001b52:	685b      	ldr	r3, [r3, #4]
 8001b54:	2b00      	cmp	r3, #0
 8001b56:	d107      	bne.n	8001b68 <HAL_RCC_ClockConfig+0xe8>
 8001b58:	4b47      	ldr	r3, [pc, #284]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b5a:	681a      	ldr	r2, [r3, #0]
 8001b5c:	2380      	movs	r3, #128	; 0x80
 8001b5e:	00db      	lsls	r3, r3, #3
 8001b60:	4013      	ands	r3, r2
 8001b62:	d113      	bne.n	8001b8c <HAL_RCC_ClockConfig+0x10c>
 8001b64:	2301      	movs	r3, #1
 8001b66:	e07f      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	685b      	ldr	r3, [r3, #4]
 8001b6c:	2b03      	cmp	r3, #3
 8001b6e:	d106      	bne.n	8001b7e <HAL_RCC_ClockConfig+0xfe>
 8001b70:	4b41      	ldr	r3, [pc, #260]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b72:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001b74:	2202      	movs	r2, #2
 8001b76:	4013      	ands	r3, r2
 8001b78:	d108      	bne.n	8001b8c <HAL_RCC_ClockConfig+0x10c>
 8001b7a:	2301      	movs	r3, #1
 8001b7c:	e074      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001b7e:	4b3e      	ldr	r3, [pc, #248]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b80:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001b82:	2202      	movs	r2, #2
 8001b84:	4013      	ands	r3, r2
 8001b86:	d101      	bne.n	8001b8c <HAL_RCC_ClockConfig+0x10c>
 8001b88:	2301      	movs	r3, #1
 8001b8a:	e06d      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001b8c:	4b3a      	ldr	r3, [pc, #232]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b8e:	689b      	ldr	r3, [r3, #8]
 8001b90:	2207      	movs	r2, #7
 8001b92:	4393      	bics	r3, r2
 8001b94:	0019      	movs	r1, r3
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	685a      	ldr	r2, [r3, #4]
 8001b9a:	4b37      	ldr	r3, [pc, #220]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001b9c:	430a      	orrs	r2, r1
 8001b9e:	609a      	str	r2, [r3, #8]
 8001ba0:	f7ff f958 	bl	8000e54 <HAL_GetTick>
 8001ba4:	0003      	movs	r3, r0
 8001ba6:	60fb      	str	r3, [r7, #12]
 8001ba8:	e009      	b.n	8001bbe <HAL_RCC_ClockConfig+0x13e>
 8001baa:	f7ff f953 	bl	8000e54 <HAL_GetTick>
 8001bae:	0002      	movs	r2, r0
 8001bb0:	68fb      	ldr	r3, [r7, #12]
 8001bb2:	1ad3      	subs	r3, r2, r3
 8001bb4:	4a2f      	ldr	r2, [pc, #188]	; (8001c74 <HAL_RCC_ClockConfig+0x1f4>)
 8001bb6:	4293      	cmp	r3, r2
 8001bb8:	d901      	bls.n	8001bbe <HAL_RCC_ClockConfig+0x13e>
 8001bba:	2303      	movs	r3, #3
 8001bbc:	e054      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001bbe:	4b2e      	ldr	r3, [pc, #184]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001bc0:	689b      	ldr	r3, [r3, #8]
 8001bc2:	2238      	movs	r2, #56	; 0x38
 8001bc4:	401a      	ands	r2, r3
 8001bc6:	687b      	ldr	r3, [r7, #4]
 8001bc8:	685b      	ldr	r3, [r3, #4]
 8001bca:	00db      	lsls	r3, r3, #3
 8001bcc:	429a      	cmp	r2, r3
 8001bce:	d1ec      	bne.n	8001baa <HAL_RCC_ClockConfig+0x12a>
 8001bd0:	4b27      	ldr	r3, [pc, #156]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	2207      	movs	r2, #7
 8001bd6:	4013      	ands	r3, r2
 8001bd8:	683a      	ldr	r2, [r7, #0]
 8001bda:	429a      	cmp	r2, r3
 8001bdc:	d21e      	bcs.n	8001c1c <HAL_RCC_ClockConfig+0x19c>
 8001bde:	4b24      	ldr	r3, [pc, #144]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	2207      	movs	r2, #7
 8001be4:	4393      	bics	r3, r2
 8001be6:	0019      	movs	r1, r3
 8001be8:	4b21      	ldr	r3, [pc, #132]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001bea:	683a      	ldr	r2, [r7, #0]
 8001bec:	430a      	orrs	r2, r1
 8001bee:	601a      	str	r2, [r3, #0]
 8001bf0:	f7ff f930 	bl	8000e54 <HAL_GetTick>
 8001bf4:	0003      	movs	r3, r0
 8001bf6:	60fb      	str	r3, [r7, #12]
 8001bf8:	e009      	b.n	8001c0e <HAL_RCC_ClockConfig+0x18e>
 8001bfa:	f7ff f92b 	bl	8000e54 <HAL_GetTick>
 8001bfe:	0002      	movs	r2, r0
 8001c00:	68fb      	ldr	r3, [r7, #12]
 8001c02:	1ad3      	subs	r3, r2, r3
 8001c04:	4a1b      	ldr	r2, [pc, #108]	; (8001c74 <HAL_RCC_ClockConfig+0x1f4>)
 8001c06:	4293      	cmp	r3, r2
 8001c08:	d901      	bls.n	8001c0e <HAL_RCC_ClockConfig+0x18e>
 8001c0a:	2303      	movs	r3, #3
 8001c0c:	e02c      	b.n	8001c68 <HAL_RCC_ClockConfig+0x1e8>
 8001c0e:	4b18      	ldr	r3, [pc, #96]	; (8001c70 <HAL_RCC_ClockConfig+0x1f0>)
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	2207      	movs	r2, #7
 8001c14:	4013      	ands	r3, r2
 8001c16:	683a      	ldr	r2, [r7, #0]
 8001c18:	429a      	cmp	r2, r3
 8001c1a:	d1ee      	bne.n	8001bfa <HAL_RCC_ClockConfig+0x17a>
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	2204      	movs	r2, #4
 8001c22:	4013      	ands	r3, r2
 8001c24:	d009      	beq.n	8001c3a <HAL_RCC_ClockConfig+0x1ba>
 8001c26:	4b14      	ldr	r3, [pc, #80]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001c28:	689b      	ldr	r3, [r3, #8]
 8001c2a:	4a15      	ldr	r2, [pc, #84]	; (8001c80 <HAL_RCC_ClockConfig+0x200>)
 8001c2c:	4013      	ands	r3, r2
 8001c2e:	0019      	movs	r1, r3
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	68da      	ldr	r2, [r3, #12]
 8001c34:	4b10      	ldr	r3, [pc, #64]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001c36:	430a      	orrs	r2, r1
 8001c38:	609a      	str	r2, [r3, #8]
 8001c3a:	f000 f829 	bl	8001c90 <HAL_RCC_GetSysClockFreq>
 8001c3e:	0001      	movs	r1, r0
 8001c40:	4b0d      	ldr	r3, [pc, #52]	; (8001c78 <HAL_RCC_ClockConfig+0x1f8>)
 8001c42:	689b      	ldr	r3, [r3, #8]
 8001c44:	0a1b      	lsrs	r3, r3, #8
 8001c46:	220f      	movs	r2, #15
 8001c48:	401a      	ands	r2, r3
 8001c4a:	4b0e      	ldr	r3, [pc, #56]	; (8001c84 <HAL_RCC_ClockConfig+0x204>)
 8001c4c:	0092      	lsls	r2, r2, #2
 8001c4e:	58d3      	ldr	r3, [r2, r3]
 8001c50:	221f      	movs	r2, #31
 8001c52:	4013      	ands	r3, r2
 8001c54:	000a      	movs	r2, r1
 8001c56:	40da      	lsrs	r2, r3
 8001c58:	4b0b      	ldr	r3, [pc, #44]	; (8001c88 <HAL_RCC_ClockConfig+0x208>)
 8001c5a:	601a      	str	r2, [r3, #0]
 8001c5c:	4b0b      	ldr	r3, [pc, #44]	; (8001c8c <HAL_RCC_ClockConfig+0x20c>)
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	0018      	movs	r0, r3
 8001c62:	f7ff f89d 	bl	8000da0 <HAL_InitTick>
 8001c66:	0003      	movs	r3, r0
 8001c68:	0018      	movs	r0, r3
 8001c6a:	46bd      	mov	sp, r7
 8001c6c:	b004      	add	sp, #16
 8001c6e:	bd80      	pop	{r7, pc}
 8001c70:	40022000 	.word	0x40022000
 8001c74:	00001388 	.word	0x00001388
 8001c78:	40021000 	.word	0x40021000
 8001c7c:	fffff0ff 	.word	0xfffff0ff
 8001c80:	ffff8fff 	.word	0xffff8fff
 8001c84:	080023c4 	.word	0x080023c4
 8001c88:	20000004 	.word	0x20000004
 8001c8c:	20000008 	.word	0x20000008

08001c90 <HAL_RCC_GetSysClockFreq>:
 8001c90:	b580      	push	{r7, lr}
 8001c92:	b086      	sub	sp, #24
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	4b3c      	ldr	r3, [pc, #240]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001c98:	689b      	ldr	r3, [r3, #8]
 8001c9a:	2238      	movs	r2, #56	; 0x38
 8001c9c:	4013      	ands	r3, r2
 8001c9e:	d10f      	bne.n	8001cc0 <HAL_RCC_GetSysClockFreq+0x30>
 8001ca0:	4b39      	ldr	r3, [pc, #228]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	0adb      	lsrs	r3, r3, #11
 8001ca6:	2207      	movs	r2, #7
 8001ca8:	4013      	ands	r3, r2
 8001caa:	2201      	movs	r2, #1
 8001cac:	409a      	lsls	r2, r3
 8001cae:	0013      	movs	r3, r2
 8001cb0:	603b      	str	r3, [r7, #0]
 8001cb2:	6839      	ldr	r1, [r7, #0]
 8001cb4:	4835      	ldr	r0, [pc, #212]	; (8001d8c <HAL_RCC_GetSysClockFreq+0xfc>)
 8001cb6:	f7fe fa23 	bl	8000100 <__udivsi3>
 8001cba:	0003      	movs	r3, r0
 8001cbc:	613b      	str	r3, [r7, #16]
 8001cbe:	e05d      	b.n	8001d7c <HAL_RCC_GetSysClockFreq+0xec>
 8001cc0:	4b31      	ldr	r3, [pc, #196]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001cc2:	689b      	ldr	r3, [r3, #8]
 8001cc4:	2238      	movs	r2, #56	; 0x38
 8001cc6:	4013      	ands	r3, r2
 8001cc8:	2b08      	cmp	r3, #8
 8001cca:	d102      	bne.n	8001cd2 <HAL_RCC_GetSysClockFreq+0x42>
 8001ccc:	4b30      	ldr	r3, [pc, #192]	; (8001d90 <HAL_RCC_GetSysClockFreq+0x100>)
 8001cce:	613b      	str	r3, [r7, #16]
 8001cd0:	e054      	b.n	8001d7c <HAL_RCC_GetSysClockFreq+0xec>
 8001cd2:	4b2d      	ldr	r3, [pc, #180]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001cd4:	689b      	ldr	r3, [r3, #8]
 8001cd6:	2238      	movs	r2, #56	; 0x38
 8001cd8:	4013      	ands	r3, r2
 8001cda:	2b10      	cmp	r3, #16
 8001cdc:	d138      	bne.n	8001d50 <HAL_RCC_GetSysClockFreq+0xc0>
 8001cde:	4b2a      	ldr	r3, [pc, #168]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001ce0:	68db      	ldr	r3, [r3, #12]
 8001ce2:	2203      	movs	r2, #3
 8001ce4:	4013      	ands	r3, r2
 8001ce6:	60fb      	str	r3, [r7, #12]
 8001ce8:	4b27      	ldr	r3, [pc, #156]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001cea:	68db      	ldr	r3, [r3, #12]
 8001cec:	091b      	lsrs	r3, r3, #4
 8001cee:	2207      	movs	r2, #7
 8001cf0:	4013      	ands	r3, r2
 8001cf2:	3301      	adds	r3, #1
 8001cf4:	60bb      	str	r3, [r7, #8]
 8001cf6:	68fb      	ldr	r3, [r7, #12]
 8001cf8:	2b03      	cmp	r3, #3
 8001cfa:	d10d      	bne.n	8001d18 <HAL_RCC_GetSysClockFreq+0x88>
 8001cfc:	68b9      	ldr	r1, [r7, #8]
 8001cfe:	4824      	ldr	r0, [pc, #144]	; (8001d90 <HAL_RCC_GetSysClockFreq+0x100>)
 8001d00:	f7fe f9fe 	bl	8000100 <__udivsi3>
 8001d04:	0003      	movs	r3, r0
 8001d06:	0019      	movs	r1, r3
 8001d08:	4b1f      	ldr	r3, [pc, #124]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001d0a:	68db      	ldr	r3, [r3, #12]
 8001d0c:	0a1b      	lsrs	r3, r3, #8
 8001d0e:	227f      	movs	r2, #127	; 0x7f
 8001d10:	4013      	ands	r3, r2
 8001d12:	434b      	muls	r3, r1
 8001d14:	617b      	str	r3, [r7, #20]
 8001d16:	e00d      	b.n	8001d34 <HAL_RCC_GetSysClockFreq+0xa4>
 8001d18:	68b9      	ldr	r1, [r7, #8]
 8001d1a:	481c      	ldr	r0, [pc, #112]	; (8001d8c <HAL_RCC_GetSysClockFreq+0xfc>)
 8001d1c:	f7fe f9f0 	bl	8000100 <__udivsi3>
 8001d20:	0003      	movs	r3, r0
 8001d22:	0019      	movs	r1, r3
 8001d24:	4b18      	ldr	r3, [pc, #96]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001d26:	68db      	ldr	r3, [r3, #12]
 8001d28:	0a1b      	lsrs	r3, r3, #8
 8001d2a:	227f      	movs	r2, #127	; 0x7f
 8001d2c:	4013      	ands	r3, r2
 8001d2e:	434b      	muls	r3, r1
 8001d30:	617b      	str	r3, [r7, #20]
 8001d32:	46c0      	nop			; (mov r8, r8)
 8001d34:	4b14      	ldr	r3, [pc, #80]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001d36:	68db      	ldr	r3, [r3, #12]
 8001d38:	0f5b      	lsrs	r3, r3, #29
 8001d3a:	2207      	movs	r2, #7
 8001d3c:	4013      	ands	r3, r2
 8001d3e:	3301      	adds	r3, #1
 8001d40:	607b      	str	r3, [r7, #4]
 8001d42:	6879      	ldr	r1, [r7, #4]
 8001d44:	6978      	ldr	r0, [r7, #20]
 8001d46:	f7fe f9db 	bl	8000100 <__udivsi3>
 8001d4a:	0003      	movs	r3, r0
 8001d4c:	613b      	str	r3, [r7, #16]
 8001d4e:	e015      	b.n	8001d7c <HAL_RCC_GetSysClockFreq+0xec>
 8001d50:	4b0d      	ldr	r3, [pc, #52]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001d52:	689b      	ldr	r3, [r3, #8]
 8001d54:	2238      	movs	r2, #56	; 0x38
 8001d56:	4013      	ands	r3, r2
 8001d58:	2b20      	cmp	r3, #32
 8001d5a:	d103      	bne.n	8001d64 <HAL_RCC_GetSysClockFreq+0xd4>
 8001d5c:	2380      	movs	r3, #128	; 0x80
 8001d5e:	021b      	lsls	r3, r3, #8
 8001d60:	613b      	str	r3, [r7, #16]
 8001d62:	e00b      	b.n	8001d7c <HAL_RCC_GetSysClockFreq+0xec>
 8001d64:	4b08      	ldr	r3, [pc, #32]	; (8001d88 <HAL_RCC_GetSysClockFreq+0xf8>)
 8001d66:	689b      	ldr	r3, [r3, #8]
 8001d68:	2238      	movs	r2, #56	; 0x38
 8001d6a:	4013      	ands	r3, r2
 8001d6c:	2b18      	cmp	r3, #24
 8001d6e:	d103      	bne.n	8001d78 <HAL_RCC_GetSysClockFreq+0xe8>
 8001d70:	23fa      	movs	r3, #250	; 0xfa
 8001d72:	01db      	lsls	r3, r3, #7
 8001d74:	613b      	str	r3, [r7, #16]
 8001d76:	e001      	b.n	8001d7c <HAL_RCC_GetSysClockFreq+0xec>
 8001d78:	2300      	movs	r3, #0
 8001d7a:	613b      	str	r3, [r7, #16]
 8001d7c:	693b      	ldr	r3, [r7, #16]
 8001d7e:	0018      	movs	r0, r3
 8001d80:	46bd      	mov	sp, r7
 8001d82:	b006      	add	sp, #24
 8001d84:	bd80      	pop	{r7, pc}
 8001d86:	46c0      	nop			; (mov r8, r8)
 8001d88:	40021000 	.word	0x40021000
 8001d8c:	00f42400 	.word	0x00f42400
 8001d90:	007a1200 	.word	0x007a1200

08001d94 <HAL_TIM_Base_Init>:
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b082      	sub	sp, #8
 8001d98:	af00      	add	r7, sp, #0
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	2b00      	cmp	r3, #0
 8001da0:	d101      	bne.n	8001da6 <HAL_TIM_Base_Init+0x12>
 8001da2:	2301      	movs	r3, #1
 8001da4:	e01e      	b.n	8001de4 <HAL_TIM_Base_Init+0x50>
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	223d      	movs	r2, #61	; 0x3d
 8001daa:	5c9b      	ldrb	r3, [r3, r2]
 8001dac:	b2db      	uxtb	r3, r3
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d107      	bne.n	8001dc2 <HAL_TIM_Base_Init+0x2e>
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	223c      	movs	r2, #60	; 0x3c
 8001db6:	2100      	movs	r1, #0
 8001db8:	5499      	strb	r1, [r3, r2]
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	0018      	movs	r0, r3
 8001dbe:	f7fe ff0f 	bl	8000be0 <HAL_TIM_Base_MspInit>
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	223d      	movs	r2, #61	; 0x3d
 8001dc6:	2102      	movs	r1, #2
 8001dc8:	5499      	strb	r1, [r3, r2]
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	681a      	ldr	r2, [r3, #0]
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	3304      	adds	r3, #4
 8001dd2:	0019      	movs	r1, r3
 8001dd4:	0010      	movs	r0, r2
 8001dd6:	f000 f985 	bl	80020e4 <TIM_Base_SetConfig>
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	223d      	movs	r2, #61	; 0x3d
 8001dde:	2101      	movs	r1, #1
 8001de0:	5499      	strb	r1, [r3, r2]
 8001de2:	2300      	movs	r3, #0
 8001de4:	0018      	movs	r0, r3
 8001de6:	46bd      	mov	sp, r7
 8001de8:	b002      	add	sp, #8
 8001dea:	bd80      	pop	{r7, pc}

08001dec <HAL_TIM_Base_Start_IT>:
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b084      	sub	sp, #16
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
 8001df4:	687b      	ldr	r3, [r7, #4]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	68da      	ldr	r2, [r3, #12]
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	2101      	movs	r1, #1
 8001e00:	430a      	orrs	r2, r1
 8001e02:	60da      	str	r2, [r3, #12]
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	689b      	ldr	r3, [r3, #8]
 8001e0a:	4a0c      	ldr	r2, [pc, #48]	; (8001e3c <HAL_TIM_Base_Start_IT+0x50>)
 8001e0c:	4013      	ands	r3, r2
 8001e0e:	60fb      	str	r3, [r7, #12]
 8001e10:	68fb      	ldr	r3, [r7, #12]
 8001e12:	2b06      	cmp	r3, #6
 8001e14:	d00c      	beq.n	8001e30 <HAL_TIM_Base_Start_IT+0x44>
 8001e16:	68fa      	ldr	r2, [r7, #12]
 8001e18:	2380      	movs	r3, #128	; 0x80
 8001e1a:	025b      	lsls	r3, r3, #9
 8001e1c:	429a      	cmp	r2, r3
 8001e1e:	d007      	beq.n	8001e30 <HAL_TIM_Base_Start_IT+0x44>
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	681a      	ldr	r2, [r3, #0]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	2101      	movs	r1, #1
 8001e2c:	430a      	orrs	r2, r1
 8001e2e:	601a      	str	r2, [r3, #0]
 8001e30:	2300      	movs	r3, #0
 8001e32:	0018      	movs	r0, r3
 8001e34:	46bd      	mov	sp, r7
 8001e36:	b004      	add	sp, #16
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	46c0      	nop			; (mov r8, r8)
 8001e3c:	00010007 	.word	0x00010007

08001e40 <HAL_TIM_IRQHandler>:
 8001e40:	b580      	push	{r7, lr}
 8001e42:	b082      	sub	sp, #8
 8001e44:	af00      	add	r7, sp, #0
 8001e46:	6078      	str	r0, [r7, #4]
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	691b      	ldr	r3, [r3, #16]
 8001e4e:	2202      	movs	r2, #2
 8001e50:	4013      	ands	r3, r2
 8001e52:	2b02      	cmp	r3, #2
 8001e54:	d124      	bne.n	8001ea0 <HAL_TIM_IRQHandler+0x60>
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	68db      	ldr	r3, [r3, #12]
 8001e5c:	2202      	movs	r2, #2
 8001e5e:	4013      	ands	r3, r2
 8001e60:	2b02      	cmp	r3, #2
 8001e62:	d11d      	bne.n	8001ea0 <HAL_TIM_IRQHandler+0x60>
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	2203      	movs	r2, #3
 8001e6a:	4252      	negs	r2, r2
 8001e6c:	611a      	str	r2, [r3, #16]
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	2201      	movs	r2, #1
 8001e72:	771a      	strb	r2, [r3, #28]
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	699b      	ldr	r3, [r3, #24]
 8001e7a:	2203      	movs	r2, #3
 8001e7c:	4013      	ands	r3, r2
 8001e7e:	d004      	beq.n	8001e8a <HAL_TIM_IRQHandler+0x4a>
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	0018      	movs	r0, r3
 8001e84:	f000 f916 	bl	80020b4 <HAL_TIM_IC_CaptureCallback>
 8001e88:	e007      	b.n	8001e9a <HAL_TIM_IRQHandler+0x5a>
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	0018      	movs	r0, r3
 8001e8e:	f000 f909 	bl	80020a4 <HAL_TIM_OC_DelayElapsedCallback>
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	0018      	movs	r0, r3
 8001e96:	f000 f915 	bl	80020c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	771a      	strb	r2, [r3, #28]
 8001ea0:	687b      	ldr	r3, [r7, #4]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	691b      	ldr	r3, [r3, #16]
 8001ea6:	2204      	movs	r2, #4
 8001ea8:	4013      	ands	r3, r2
 8001eaa:	2b04      	cmp	r3, #4
 8001eac:	d125      	bne.n	8001efa <HAL_TIM_IRQHandler+0xba>
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	681b      	ldr	r3, [r3, #0]
 8001eb2:	68db      	ldr	r3, [r3, #12]
 8001eb4:	2204      	movs	r2, #4
 8001eb6:	4013      	ands	r3, r2
 8001eb8:	2b04      	cmp	r3, #4
 8001eba:	d11e      	bne.n	8001efa <HAL_TIM_IRQHandler+0xba>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	2205      	movs	r2, #5
 8001ec2:	4252      	negs	r2, r2
 8001ec4:	611a      	str	r2, [r3, #16]
 8001ec6:	687b      	ldr	r3, [r7, #4]
 8001ec8:	2202      	movs	r2, #2
 8001eca:	771a      	strb	r2, [r3, #28]
 8001ecc:	687b      	ldr	r3, [r7, #4]
 8001ece:	681b      	ldr	r3, [r3, #0]
 8001ed0:	699a      	ldr	r2, [r3, #24]
 8001ed2:	23c0      	movs	r3, #192	; 0xc0
 8001ed4:	009b      	lsls	r3, r3, #2
 8001ed6:	4013      	ands	r3, r2
 8001ed8:	d004      	beq.n	8001ee4 <HAL_TIM_IRQHandler+0xa4>
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	0018      	movs	r0, r3
 8001ede:	f000 f8e9 	bl	80020b4 <HAL_TIM_IC_CaptureCallback>
 8001ee2:	e007      	b.n	8001ef4 <HAL_TIM_IRQHandler+0xb4>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	0018      	movs	r0, r3
 8001ee8:	f000 f8dc 	bl	80020a4 <HAL_TIM_OC_DelayElapsedCallback>
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	0018      	movs	r0, r3
 8001ef0:	f000 f8e8 	bl	80020c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	771a      	strb	r2, [r3, #28]
 8001efa:	687b      	ldr	r3, [r7, #4]
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	691b      	ldr	r3, [r3, #16]
 8001f00:	2208      	movs	r2, #8
 8001f02:	4013      	ands	r3, r2
 8001f04:	2b08      	cmp	r3, #8
 8001f06:	d124      	bne.n	8001f52 <HAL_TIM_IRQHandler+0x112>
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	68db      	ldr	r3, [r3, #12]
 8001f0e:	2208      	movs	r2, #8
 8001f10:	4013      	ands	r3, r2
 8001f12:	2b08      	cmp	r3, #8
 8001f14:	d11d      	bne.n	8001f52 <HAL_TIM_IRQHandler+0x112>
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	2209      	movs	r2, #9
 8001f1c:	4252      	negs	r2, r2
 8001f1e:	611a      	str	r2, [r3, #16]
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	2204      	movs	r2, #4
 8001f24:	771a      	strb	r2, [r3, #28]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	69db      	ldr	r3, [r3, #28]
 8001f2c:	2203      	movs	r2, #3
 8001f2e:	4013      	ands	r3, r2
 8001f30:	d004      	beq.n	8001f3c <HAL_TIM_IRQHandler+0xfc>
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	0018      	movs	r0, r3
 8001f36:	f000 f8bd 	bl	80020b4 <HAL_TIM_IC_CaptureCallback>
 8001f3a:	e007      	b.n	8001f4c <HAL_TIM_IRQHandler+0x10c>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	0018      	movs	r0, r3
 8001f40:	f000 f8b0 	bl	80020a4 <HAL_TIM_OC_DelayElapsedCallback>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	0018      	movs	r0, r3
 8001f48:	f000 f8bc 	bl	80020c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	2200      	movs	r2, #0
 8001f50:	771a      	strb	r2, [r3, #28]
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	691b      	ldr	r3, [r3, #16]
 8001f58:	2210      	movs	r2, #16
 8001f5a:	4013      	ands	r3, r2
 8001f5c:	2b10      	cmp	r3, #16
 8001f5e:	d125      	bne.n	8001fac <HAL_TIM_IRQHandler+0x16c>
 8001f60:	687b      	ldr	r3, [r7, #4]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	68db      	ldr	r3, [r3, #12]
 8001f66:	2210      	movs	r2, #16
 8001f68:	4013      	ands	r3, r2
 8001f6a:	2b10      	cmp	r3, #16
 8001f6c:	d11e      	bne.n	8001fac <HAL_TIM_IRQHandler+0x16c>
 8001f6e:	687b      	ldr	r3, [r7, #4]
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	2211      	movs	r2, #17
 8001f74:	4252      	negs	r2, r2
 8001f76:	611a      	str	r2, [r3, #16]
 8001f78:	687b      	ldr	r3, [r7, #4]
 8001f7a:	2208      	movs	r2, #8
 8001f7c:	771a      	strb	r2, [r3, #28]
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	69da      	ldr	r2, [r3, #28]
 8001f84:	23c0      	movs	r3, #192	; 0xc0
 8001f86:	009b      	lsls	r3, r3, #2
 8001f88:	4013      	ands	r3, r2
 8001f8a:	d004      	beq.n	8001f96 <HAL_TIM_IRQHandler+0x156>
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	0018      	movs	r0, r3
 8001f90:	f000 f890 	bl	80020b4 <HAL_TIM_IC_CaptureCallback>
 8001f94:	e007      	b.n	8001fa6 <HAL_TIM_IRQHandler+0x166>
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	0018      	movs	r0, r3
 8001f9a:	f000 f883 	bl	80020a4 <HAL_TIM_OC_DelayElapsedCallback>
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	0018      	movs	r0, r3
 8001fa2:	f000 f88f 	bl	80020c4 <HAL_TIM_PWM_PulseFinishedCallback>
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	2200      	movs	r2, #0
 8001faa:	771a      	strb	r2, [r3, #28]
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	691b      	ldr	r3, [r3, #16]
 8001fb2:	2201      	movs	r2, #1
 8001fb4:	4013      	ands	r3, r2
 8001fb6:	2b01      	cmp	r3, #1
 8001fb8:	d10f      	bne.n	8001fda <HAL_TIM_IRQHandler+0x19a>
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	68db      	ldr	r3, [r3, #12]
 8001fc0:	2201      	movs	r2, #1
 8001fc2:	4013      	ands	r3, r2
 8001fc4:	2b01      	cmp	r3, #1
 8001fc6:	d108      	bne.n	8001fda <HAL_TIM_IRQHandler+0x19a>
 8001fc8:	687b      	ldr	r3, [r7, #4]
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	2202      	movs	r2, #2
 8001fce:	4252      	negs	r2, r2
 8001fd0:	611a      	str	r2, [r3, #16]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	0018      	movs	r0, r3
 8001fd6:	f7fe fe2b 	bl	8000c30 <HAL_TIM_PeriodElapsedCallback>
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	691b      	ldr	r3, [r3, #16]
 8001fe0:	2280      	movs	r2, #128	; 0x80
 8001fe2:	4013      	ands	r3, r2
 8001fe4:	2b80      	cmp	r3, #128	; 0x80
 8001fe6:	d10f      	bne.n	8002008 <HAL_TIM_IRQHandler+0x1c8>
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	68db      	ldr	r3, [r3, #12]
 8001fee:	2280      	movs	r2, #128	; 0x80
 8001ff0:	4013      	ands	r3, r2
 8001ff2:	2b80      	cmp	r3, #128	; 0x80
 8001ff4:	d108      	bne.n	8002008 <HAL_TIM_IRQHandler+0x1c8>
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	2281      	movs	r2, #129	; 0x81
 8001ffc:	4252      	negs	r2, r2
 8001ffe:	611a      	str	r2, [r3, #16]
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	0018      	movs	r0, r3
 8002004:	f000 f8e2 	bl	80021cc <HAL_TIMEx_BreakCallback>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	691a      	ldr	r2, [r3, #16]
 800200e:	2380      	movs	r3, #128	; 0x80
 8002010:	005b      	lsls	r3, r3, #1
 8002012:	401a      	ands	r2, r3
 8002014:	2380      	movs	r3, #128	; 0x80
 8002016:	005b      	lsls	r3, r3, #1
 8002018:	429a      	cmp	r2, r3
 800201a:	d10e      	bne.n	800203a <HAL_TIM_IRQHandler+0x1fa>
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	68db      	ldr	r3, [r3, #12]
 8002022:	2280      	movs	r2, #128	; 0x80
 8002024:	4013      	ands	r3, r2
 8002026:	2b80      	cmp	r3, #128	; 0x80
 8002028:	d107      	bne.n	800203a <HAL_TIM_IRQHandler+0x1fa>
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	4a1c      	ldr	r2, [pc, #112]	; (80020a0 <HAL_TIM_IRQHandler+0x260>)
 8002030:	611a      	str	r2, [r3, #16]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	0018      	movs	r0, r3
 8002036:	f000 f8d1 	bl	80021dc <HAL_TIMEx_Break2Callback>
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	681b      	ldr	r3, [r3, #0]
 800203e:	691b      	ldr	r3, [r3, #16]
 8002040:	2240      	movs	r2, #64	; 0x40
 8002042:	4013      	ands	r3, r2
 8002044:	2b40      	cmp	r3, #64	; 0x40
 8002046:	d10f      	bne.n	8002068 <HAL_TIM_IRQHandler+0x228>
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	68db      	ldr	r3, [r3, #12]
 800204e:	2240      	movs	r2, #64	; 0x40
 8002050:	4013      	ands	r3, r2
 8002052:	2b40      	cmp	r3, #64	; 0x40
 8002054:	d108      	bne.n	8002068 <HAL_TIM_IRQHandler+0x228>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	2241      	movs	r2, #65	; 0x41
 800205c:	4252      	negs	r2, r2
 800205e:	611a      	str	r2, [r3, #16]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	0018      	movs	r0, r3
 8002064:	f000 f836 	bl	80020d4 <HAL_TIM_TriggerCallback>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	691b      	ldr	r3, [r3, #16]
 800206e:	2220      	movs	r2, #32
 8002070:	4013      	ands	r3, r2
 8002072:	2b20      	cmp	r3, #32
 8002074:	d10f      	bne.n	8002096 <HAL_TIM_IRQHandler+0x256>
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	68db      	ldr	r3, [r3, #12]
 800207c:	2220      	movs	r2, #32
 800207e:	4013      	ands	r3, r2
 8002080:	2b20      	cmp	r3, #32
 8002082:	d108      	bne.n	8002096 <HAL_TIM_IRQHandler+0x256>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	2221      	movs	r2, #33	; 0x21
 800208a:	4252      	negs	r2, r2
 800208c:	611a      	str	r2, [r3, #16]
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	0018      	movs	r0, r3
 8002092:	f000 f893 	bl	80021bc <HAL_TIMEx_CommutCallback>
 8002096:	46c0      	nop			; (mov r8, r8)
 8002098:	46bd      	mov	sp, r7
 800209a:	b002      	add	sp, #8
 800209c:	bd80      	pop	{r7, pc}
 800209e:	46c0      	nop			; (mov r8, r8)
 80020a0:	fffffeff 	.word	0xfffffeff

080020a4 <HAL_TIM_OC_DelayElapsedCallback>:
 80020a4:	b580      	push	{r7, lr}
 80020a6:	b082      	sub	sp, #8
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	6078      	str	r0, [r7, #4]
 80020ac:	46c0      	nop			; (mov r8, r8)
 80020ae:	46bd      	mov	sp, r7
 80020b0:	b002      	add	sp, #8
 80020b2:	bd80      	pop	{r7, pc}

080020b4 <HAL_TIM_IC_CaptureCallback>:
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b082      	sub	sp, #8
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	6078      	str	r0, [r7, #4]
 80020bc:	46c0      	nop			; (mov r8, r8)
 80020be:	46bd      	mov	sp, r7
 80020c0:	b002      	add	sp, #8
 80020c2:	bd80      	pop	{r7, pc}

080020c4 <HAL_TIM_PWM_PulseFinishedCallback>:
 80020c4:	b580      	push	{r7, lr}
 80020c6:	b082      	sub	sp, #8
 80020c8:	af00      	add	r7, sp, #0
 80020ca:	6078      	str	r0, [r7, #4]
 80020cc:	46c0      	nop			; (mov r8, r8)
 80020ce:	46bd      	mov	sp, r7
 80020d0:	b002      	add	sp, #8
 80020d2:	bd80      	pop	{r7, pc}

080020d4 <HAL_TIM_TriggerCallback>:
 80020d4:	b580      	push	{r7, lr}
 80020d6:	b082      	sub	sp, #8
 80020d8:	af00      	add	r7, sp, #0
 80020da:	6078      	str	r0, [r7, #4]
 80020dc:	46c0      	nop			; (mov r8, r8)
 80020de:	46bd      	mov	sp, r7
 80020e0:	b002      	add	sp, #8
 80020e2:	bd80      	pop	{r7, pc}

080020e4 <TIM_Base_SetConfig>:
 80020e4:	b580      	push	{r7, lr}
 80020e6:	b084      	sub	sp, #16
 80020e8:	af00      	add	r7, sp, #0
 80020ea:	6078      	str	r0, [r7, #4]
 80020ec:	6039      	str	r1, [r7, #0]
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	681b      	ldr	r3, [r3, #0]
 80020f2:	60fb      	str	r3, [r7, #12]
 80020f4:	687b      	ldr	r3, [r7, #4]
 80020f6:	4a2b      	ldr	r2, [pc, #172]	; (80021a4 <TIM_Base_SetConfig+0xc0>)
 80020f8:	4293      	cmp	r3, r2
 80020fa:	d003      	beq.n	8002104 <TIM_Base_SetConfig+0x20>
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	4a2a      	ldr	r2, [pc, #168]	; (80021a8 <TIM_Base_SetConfig+0xc4>)
 8002100:	4293      	cmp	r3, r2
 8002102:	d108      	bne.n	8002116 <TIM_Base_SetConfig+0x32>
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	2270      	movs	r2, #112	; 0x70
 8002108:	4393      	bics	r3, r2
 800210a:	60fb      	str	r3, [r7, #12]
 800210c:	683b      	ldr	r3, [r7, #0]
 800210e:	685b      	ldr	r3, [r3, #4]
 8002110:	68fa      	ldr	r2, [r7, #12]
 8002112:	4313      	orrs	r3, r2
 8002114:	60fb      	str	r3, [r7, #12]
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	4a22      	ldr	r2, [pc, #136]	; (80021a4 <TIM_Base_SetConfig+0xc0>)
 800211a:	4293      	cmp	r3, r2
 800211c:	d00f      	beq.n	800213e <TIM_Base_SetConfig+0x5a>
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	4a21      	ldr	r2, [pc, #132]	; (80021a8 <TIM_Base_SetConfig+0xc4>)
 8002122:	4293      	cmp	r3, r2
 8002124:	d00b      	beq.n	800213e <TIM_Base_SetConfig+0x5a>
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	4a20      	ldr	r2, [pc, #128]	; (80021ac <TIM_Base_SetConfig+0xc8>)
 800212a:	4293      	cmp	r3, r2
 800212c:	d007      	beq.n	800213e <TIM_Base_SetConfig+0x5a>
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	4a1f      	ldr	r2, [pc, #124]	; (80021b0 <TIM_Base_SetConfig+0xcc>)
 8002132:	4293      	cmp	r3, r2
 8002134:	d003      	beq.n	800213e <TIM_Base_SetConfig+0x5a>
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	4a1e      	ldr	r2, [pc, #120]	; (80021b4 <TIM_Base_SetConfig+0xd0>)
 800213a:	4293      	cmp	r3, r2
 800213c:	d108      	bne.n	8002150 <TIM_Base_SetConfig+0x6c>
 800213e:	68fb      	ldr	r3, [r7, #12]
 8002140:	4a1d      	ldr	r2, [pc, #116]	; (80021b8 <TIM_Base_SetConfig+0xd4>)
 8002142:	4013      	ands	r3, r2
 8002144:	60fb      	str	r3, [r7, #12]
 8002146:	683b      	ldr	r3, [r7, #0]
 8002148:	68db      	ldr	r3, [r3, #12]
 800214a:	68fa      	ldr	r2, [r7, #12]
 800214c:	4313      	orrs	r3, r2
 800214e:	60fb      	str	r3, [r7, #12]
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	2280      	movs	r2, #128	; 0x80
 8002154:	4393      	bics	r3, r2
 8002156:	001a      	movs	r2, r3
 8002158:	683b      	ldr	r3, [r7, #0]
 800215a:	695b      	ldr	r3, [r3, #20]
 800215c:	4313      	orrs	r3, r2
 800215e:	60fb      	str	r3, [r7, #12]
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	68fa      	ldr	r2, [r7, #12]
 8002164:	601a      	str	r2, [r3, #0]
 8002166:	683b      	ldr	r3, [r7, #0]
 8002168:	689a      	ldr	r2, [r3, #8]
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	62da      	str	r2, [r3, #44]	; 0x2c
 800216e:	683b      	ldr	r3, [r7, #0]
 8002170:	681a      	ldr	r2, [r3, #0]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	629a      	str	r2, [r3, #40]	; 0x28
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	4a0a      	ldr	r2, [pc, #40]	; (80021a4 <TIM_Base_SetConfig+0xc0>)
 800217a:	4293      	cmp	r3, r2
 800217c:	d007      	beq.n	800218e <TIM_Base_SetConfig+0xaa>
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	4a0b      	ldr	r2, [pc, #44]	; (80021b0 <TIM_Base_SetConfig+0xcc>)
 8002182:	4293      	cmp	r3, r2
 8002184:	d003      	beq.n	800218e <TIM_Base_SetConfig+0xaa>
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	4a0a      	ldr	r2, [pc, #40]	; (80021b4 <TIM_Base_SetConfig+0xd0>)
 800218a:	4293      	cmp	r3, r2
 800218c:	d103      	bne.n	8002196 <TIM_Base_SetConfig+0xb2>
 800218e:	683b      	ldr	r3, [r7, #0]
 8002190:	691a      	ldr	r2, [r3, #16]
 8002192:	687b      	ldr	r3, [r7, #4]
 8002194:	631a      	str	r2, [r3, #48]	; 0x30
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	2201      	movs	r2, #1
 800219a:	615a      	str	r2, [r3, #20]
 800219c:	46c0      	nop			; (mov r8, r8)
 800219e:	46bd      	mov	sp, r7
 80021a0:	b004      	add	sp, #16
 80021a2:	bd80      	pop	{r7, pc}
 80021a4:	40012c00 	.word	0x40012c00
 80021a8:	40000400 	.word	0x40000400
 80021ac:	40002000 	.word	0x40002000
 80021b0:	40014400 	.word	0x40014400
 80021b4:	40014800 	.word	0x40014800
 80021b8:	fffffcff 	.word	0xfffffcff

080021bc <HAL_TIMEx_CommutCallback>:
 80021bc:	b580      	push	{r7, lr}
 80021be:	b082      	sub	sp, #8
 80021c0:	af00      	add	r7, sp, #0
 80021c2:	6078      	str	r0, [r7, #4]
 80021c4:	46c0      	nop			; (mov r8, r8)
 80021c6:	46bd      	mov	sp, r7
 80021c8:	b002      	add	sp, #8
 80021ca:	bd80      	pop	{r7, pc}

080021cc <HAL_TIMEx_BreakCallback>:
 80021cc:	b580      	push	{r7, lr}
 80021ce:	b082      	sub	sp, #8
 80021d0:	af00      	add	r7, sp, #0
 80021d2:	6078      	str	r0, [r7, #4]
 80021d4:	46c0      	nop			; (mov r8, r8)
 80021d6:	46bd      	mov	sp, r7
 80021d8:	b002      	add	sp, #8
 80021da:	bd80      	pop	{r7, pc}

080021dc <HAL_TIMEx_Break2Callback>:
 80021dc:	b580      	push	{r7, lr}
 80021de:	b082      	sub	sp, #8
 80021e0:	af00      	add	r7, sp, #0
 80021e2:	6078      	str	r0, [r7, #4]
 80021e4:	46c0      	nop			; (mov r8, r8)
 80021e6:	46bd      	mov	sp, r7
 80021e8:	b002      	add	sp, #8
 80021ea:	bd80      	pop	{r7, pc}

080021ec <__errno>:
 80021ec:	4b01      	ldr	r3, [pc, #4]	; (80021f4 <__errno+0x8>)
 80021ee:	6818      	ldr	r0, [r3, #0]
 80021f0:	4770      	bx	lr
 80021f2:	46c0      	nop			; (mov r8, r8)
 80021f4:	20000010 	.word	0x20000010

080021f8 <__libc_init_array>:
 80021f8:	b570      	push	{r4, r5, r6, lr}
 80021fa:	2600      	movs	r6, #0
 80021fc:	4d0c      	ldr	r5, [pc, #48]	; (8002230 <__libc_init_array+0x38>)
 80021fe:	4c0d      	ldr	r4, [pc, #52]	; (8002234 <__libc_init_array+0x3c>)
 8002200:	1b64      	subs	r4, r4, r5
 8002202:	10a4      	asrs	r4, r4, #2
 8002204:	42a6      	cmp	r6, r4
 8002206:	d109      	bne.n	800221c <__libc_init_array+0x24>
 8002208:	2600      	movs	r6, #0
 800220a:	f000 f8cf 	bl	80023ac <_init>
 800220e:	4d0a      	ldr	r5, [pc, #40]	; (8002238 <__libc_init_array+0x40>)
 8002210:	4c0a      	ldr	r4, [pc, #40]	; (800223c <__libc_init_array+0x44>)
 8002212:	1b64      	subs	r4, r4, r5
 8002214:	10a4      	asrs	r4, r4, #2
 8002216:	42a6      	cmp	r6, r4
 8002218:	d105      	bne.n	8002226 <__libc_init_array+0x2e>
 800221a:	bd70      	pop	{r4, r5, r6, pc}
 800221c:	00b3      	lsls	r3, r6, #2
 800221e:	58eb      	ldr	r3, [r5, r3]
 8002220:	4798      	blx	r3
 8002222:	3601      	adds	r6, #1
 8002224:	e7ee      	b.n	8002204 <__libc_init_array+0xc>
 8002226:	00b3      	lsls	r3, r6, #2
 8002228:	58eb      	ldr	r3, [r5, r3]
 800222a:	4798      	blx	r3
 800222c:	3601      	adds	r6, #1
 800222e:	e7f2      	b.n	8002216 <__libc_init_array+0x1e>
 8002230:	08002404 	.word	0x08002404
 8002234:	08002404 	.word	0x08002404
 8002238:	08002404 	.word	0x08002404
 800223c:	08002408 	.word	0x08002408

08002240 <memset>:
 8002240:	0003      	movs	r3, r0
 8002242:	1812      	adds	r2, r2, r0
 8002244:	4293      	cmp	r3, r2
 8002246:	d100      	bne.n	800224a <memset+0xa>
 8002248:	4770      	bx	lr
 800224a:	7019      	strb	r1, [r3, #0]
 800224c:	3301      	adds	r3, #1
 800224e:	e7f9      	b.n	8002244 <memset+0x4>

08002250 <rand>:
 8002250:	4b12      	ldr	r3, [pc, #72]	; (800229c <rand+0x4c>)
 8002252:	b510      	push	{r4, lr}
 8002254:	681c      	ldr	r4, [r3, #0]
 8002256:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002258:	2b00      	cmp	r3, #0
 800225a:	d10f      	bne.n	800227c <rand+0x2c>
 800225c:	2018      	movs	r0, #24
 800225e:	f000 f829 	bl	80022b4 <malloc>
 8002262:	4b0f      	ldr	r3, [pc, #60]	; (80022a0 <rand+0x50>)
 8002264:	63a0      	str	r0, [r4, #56]	; 0x38
 8002266:	6003      	str	r3, [r0, #0]
 8002268:	4b0e      	ldr	r3, [pc, #56]	; (80022a4 <rand+0x54>)
 800226a:	2201      	movs	r2, #1
 800226c:	6043      	str	r3, [r0, #4]
 800226e:	4b0e      	ldr	r3, [pc, #56]	; (80022a8 <rand+0x58>)
 8002270:	6083      	str	r3, [r0, #8]
 8002272:	230b      	movs	r3, #11
 8002274:	8183      	strh	r3, [r0, #12]
 8002276:	2300      	movs	r3, #0
 8002278:	6102      	str	r2, [r0, #16]
 800227a:	6143      	str	r3, [r0, #20]
 800227c:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 800227e:	4a0b      	ldr	r2, [pc, #44]	; (80022ac <rand+0x5c>)
 8002280:	6920      	ldr	r0, [r4, #16]
 8002282:	6961      	ldr	r1, [r4, #20]
 8002284:	4b0a      	ldr	r3, [pc, #40]	; (80022b0 <rand+0x60>)
 8002286:	f7fd ffc7 	bl	8000218 <__aeabi_lmul>
 800228a:	2201      	movs	r2, #1
 800228c:	2300      	movs	r3, #0
 800228e:	1880      	adds	r0, r0, r2
 8002290:	4159      	adcs	r1, r3
 8002292:	6120      	str	r0, [r4, #16]
 8002294:	6161      	str	r1, [r4, #20]
 8002296:	0048      	lsls	r0, r1, #1
 8002298:	0840      	lsrs	r0, r0, #1
 800229a:	bd10      	pop	{r4, pc}
 800229c:	20000010 	.word	0x20000010
 80022a0:	abcd330e 	.word	0xabcd330e
 80022a4:	e66d1234 	.word	0xe66d1234
 80022a8:	0005deec 	.word	0x0005deec
 80022ac:	4c957f2d 	.word	0x4c957f2d
 80022b0:	5851f42d 	.word	0x5851f42d

080022b4 <malloc>:
 80022b4:	b510      	push	{r4, lr}
 80022b6:	4b03      	ldr	r3, [pc, #12]	; (80022c4 <malloc+0x10>)
 80022b8:	0001      	movs	r1, r0
 80022ba:	6818      	ldr	r0, [r3, #0]
 80022bc:	f000 f804 	bl	80022c8 <_malloc_r>
 80022c0:	bd10      	pop	{r4, pc}
 80022c2:	46c0      	nop			; (mov r8, r8)
 80022c4:	20000010 	.word	0x20000010

080022c8 <_malloc_r>:
 80022c8:	2303      	movs	r3, #3
 80022ca:	b570      	push	{r4, r5, r6, lr}
 80022cc:	1ccd      	adds	r5, r1, #3
 80022ce:	439d      	bics	r5, r3
 80022d0:	3508      	adds	r5, #8
 80022d2:	0006      	movs	r6, r0
 80022d4:	2d0c      	cmp	r5, #12
 80022d6:	d21e      	bcs.n	8002316 <_malloc_r+0x4e>
 80022d8:	250c      	movs	r5, #12
 80022da:	42a9      	cmp	r1, r5
 80022dc:	d81d      	bhi.n	800231a <_malloc_r+0x52>
 80022de:	0030      	movs	r0, r6
 80022e0:	f000 f862 	bl	80023a8 <__malloc_lock>
 80022e4:	4a25      	ldr	r2, [pc, #148]	; (800237c <_malloc_r+0xb4>)
 80022e6:	6814      	ldr	r4, [r2, #0]
 80022e8:	0021      	movs	r1, r4
 80022ea:	2900      	cmp	r1, #0
 80022ec:	d119      	bne.n	8002322 <_malloc_r+0x5a>
 80022ee:	4c24      	ldr	r4, [pc, #144]	; (8002380 <_malloc_r+0xb8>)
 80022f0:	6823      	ldr	r3, [r4, #0]
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d103      	bne.n	80022fe <_malloc_r+0x36>
 80022f6:	0030      	movs	r0, r6
 80022f8:	f000 f844 	bl	8002384 <_sbrk_r>
 80022fc:	6020      	str	r0, [r4, #0]
 80022fe:	0029      	movs	r1, r5
 8002300:	0030      	movs	r0, r6
 8002302:	f000 f83f 	bl	8002384 <_sbrk_r>
 8002306:	1c43      	adds	r3, r0, #1
 8002308:	d12b      	bne.n	8002362 <_malloc_r+0x9a>
 800230a:	230c      	movs	r3, #12
 800230c:	0030      	movs	r0, r6
 800230e:	6033      	str	r3, [r6, #0]
 8002310:	f000 f84b 	bl	80023aa <__malloc_unlock>
 8002314:	e003      	b.n	800231e <_malloc_r+0x56>
 8002316:	2d00      	cmp	r5, #0
 8002318:	dadf      	bge.n	80022da <_malloc_r+0x12>
 800231a:	230c      	movs	r3, #12
 800231c:	6033      	str	r3, [r6, #0]
 800231e:	2000      	movs	r0, #0
 8002320:	bd70      	pop	{r4, r5, r6, pc}
 8002322:	680b      	ldr	r3, [r1, #0]
 8002324:	1b5b      	subs	r3, r3, r5
 8002326:	d419      	bmi.n	800235c <_malloc_r+0x94>
 8002328:	2b0b      	cmp	r3, #11
 800232a:	d903      	bls.n	8002334 <_malloc_r+0x6c>
 800232c:	600b      	str	r3, [r1, #0]
 800232e:	18cc      	adds	r4, r1, r3
 8002330:	6025      	str	r5, [r4, #0]
 8002332:	e003      	b.n	800233c <_malloc_r+0x74>
 8002334:	684b      	ldr	r3, [r1, #4]
 8002336:	428c      	cmp	r4, r1
 8002338:	d10d      	bne.n	8002356 <_malloc_r+0x8e>
 800233a:	6013      	str	r3, [r2, #0]
 800233c:	0030      	movs	r0, r6
 800233e:	f000 f834 	bl	80023aa <__malloc_unlock>
 8002342:	0020      	movs	r0, r4
 8002344:	2207      	movs	r2, #7
 8002346:	300b      	adds	r0, #11
 8002348:	1d23      	adds	r3, r4, #4
 800234a:	4390      	bics	r0, r2
 800234c:	1ac3      	subs	r3, r0, r3
 800234e:	d0e7      	beq.n	8002320 <_malloc_r+0x58>
 8002350:	425a      	negs	r2, r3
 8002352:	50e2      	str	r2, [r4, r3]
 8002354:	e7e4      	b.n	8002320 <_malloc_r+0x58>
 8002356:	6063      	str	r3, [r4, #4]
 8002358:	000c      	movs	r4, r1
 800235a:	e7ef      	b.n	800233c <_malloc_r+0x74>
 800235c:	000c      	movs	r4, r1
 800235e:	6849      	ldr	r1, [r1, #4]
 8002360:	e7c3      	b.n	80022ea <_malloc_r+0x22>
 8002362:	2303      	movs	r3, #3
 8002364:	1cc4      	adds	r4, r0, #3
 8002366:	439c      	bics	r4, r3
 8002368:	42a0      	cmp	r0, r4
 800236a:	d0e1      	beq.n	8002330 <_malloc_r+0x68>
 800236c:	1a21      	subs	r1, r4, r0
 800236e:	0030      	movs	r0, r6
 8002370:	f000 f808 	bl	8002384 <_sbrk_r>
 8002374:	1c43      	adds	r3, r0, #1
 8002376:	d1db      	bne.n	8002330 <_malloc_r+0x68>
 8002378:	e7c7      	b.n	800230a <_malloc_r+0x42>
 800237a:	46c0      	nop			; (mov r8, r8)
 800237c:	200000a4 	.word	0x200000a4
 8002380:	200000a8 	.word	0x200000a8

08002384 <_sbrk_r>:
 8002384:	2300      	movs	r3, #0
 8002386:	b570      	push	{r4, r5, r6, lr}
 8002388:	4c06      	ldr	r4, [pc, #24]	; (80023a4 <_sbrk_r+0x20>)
 800238a:	0005      	movs	r5, r0
 800238c:	0008      	movs	r0, r1
 800238e:	6023      	str	r3, [r4, #0]
 8002390:	f7fe fbca 	bl	8000b28 <_sbrk>
 8002394:	1c43      	adds	r3, r0, #1
 8002396:	d103      	bne.n	80023a0 <_sbrk_r+0x1c>
 8002398:	6823      	ldr	r3, [r4, #0]
 800239a:	2b00      	cmp	r3, #0
 800239c:	d000      	beq.n	80023a0 <_sbrk_r+0x1c>
 800239e:	602b      	str	r3, [r5, #0]
 80023a0:	bd70      	pop	{r4, r5, r6, pc}
 80023a2:	46c0      	nop			; (mov r8, r8)
 80023a4:	200000f4 	.word	0x200000f4

080023a8 <__malloc_lock>:
 80023a8:	4770      	bx	lr

080023aa <__malloc_unlock>:
 80023aa:	4770      	bx	lr

080023ac <_init>:
 80023ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023ae:	46c0      	nop			; (mov r8, r8)
 80023b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80023b2:	bc08      	pop	{r3}
 80023b4:	469e      	mov	lr, r3
 80023b6:	4770      	bx	lr

080023b8 <_fini>:
 80023b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80023ba:	46c0      	nop			; (mov r8, r8)
 80023bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80023be:	bc08      	pop	{r3}
 80023c0:	469e      	mov	lr, r3
 80023c2:	4770      	bx	lr
